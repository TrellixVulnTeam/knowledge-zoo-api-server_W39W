{
"name":"Amazon Video", 
"SHA256":"1718d6e0379e8d260d8fed61c26bb47c88f16b033e2b98bbecbc72bb25ae7da5", 
"versionCode":"401011500", 
"versionName":"4.1.115", 
"size":43354140, 
"minSDKVersion":"21", 
"certificate(fingerprint)":"2F:19:AD:EB:28:4E:B3:6F:7F:07:78:61:52:B9:A1:D1:4B:21:65:32:03:AD:0B:04:EB:BF:9C:73:AB:6D:76:25", 
"certificate(owner)":"Common Name: Amazon Self-Sign CA, Organizational Unit: Java Object Signing O=Amazon Services LLC L=Las Vegas, State/Province: Nevada C=US", 
"permission":["android.permission.ACCESS_WIFI_STATE", "android.permission.INTERNET", "android.permission.WAKE_LOCK", "android.permission.ACCESS_NETWORK_STATE", "android.permission.WRITE_EXTERNAL_STORAGE"], 
"API":["java.lang.Object.<init>()", "java.lang.Object.notify()", "java.lang.Object.toString()", "java.lang.Object.getClass()", "java.lang.Object.equals(java.lang.Object)", "java.lang.Object.finalize()", "java.lang.Object.clone()", "java.lang.Object.wait()", "java.lang.System.loadLibrary(java.lang.String)", "java.lang.System.arraycopy(long,long,java.lang.Object,long,java.lang.Object)", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.currentTimeMillis()", "java.lang.System.getProperty(java.lang.String,java.lang.String)", "java.lang.System.exit(long)", "android.app.Application.<init>()", "android.app.Application.onCreate()", "android.content.Context.getFilesDir()", "android.content.Context.getSystemService(java.lang.String)", "android.content.Context.getContentResolver()", "android.content.Context.getPackageName()", "android.content.Context.getPackageManager()", "android.content.Context.getClassLoader()", "java.io.File.getAbsolutePath()", "java.io.File.<init>(java.lang.String)", "java.io.File.<init>(java.lang.String,java.io.File)", "java.io.File.exists()", "java.io.File.delete()", "java.io.File.getPath()", "java.io.File.mkdirs()", "java.io.File.isFile()", "java.io.File.createTempFile(java.lang.String,java.lang.String)", "java.io.File.deleteOnExit()", "java.io.File.length()", "java.io.File.lastModified()", "java.io.File.isDirectory()", "java.io.File.getName()", "java.io.File.list()", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)", "java.util.Locale.getAvailableLocales()", "java.util.Locale.toLanguageTag()", "java.util.Locale.forLanguageTag(java.lang.String)", "java.util.Locale.getDefault()", "java.util.ArrayList.<init>(long)", "java.util.ArrayList.add(java.lang.Object)", "java.util.ArrayList.size()", "java.util.ArrayList.toArray([Ljava.lang.Object)", "java.util.ArrayList.<init>()", "java.util.ArrayList.<init>(java.util.Collection)", "java.util.ArrayList.get(long)", "java.util.ArrayList.remove(long)", "android.speech.tts.TextToSpeech.isLanguageAvailable(java.util.Locale)", "android.speech.tts.TextToSpeech.setLanguage(java.util.Locale)", "android.speech.tts.TextToSpeech.speak(java.util.HashMap,long,java.lang.String)", "android.speech.tts.TextToSpeech.stop()", "android.speech.tts.TextToSpeech.<init>(android.speech.tts.TextToSpeech.OnInitListener,android.content.Context)", "android.speech.tts.TextToSpeech.setAudioAttributes(android.media.AudioAttributes)", "java.lang.StringBuilder.<init>()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(java.lang.String)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.util.HashMap.<init>()", "java.util.HashMap.containsKey(java.lang.Object)", "java.util.HashMap.get(java.lang.Object)", "java.util.HashMap.<init>(long)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)", "android.media.AudioAttributes.Builder.<init>()", "android.media.AudioAttributes.Builder.setUsage(long)", "android.media.AudioAttributes.Builder.build()", "android.view.accessibility.AccessibilityManager.isEnabled()", "android.view.accessibility.AccessibilityManager.getEnabledAccessibilityServiceList(long)", "java.util.List.size()", "java.util.List.add(java.lang.Object)", "java.util.List.toArray([Ljava.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.get(long)", "java.util.List.iterator()", "java.util.List.clear()", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.edit()", "java.lang.String.equals(java.lang.Object)", "java.lang.String.format([Ljava.lang.Object,java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)", "java.lang.String.length()", "java.lang.String.isEmpty()", "java.lang.String.split(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(long)", "java.lang.String.charAt(long)", "java.lang.String.matches(java.lang.String)", "java.lang.String.<init>(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.<init>(long,long,long)", "java.lang.String.trim()", "java.lang.String.hashCode()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.substring(long,long)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase(java.util.Locale)", "java.lang.String.substring(long)", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.<init>(java.lang.String,long)", "java.lang.String.<init>(java.lang.String,long,long,long)", "java.lang.String.valueOf(long)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.valueOf(long)", "java.lang.String.valueOf(long)", "java.lang.String.replace(long,long)", "java.lang.String.toString()", "java.lang.String.getBytes()", "java.lang.String.<init>(long)", "java.lang.String.<init>(long)", "android.content.SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.Editor.apply()", "java.lang.Class.getSimpleName()", "java.lang.Class.getMethod([Ljava.lang.Class,java.lang.String)", "java.lang.Class.newInstance()", "java.lang.Class.desiredAssertionStatus()", "android.view.SurfaceView.getHeight()", "android.view.SurfaceView.getWidth()", "android.view.SurfaceView.getLayoutParams()", "android.view.SurfaceView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.SurfaceView.<init>(android.content.Context)", "java.io.BufferedInputStream.<init>(java.io.InputStream)", "android.system.Os.symlink(java.lang.String,java.lang.String)", "java.lang.IllegalStateException.<init>(java.lang.String)", "java.lang.IllegalStateException.<init>()", "java.io.FileOutputStream.<init>(java.io.File)", "java.io.OutputStream.write(long,long,long)", "java.io.OutputStream.close()", "java.io.OutputStream.<init>()", "java.io.OutputStream.flush()", "java.io.OutputStream.write(long)", "java.io.OutputStream.write(long)", "android.content.res.AssetManager.open(java.lang.String)", "java.lang.Exception.getMessage()", "java.lang.Exception.<init>(java.lang.String)", "java.lang.Exception.<init>(java.lang.Throwable,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.Throwable,java.lang.String,java.lang.String)", "android.media.AudioTrack.getMinBufferSize(long,long,long)", "android.media.AudioTrack.<init>(long,long,long,long,long,long)", "android.media.AudioTrack.getState()", "android.media.AudioTrack.play()", "android.media.AudioTrack.flush()", "android.media.AudioTrack.getPlaybackHeadPosition()", "android.media.AudioTrack.pause()", "android.media.AudioTrack.release()", "android.media.AudioTrack.stop()", "android.media.AudioTrack.write(long,long,long)", "android.media.AudioTrack.getChannelCount()", "android.media.AudioTrack.getAudioFormat()", "android.media.AudioTrack.getSampleRate()", "android.media.AudioTrack.write(long,long,long)", "java.util.UUID.<init>(long,long)", "android.app.ActivityManager.MemoryInfo.<init>()", "android.app.ActivityManager.getMemoryInfo(android.app.ActivityManager.MemoryInfo)", "android.media.AudioManager.getDevices(long)", "android.media.AudioManager.abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)", "android.media.AudioManager.requestAudioFocus(long,long,android.media.AudioManager.OnAudioFocusChangeListener)", "android.media.AudioDeviceInfo.getChannelCounts()", "android.media.AudioDeviceInfo.getEncodings()", "android.media.MediaCodecList.<init>(long)", "android.media.MediaCodecList.getCodecInfos()", "android.media.MediaCodecList.findDecoderForFormat(android.media.MediaFormat)", "android.media.MediaCodecInfo.getSupportedTypes()", "android.provider.Settings.Secure.getString(java.lang.String,android.content.ContentResolver)", "android.view.WindowManager.getDefaultDisplay()", "android.content.pm.PackageManager.getPackageInfo(long,java.lang.String)", "android.content.pm.PackageManager.hasSystemFeature(java.lang.String)", "android.media.MediaDrm.<init>(java.util.UUID)", "android.media.MediaDrm.getPropertyString(java.lang.String)", "android.media.MediaDrm.getKeyRequest(java.util.HashMap,long,java.lang.String,long,long)", "android.media.MediaDrm.openSession()", "android.media.MediaDrm.provideKeyResponse(long,long)", "android.media.MediaDrm.queryKeyStatus(long)", "android.media.MediaDrm.closeSession(long)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.valueOf(long)", "java.lang.Integer.toHexString(long)", "java.lang.Integer.parseInt(long,java.lang.String)", "java.lang.Integer.toString(long,long)", "java.lang.Integer.rotateLeft(long,long)", "java.lang.Integer.toBinaryString(long)", "java.lang.Integer.intValue()", "java.io.PrintStream.println(java.lang.String)", "android.graphics.Point.<init>()", "android.view.Display.getRealSize(android.graphics.Point)", "android.view.Display.getFlags()", "android.view.Display.getSize(android.graphics.Point)", "android.view.Display.getRotation()", "android.provider.Settings.Global.getInt(long,java.lang.String,android.content.ContentResolver)", "android.net.wifi.WifiManager.getConnectionInfo()", "android.net.wifi.WifiManager.calculateSignalLevel(long,long)", "android.net.wifi.WifiInfo.getRssi()", "android.net.ConnectivityManager.getActiveNetworkInfo()", "android.net.NetworkInfo.getType()", "java.lang.Character.isDigit(long)", "java.lang.Character.digit(long,long)", "android.media.MediaFormat.createAudioFormat(long,long,java.lang.String)", "android.media.MediaFormat.createVideoFormat(long,long,java.lang.String)", "android.media.MediaFormat.setFeatureEnabled(long,java.lang.String)", "java.lang.Enum.<init>(long,java.lang.String)", "java.lang.Enum.valueOf(java.lang.String,java.lang.Class)", "android.database.sqlite.SQLiteOpenHelper.<init>(long,android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,android.content.Context)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.close()", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(long)", "android.database.Cursor.close()", "java.lang.Throwable.addSuppressed(java.lang.Throwable)", "java.lang.IllegalArgumentException.<init>(java.lang.String)", "java.lang.IllegalArgumentException.<init>()", "android.media.MediaDrm.KeyRequest.getData()", "java.nio.ByteBuffer.wrap(long,long,long)", "java.nio.ByteBuffer.getLong()", "java.nio.ByteBuffer.limit()", "java.nio.ByteBuffer.position()", "java.nio.ByteBuffer.array()", "java.nio.ByteBuffer.arrayOffset()", "java.nio.ByteBuffer.put(long)", "java.nio.ByteBuffer.limit(long)", "java.nio.ByteBuffer.rewind()", "java.nio.ByteBuffer.capacity()", "java.nio.ByteBuffer.allocate(long)", "java.nio.ByteBuffer.put(java.nio.ByteBuffer)", "java.nio.ByteBuffer.wrap(long)", "java.nio.ByteBuffer.remaining()", "android.content.BroadcastReceiver.<init>()", "android.content.Intent.getAction()", "android.content.Intent.getBooleanExtra(long,java.lang.String)", "java.lang.Math.round(long)", "java.lang.Math.abs(long)", "java.lang.Math.pow(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "android.view.Window.setFlags(long,long)", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.reflect.Method.invoke([Ljava.lang.Object,java.lang.Object)", "android.app.Activity.runOnUiThread(java.lang.Runnable)", "android.app.Activity.setTitle(java.lang.CharSequence)", "android.app.Activity.<init>()", "android.app.Activity.dispatchKeyEvent(android.view.KeyEvent)", "android.app.Activity.onCreate(android.os.Bundle)", "android.app.Activity.onDestroy()", "android.app.Activity.onLowMemory()", "android.app.Activity.onPause()", "android.app.Activity.onResume()", "android.app.Activity.onStart()", "android.app.Activity.onStop()", "android.app.Activity.onWindowFocusChanged(long)", "java.io.InputStream.<init>()", "java.io.InputStream.markSupported()", "java.io.InputStream.mark(long)", "java.io.InputStream.read(long)", "java.io.InputStream.reset()", "java.io.InputStream.close()", "java.io.InputStream.read(long,long,long)", "java.io.InputStream.available()", "java.io.InputStream.read()", "java.io.InputStream.skip(long)", "java.io.ByteArrayInputStream.<init>(long)", "java.io.ByteArrayInputStream.read(long,long,long)", "java.io.FileInputStream.<init>(java.io.File)", "java.io.FileInputStream.close()", "java.lang.UnsupportedOperationException.<init>()", "java.util.HashSet.<init>()", "java.util.Set.add(java.lang.Object)", "java.util.Set.isEmpty()", "java.util.Set.iterator()", "java.util.Set.toArray([Ljava.lang.Object)", "java.util.Set.remove(java.lang.Object)", "java.util.Collections.emptySet()", "java.util.Collections.unmodifiableMap(java.util.Map)", "java.util.Collections.enumeration(java.util.Collection)", "java.util.Collections.sort(java.util.List)", "java.util.Collections.unmodifiableList(java.util.List)", "java.util.Collections.sort(java.util.Comparator,java.util.List)", "java.util.EnumSet.copyOf(java.util.Collection)", "java.io.IOException.<init>()", "java.io.IOException.<init>(java.lang.String)", "java.io.IOException.getMessage()", "java.io.IOException.initCause(java.lang.Throwable)", "java.util.Date.<init>(long)", "java.util.Date.getTime()", "java.util.Date.<init>()", "java.io.FilterInputStream.<init>(java.io.InputStream)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.sort(java.util.Comparator,[Ljava.lang.Object)", "java.util.Arrays.asList([Ljava.lang.Object)", "java.util.Arrays.copyOf(long,long)", "java.util.zip.Inflater.<init>()", "java.util.zip.Inflater.setInput(long,long,long)", "java.util.zip.Inflater.inflate(long)", "java.util.zip.Inflater.end()", "java.util.zip.Inflater.<init>(long)", "java.util.zip.Inflater.reset()", "java.util.zip.Inflater.getBytesRead()", "java.util.zip.Inflater.finished()", "java.util.zip.Inflater.needsDictionary()", "java.util.zip.Inflater.needsInput()", "java.util.zip.Inflater.inflate(long,long,long)", "java.util.zip.Inflater.getRemaining()", "java.math.BigInteger.valueOf(long)", "java.math.BigInteger.toByteArray()", "java.math.BigInteger.<init>(long)", "java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.not()", "java.math.BigInteger.bitLength()", "java.math.BigInteger.longValue()", "java.math.BigInteger.testBit(long)", "java.math.BigInteger.setBit(long)", "java.math.BigInteger.equals(java.lang.Object)", "java.math.BigInteger.hashCode()", "java.math.BigInteger.<init>(long,long)", "java.lang.RuntimeException.<init>(java.lang.Throwable)", "java.lang.RuntimeException.<init>(java.lang.String)", "java.lang.RuntimeException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.Long.toOctalString(long)", "java.lang.Long.toString(long)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.toHexString(long)", "java.lang.Long.parseLong(long,java.lang.String)", "java.lang.Long.longValue()", "java.lang.Long.valueOf(long)", "java.util.concurrent.ConcurrentHashMap.<init>()", "java.util.Map.get(java.lang.Object)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.Map.clear()", "java.util.Map.entrySet()", "java.util.Map.containsKey(java.lang.Object)", "java.util.Map.remove(java.lang.Object)", "java.util.Map.keySet()", "java.util.Map.size()", "java.util.zip.ZipException.<init>(java.lang.String)", "java.util.zip.ZipException.getMessage()", "java.lang.InstantiationException.getMessage()", "java.lang.IllegalAccessException.getMessage()", "java.nio.charset.Charset.forName(java.lang.String)", "java.nio.charset.Charset.defaultCharset()", "java.nio.charset.Charset.newEncoder()", "java.nio.charset.Charset.newDecoder()", "java.util.zip.InflaterInputStream.<init>(java.util.zip.Inflater,java.io.InputStream)", "java.util.zip.InflaterInputStream.close()", "java.io.RandomAccessFile.seek(long)", "java.io.RandomAccessFile.read()", "java.io.RandomAccessFile.read(long,long,long)", "java.io.RandomAccessFile.<init>(java.lang.String,java.io.File)", "java.io.RandomAccessFile.close()", "java.io.RandomAccessFile.readFully(long)", "java.io.RandomAccessFile.getFilePointer()", "java.io.RandomAccessFile.skipBytes(long)", "java.io.RandomAccessFile.length()", "java.io.RandomAccessFile.setLength(long)", "java.io.RandomAccessFile.write(long,long,long)", "java.util.LinkedHashMap.<init>(long)", "java.util.LinkedHashMap.<init>(java.util.Map)", "java.util.LinkedHashMap.<init>()", "java.util.LinkedHashMap.put(java.lang.Object,java.lang.Object)", "java.util.LinkedHashMap.remove(java.lang.Object)", "java.util.LinkedHashMap.putAll(java.util.Map)", "java.util.LinkedHashMap.get(java.lang.Object)", "java.util.LinkedHashMap.values()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "java.util.Iterator.remove()", "java.util.Map.Entry.getKey()", "java.util.Map.Entry.getValue()", "java.io.EOFException.<init>()", "java.io.EOFException.<init>(java.lang.String)", "java.lang.NumberFormatException.<init>(java.lang.String)", "java.util.Calendar.getInstance()", "java.util.Calendar.set(long,long)", "java.util.Calendar.getTime()", "java.util.Calendar.setTimeInMillis(long)", "java.util.Calendar.get(long)", "java.util.zip.CRC32.<init>()", "java.util.zip.CRC32.update(long)", "java.util.zip.CRC32.getValue()", "java.util.zip.CRC32.update(long,long,long)", "java.util.zip.CRC32.reset()", "java.lang.NullPointerException.<init>()", "java.util.LinkedHashSet.<init>()", "java.util.LinkedHashSet.<init>(java.util.Collection)", "java.lang.reflect.Array.newInstance(long,java.lang.Class)", "java.util.BitSet.<init>(long)", "java.util.BitSet.set(long)", "java.util.BitSet.clear(long)", "java.util.BitSet.get(long)", "java.util.BitSet.nextClearBit(long)", "java.util.BitSet.nextSetBit(long)", "java.util.jar.Pack200.newPacker()", "java.util.jar.Pack200.newUnpacker()", "java.util.jar.Pack200.Packer.properties()", "java.util.jar.Pack200.Packer.pack(java.io.OutputStream,java.util.jar.JarFile)", "java.util.jar.Pack200.Packer.pack(java.io.OutputStream,java.util.jar.JarInputStream)", "java.util.SortedMap.putAll(java.util.Map)", "java.util.jar.JarFile.<init>(java.io.File)", "java.util.jar.JarFile.close()", "java.util.jar.JarOutputStream.<init>(java.io.OutputStream)", "java.util.jar.JarOutputStream.close()", "java.util.jar.Pack200.Unpacker.unpack(java.util.jar.JarOutputStream,java.io.File)", "java.util.jar.Pack200.Unpacker.properties()", "java.util.jar.Pack200.Unpacker.unpack(java.util.jar.JarOutputStream,java.io.InputStream)", "java.io.FilterOutputStream.<init>(java.io.OutputStream)", "java.lang.StringBuffer.<init>()", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.insert(java.lang.String,long)", "java.lang.StringBuffer.substring(long)", "java.lang.StringBuffer.<init>(long)", "java.io.ByteArrayOutputStream.<init>()", "java.io.ByteArrayOutputStream.toByteArray()", "java.io.ByteArrayOutputStream.write(long,long,long)", "java.io.ByteArrayOutputStream.toString(java.lang.String)", "java.io.ByteArrayOutputStream.write(long)", "android.view.View.<init>(android.content.Context)", "android.view.View.getVisibility()", "android.view.View.onKeyPreIme(android.view.KeyEvent,long)", "android.view.View.setVisibility(long)", "android.view.View.getWindowToken()", "android.view.View.requestFocus()", "android.view.View.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.View.setBackgroundColor(long)", "android.view.KeyEvent.isPrintingKey()", "android.view.KeyEvent.getAction()", "android.view.KeyEvent.getUnicodeChar()", "android.view.KeyEvent.<init>(long,long)", "android.view.KeyEvent.getKeyCode()", "android.view.KeyEvent.getSource()", "android.view.KeyEvent.getDeviceId()", "android.view.inputmethod.InputConnection.commitText(long,java.lang.CharSequence)", "android.os.Handler.<init>()", "android.os.Handler.<init>(android.os.Looper)", "android.os.Handler.post(java.lang.Runnable)", "android.os.Handler.obtainMessage()", "android.os.Handler.sendMessage(android.os.Message)", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(long,android.os.IBinder)", "android.view.inputmethod.InputMethodManager.showSoftInput(long,android.view.View)", "android.widget.AbsoluteLayout.LayoutParams.<init>(long,long,long,long)", "android.view.ViewGroup.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.view.ViewGroup.addView(android.view.View)", "android.view.inputmethod.BaseInputConnection.<init>(long,android.view.View)", "android.view.inputmethod.BaseInputConnection.commitText(long,java.lang.CharSequence)", "android.view.inputmethod.BaseInputConnection.sendKeyEvent(android.view.KeyEvent)", "android.view.inputmethod.BaseInputConnection.deleteSurroundingText(long,long)", "android.view.inputmethod.BaseInputConnection.setComposingText(long,java.lang.CharSequence)", "java.lang.CharSequence.toString()", "android.view.InputDevice.MotionRange.getAxis()", "android.view.InputDevice.MotionRange.getSource()", "android.view.InputDevice.MotionRange.getMin()", "android.view.InputDevice.MotionRange.getRange()", "java.lang.Thread.join()", "java.lang.Thread.<init>(java.lang.String,java.lang.Runnable)", "java.lang.Thread.start()", "java.lang.Thread.<init>(java.lang.Runnable)", "java.lang.Thread.sleep(long)", "android.view.SurfaceHolder.addCallback(android.view.SurfaceHolder.Callback)", "android.view.SurfaceHolder.getSurface()", "android.view.SurfaceHolder.setType(long)", "android.view.SurfaceHolder.setFormat(long)", "android.hardware.SensorManager.getDefaultSensor(long)", "android.hardware.SensorManager.registerListener(android.os.Handler,long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.Sensor.getType()", "android.view.MotionEvent.getDeviceId()", "android.view.MotionEvent.getPointerCount()", "android.view.MotionEvent.getActionMasked()", "android.view.MotionEvent.getPointerId(long)", "android.view.MotionEvent.getX(long)", "android.view.MotionEvent.getY(long)", "android.view.MotionEvent.getPressure(long)", "android.view.MotionEvent.getActionIndex()", "android.view.MotionEvent.getSource()", "android.view.MotionEvent.getAxisValue(long,long)", "android.os.Looper.getMainLooper()", "java.lang.IndexOutOfBoundsException.<init>()", "java.lang.IndexOutOfBoundsException.<init>(java.lang.String)", "java.util.PriorityQueue.<init>(java.util.Comparator,long)", "java.util.Stack.<init>()", "java.util.Stack.clear()", "java.util.Stack.isEmpty()", "java.util.Stack.push(java.lang.Object)", "java.util.Stack.pop()", "java.util.Queue.add(java.lang.Object)", "java.util.Queue.iterator()", "java.util.Queue.isEmpty()", "java.util.Queue.remove()", "java.lang.Double.parseDouble(java.lang.String)", "java.io.StringWriter.<init>()", "java.io.StringWriter.write(java.lang.String)", "java.io.StringWriter.toString()", "java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)", "java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)", "java.nio.charset.CharsetEncoder.canEncode(java.lang.CharSequence)", "java.nio.charset.CharsetEncoder.encode(long,java.nio.ByteBuffer,java.nio.CharBuffer)", "java.nio.charset.CharsetEncoder.flush(java.nio.ByteBuffer)", "java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)", "java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)", "java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer)", "java.nio.CharBuffer.toString()", "java.nio.CharBuffer.wrap(java.lang.CharSequence)", "java.nio.CharBuffer.remaining()", "java.nio.CharBuffer.get()", "java.nio.charset.CoderResult.isUnmappable()", "java.nio.charset.CoderResult.isMalformed()", "java.nio.charset.CoderResult.length()", "java.nio.charset.CoderResult.isOverflow()", "java.nio.charset.CoderResult.isUnderflow()", "java.util.zip.ZipEntry.<init>(java.lang.String)", "java.util.zip.ZipEntry.<init>(java.util.zip.ZipEntry)", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.getExtra()", "java.util.zip.ZipEntry.getMethod()", "java.util.zip.ZipEntry.getSize()", "java.util.zip.ZipEntry.clone()", "java.util.zip.ZipEntry.setExtra(long)", "java.util.NoSuchElementException.<init>()", "java.io.PushbackInputStream.<init>(long,java.io.InputStream)", "java.io.PushbackInputStream.unread(long,long,long)", "java.util.zip.DataFormatException.getMessage()", "java.lang.ArrayIndexOutOfBoundsException.<init>()", "java.util.LinkedList.<init>()", "java.util.zip.Deflater.<init>(long,long)", "java.util.zip.Deflater.needsInput()", "java.util.zip.Deflater.finish()", "java.util.zip.Deflater.finished()", "java.util.zip.Deflater.reset()", "java.util.zip.Deflater.setInput(long,long,long)", "java.util.zip.Deflater.deflate(long,long,long)", "java.util.zip.Deflater.end()", "java.util.zip.Deflater.setLevel(long)", "java.util.Enumeration.hasMoreElements()", "java.util.Enumeration.nextElement()", "java.lang.AssertionError.<init>()", "java.io.DataInputStream.<init>(java.io.InputStream)", "java.io.DataInputStream.readUnsignedByte()", "java.io.DataInputStream.readInt()", "java.io.DataInputStream.readShort()", "java.util.zip.GZIPOutputStream.<init>(java.io.OutputStream)", "java.util.zip.GZIPOutputStream.close()", "java.util.zip.GZIPOutputStream.write(long)", "java.util.zip.GZIPOutputStream.write(long)", "java.util.zip.GZIPOutputStream.write(long,long,long)", "java.util.jar.JarInputStream.<init>(java.io.InputStream)", "java.util.jar.JarInputStream.close()", "android.widget.FrameLayout.<init>(android.content.Context)", "android.view.InputDevice.getDeviceIds()", "android.view.InputDevice.getDevice(long)", "android.view.InputDevice.getSources()", "android.view.InputDevice.getId()", "android.view.InputDevice.getName()", "android.view.InputDevice.getMotionRanges()", "java.lang.InterruptedException.printStackTrace()"]
}