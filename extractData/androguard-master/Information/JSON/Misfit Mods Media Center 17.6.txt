{
"name":"Misfit Mods Media Center 17.6", 
"SHA256":"acddef8aae8deac17e42a516ab919b092ed03cafa73ef6c6ea2b54296867662e", 
"versionCode":"1760000", 
"versionName":"17.6", 
"size":96315247, 
"minSDKVersion":"21", 
"certificate(fingerprint)":"A4:0D:A8:0A:59:D1:70:CA:A9:50:CF:15:C1:8C:45:4D:47:A3:9B:26:98:9D:8B:64:0E:CD:74:5B:A7:1B:F5:DC", 
"certificate(owner)":"Email Address: android@android.com, Common Name: Android, Organizational Unit: Android, Organization: Android, Locality: Mountain View, State/Province: California, Country: US", 
"permission":["android.permission.INTERNET", "android.permission.GET_TASKS", "android.permission.BLUETOOTH", "android.permission.WAKE_LOCK", "android.permission.MODIFY_AUDIO_SETTINGS", "android.permission.WRITE_EXTERNAL_STORAGE"], 
"API":["java.lang.Object.<init>()", "android.widget.RelativeLayout.LayoutParams.<init>(android.view.ViewGroup.LayoutParams)", "android.widget.RelativeLayout.LayoutParams.setMargins(long,long,long,long)", "android.widget.RelativeLayout.getWidth()", "android.widget.RelativeLayout.getHeight()", "android.view.View.setSystemUiVisibility(long)", "android.view.View.setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)", "android.view.View.getWidth()", "android.view.View.getHeight()", "android.os.Handler.post(java.lang.Runnable)", "android.os.Handler.<init>()", "android.app.NativeActivity.<init>()", "android.app.NativeActivity.onCreate(android.os.Bundle)", "android.app.NativeActivity.onDestroy()", "android.app.NativeActivity.onNewIntent(android.content.Intent)", "android.app.NativeActivity.onResume()", "android.app.NativeActivity.onStart()", "android.app.NativeActivity.onPause()", "java.lang.System.loadLibrary(java.lang.String)", "java.lang.System.getProperties()", "java.lang.System.setProperties(java.util.Properties)", "java.lang.System.getProperty(java.lang.String,java.lang.String)", "java.lang.System.setProperty(java.lang.String,java.lang.String)", "android.view.Window.setFormat(long)", "android.view.Window.getDecorView()", "android.view.SurfaceHolder.setFormat(long)", "android.view.SurfaceHolder.addCallback(android.view.SurfaceHolder.Callback)", "android.view.SurfaceHolder.getSurface()", "android.content.Context.getContentResolver()", "android.content.Context.getSystemService(java.lang.String)", "android.content.ContentResolver.registerContentObserver(android.database.ContentObserver,long,android.net.Uri)", "android.content.ContentResolver.unregisterContentObserver(android.database.ContentObserver)", "android.util.Log.e(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.content.ComponentName.<init>(java.lang.String,java.lang.String)", "android.content.ComponentName.toString()", "java.lang.Class.getName()", "android.media.AudioManager.registerMediaButtonEventReceiver(android.content.ComponentName)", "android.media.AudioManager.unregisterMediaButtonEventReceiver(android.content.ComponentName)", "android.media.AudioManager.getStreamVolume(long)", "android.content.DialogInterface.dismiss()", "android.app.Activity.finish()", "android.app.Activity.<init>()", "android.app.Activity.onCreate(android.os.Bundle)", "android.content.BroadcastReceiver.<init>()", "java.lang.StringBuilder.<init>()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(long)", "android.content.Intent.getData()", "android.content.Intent.setClass(java.lang.Class,android.content.Context)", "android.content.Intent.addFlags(long)", "android.os.AsyncTask.<init>()", "android.os.AsyncTask.onPostExecute(java.lang.Object)", "java.io.File.<init>(java.lang.String)", "java.io.File.getParentFile()", "java.io.File.exists()", "java.io.File.mkdirs()", "java.io.File.getAbsolutePath()", "java.io.File.delete()", "java.io.File.isDirectory()", "java.io.File.listFiles()", "java.io.File.toString()", "java.io.File.getName()", "java.io.File.lastModified()", "java.io.File.setLastModified(long)", "java.io.File.<init>(java.lang.String,java.io.File)", "java.io.File.renameTo(java.io.File)", "java.io.File.length()", "java.lang.Integer.valueOf(long)", "java.lang.Integer.intValue()", "java.net.URL.<init>(java.lang.String)", "java.net.URL.openConnection()", "java.net.HttpURLConnection.connect()", "java.net.HttpURLConnection.getResponseCode()", "java.net.HttpURLConnection.disconnect()", "java.net.HttpURLConnection.getContentLength()", "java.net.HttpURLConnection.getInputStream()", "java.io.OutputStream.close()", "java.io.OutputStream.write(long,long,long)", "java.io.InputStream.close()", "java.io.InputStream.read(long)", "java.io.InputStream.read(long,long,long)", "java.io.FileOutputStream.<init>(java.lang.String)", "java.io.FileOutputStream.<init>(java.io.File)", "java.io.FileOutputStream.close()", "android.widget.ProgressBar.setProgress(long)", "android.widget.ProgressBar.setMax(long)", "android.widget.ProgressBar.setVisibility(long)", "android.widget.TextView.setText(java.lang.CharSequence)", "android.widget.TextView.setMovementMethod(android.text.method.MovementMethod)", "java.util.zip.ZipFile.<init>(java.lang.String)", "java.util.zip.ZipFile.entries()", "java.util.zip.ZipFile.size()", "java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)", "java.util.zip.ZipFile.close()", "java.util.Enumeration.hasMoreElements()", "java.util.Enumeration.nextElement()", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.isDirectory()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.<init>(long)", "java.lang.String.split(java.lang.String)", "java.lang.String.isEmpty()", "java.lang.String.equals(java.lang.Object)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.io.BufferedOutputStream.<init>(java.io.OutputStream)", "java.io.BufferedOutputStream.write(long,long,long)", "java.io.BufferedOutputStream.close()", "java.io.IOException.printStackTrace()", "java.io.FileNotFoundException.printStackTrace()", "java.util.ArrayList.<init>()", "java.util.ArrayList.add(java.lang.Object)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.CharSequence)", "java.util.regex.Matcher.find()", "java.util.regex.Matcher.group(long)", "java.lang.ProcessBuilder.<init>([Ljava.lang.String)", "java.lang.ProcessBuilder.start()", "java.lang.Process.getInputStream()", "android.os.Environment.getExternalStorageDirectory()", "android.os.Environment.getExternalStorageState()", "java.util.Properties.<init>(java.util.Properties)", "java.util.Properties.load(java.io.InputStream)", "java.util.Properties.<init>()", "java.util.Properties.getProperty(java.lang.String)", "java.io.FileInputStream.<init>(java.io.File)", "java.lang.Thread.sleep(long)", "android.content.pm.PackageManager.getPackageInfo(long,java.lang.String)", "android.app.ActivityManager.getRunningTasks(long)", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "android.content.res.Resources.openRawResource(long)", "android.app.AlertDialog.isShowing()", "android.app.AlertDialog.show()", "android.app.AlertDialog.findViewById(long)", "android.app.AlertDialog.Builder.<init>(android.content.Context)", "android.app.AlertDialog.Builder.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setIcon(long)", "android.app.AlertDialog.Builder.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setCancelable(long)", "android.app.AlertDialog.Builder.create()", "android.text.Html.fromHtml(java.lang.String)", "android.text.method.LinkMovementMethod.getInstance()", "android.content.IntentFilter.<init>()", "android.content.IntentFilter.addAction(java.lang.String)", "android.content.IntentFilter.addDataScheme(java.lang.String)", "android.database.ContentObserver.<init>(android.os.Handler)", "android.database.ContentObserver.onChange(long)", "android.net.Uri.toString()", "android.net.Uri.parse(java.lang.String)", "android.net.Uri.compareTo(android.net.Uri)", "android.view.SurfaceView.<init>(android.content.Context)", "android.view.SurfaceView.<init>(long,android.util.AttributeSet,android.content.Context)", "javax.microedition.khronos.egl.EGLContext.getEGL()", "javax.microedition.khronos.egl.EGL10.eglGetDisplay(java.lang.Object)", "javax.microedition.khronos.egl.EGL10.eglInitialize(long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglChooseConfig(long,long,[Ljavax.microedition.khronos.egl.EGLConfig,long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreateContext(long,javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreateWindowSurface(long,java.lang.Object,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglMakeCurrent(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglSwapBuffers(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroySurface(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroyContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglTerminate(javax.microedition.khronos.egl.EGLDisplay)", "android.opengl.GLES20.glClearColor(long,long,long,long)", "android.opengl.GLES20.glClear(long)", "android.view.Choreographer.getInstance()", "android.view.Choreographer.postFrameCallback(android.view.Choreographer.FrameCallback)", "android.view.Choreographer.removeFrameCallback(android.view.Choreographer.FrameCallback)", "android.graphics.Rect.<init>()", "android.hardware.input.InputManager.registerInputDeviceListener(android.os.Handler,android.hardware.input.InputManager.InputDeviceListener)", "android.hardware.input.InputManager.unregisterInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener)"]
}