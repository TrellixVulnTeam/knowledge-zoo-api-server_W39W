{
"name":"GO Keyboard Emoji plugin", 
"SHA256":"2168370b15f21ce47a74bf000f926c1e492c305ef7bdd6b72a3706c59dc8c0a0", 
"versionCode":"4", 
"versionName":"3.0", 
"size":914670, 
"minSDKVersion":"4", 
"certificate(fingerprint)":"75:33:F6:9E:6F:EB:73:2E:23:B9:34:4E:65:68:B8:0E:BC:58:6F:81:22:C4:A8:38:73:D5:67:F3:BA:0F:BF:70", 
"certificate(owner)":"Common Name: cooltouch, Organizational Unit: cooltouch, Organization: cooltouch, Locality: guangzhou, State/Province: guangdong, Country: 086", 
"permission":["android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.ACCESS_NETWORK_STATE", "android.permission.GET_TASKS", "android.permission.INTERNET"], 
"API":["java.lang.Object.<init>()", "android.content.UriMatcher.<init>(long)", "android.content.UriMatcher.addURI(long,java.lang.String,java.lang.String)", "android.content.ContentProvider.<init>()", "android.content.Context.getResources()", "android.content.Context.getPackageName()", "android.content.Context.startService(android.content.Intent)", "android.content.Context.startActivity(android.content.Intent)", "android.content.Context.getFileStreamPath(java.lang.String)", "android.content.Context.createPackageContext(long,java.lang.String)", "android.content.Context.openFileOutput(long,java.lang.String)", "android.content.Context.getSystemService(java.lang.String)", "android.content.res.Resources.getXml(long)", "android.content.res.Resources.obtainAttributes(long,android.util.AttributeSet)", "android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)", "android.content.res.Resources.getString(long)", "java.util.ArrayList.<init>()", "java.util.ArrayList.add(java.lang.Object)", "java.util.ArrayList.size()", "java.util.ArrayList.get(long)", "android.content.res.XmlResourceParser.next()", "android.content.res.XmlResourceParser.getName()", "android.content.res.XmlResourceParser.close()", "android.content.res.XmlResourceParser.getAttributeValue(java.lang.String,java.lang.String)", "android.content.res.XmlResourceParser.getAttributeResourceValue(long,long)", "android.text.TextUtils.equals(java.lang.CharSequence,java.lang.CharSequence)", "android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser)", "android.content.res.TypedArray.recycle()", "java.io.IOException.printStackTrace()", "android.database.MatrixCursor.<init>([Ljava.lang.String)", "android.database.MatrixCursor.addRow([Ljava.lang.Object)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.substring(long)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.valueOf(long)", "java.lang.String.lastIndexOf(long)", "java.lang.String.valueOf(java.lang.Object)", "java.lang.Integer.valueOf(long)", "java.lang.Integer.intValue()", "android.content.BroadcastReceiver.<init>()", "android.content.Intent.getAction()", "android.content.Intent.<init>(java.lang.Class,android.content.Context)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.<init>(java.lang.String)", "android.content.Intent.setComponent(android.content.ComponentName)", "android.content.Intent.setAction(java.lang.String)", "android.content.Intent.<init>()", "android.content.Intent.addFlags(long)", "android.content.Intent.setDataAndType(java.lang.String,android.net.Uri)", "android.content.Intent.getDataString()", "android.content.Intent.<init>(android.net.Uri,java.lang.String)", "android.content.Intent.setFlags(long)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.getBooleanExtra(long,java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.DialogInterface.cancel()", "android.content.DialogInterface.dismiss()", "android.os.AsyncTask.Status.equals(java.lang.Object)", "android.os.AsyncTask.<init>()", "android.content.ComponentName.<init>(java.lang.String,java.lang.String)", "android.content.ComponentName.getPackageName()", "android.app.AlertDialog.Builder.<init>(android.content.Context)", "android.app.AlertDialog.Builder.setIcon(long)", "android.app.AlertDialog.Builder.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.create()", "android.app.AlertDialog.Builder.setNegativeButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.show()", "android.app.ProgressDialog.dismiss()", "android.app.ProgressDialog.setProgress(long)", "android.app.ProgressDialog.setMax(long)", "android.app.ProgressDialog.<init>(android.content.Context)", "android.app.ProgressDialog.setIcon(long)", "android.app.ProgressDialog.setTitle(java.lang.CharSequence)", "android.app.ProgressDialog.setMessage(java.lang.CharSequence)", "android.app.ProgressDialog.setProgressStyle(long)", "android.app.ProgressDialog.setButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence,long)", "android.app.ProgressDialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.ProgressDialog.setCancelable(long)", "android.app.ProgressDialog.show()", "android.net.Uri.fromFile(java.io.File)", "android.net.Uri.parse(java.lang.String)", "android.os.Binder.<init>()", "android.os.Handler.<init>()", "android.os.Handler.<init>(android.os.Looper)", "android.os.Handler.handleMessage(android.os.Message)", "android.os.Handler.removeCallbacks(java.lang.Runnable)", "android.os.Handler.post(java.lang.Runnable)", "java.lang.Thread.sleep(long)", "java.lang.Thread.<init>(java.lang.Runnable)", "java.lang.Thread.start()", "java.lang.Thread.<init>()", "android.os.Message.<init>()", "java.lang.InterruptedException.printStackTrace()", "android.content.IntentFilter.<init>()", "android.content.IntentFilter.addAction(java.lang.String)", "android.content.IntentFilter.addDataScheme(java.lang.String)", "android.app.NotificationManager.cancel(long)", "android.app.NotificationManager.notify(android.app.Notification,long)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.app.Service.<init>()", "android.app.Service.onDestroy()", "android.app.Service.onStart(long,android.content.Intent)", "java.lang.StringBuilder.<init>(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.System.currentTimeMillis()", "java.lang.System.arraycopy(long,long,java.lang.Object,long,java.lang.Object)", "android.app.PendingIntent.getActivity(long,android.content.Intent,long,android.content.Context)", "android.app.Notification.<init>(long,java.lang.CharSequence,long)", "android.app.Notification.setLatestEventInfo(android.app.PendingIntent,java.lang.CharSequence,java.lang.CharSequence,android.content.Context)", "android.content.pm.PackageManager.getInstalledPackages(long)", "java.util.List.size()", "java.util.List.get(long)", "android.app.ActivityManager.getRunningServices(long)", "android.os.Environment.getExternalStorageState()", "android.app.Activity.<init>()", "android.app.Activity.onCreate(android.os.Bundle)", "android.app.Activity.onDestroy()", "android.os.Process.setThreadPriority(long)", "android.os.Looper.prepare()", "android.os.Looper.loop()", "java.io.FileOutputStream.flush()", "java.io.FileOutputStream.close()", "java.io.FileOutputStream.write(long)", "java.lang.IllegalStateException.printStackTrace()", "java.io.InputStream.read(long)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.io.UnsupportedEncodingException.printStackTrace()", "java.io.StringReader.<init>(java.lang.String)", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "javax.xml.parsers.ParserConfigurationException.printStackTrace()", "java.io.BufferedReader.<init>(java.io.Reader)", "java.io.BufferedReader.readLine()", "java.io.InputStreamReader.<init>(java.io.InputStream)", "android.net.ConnectivityManager.getAllNetworkInfo()", "android.net.NetworkInfo.isConnected()"]
}