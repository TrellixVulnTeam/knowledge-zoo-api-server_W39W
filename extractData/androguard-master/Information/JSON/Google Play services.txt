{
"name":"Google Play services", 
"SHA256":"dea34958401a3a6acf42c2bd1e1caf8422f85b8717f767935151fd73a30bb272", 
"versionCode":"12872064", 
"versionName":"12.8.72 (080406-202717283)", 
"size":32143098, 
"minSDKVersion":"19", 
"certificate(fingerprint)":"F0:FD:6C:5B:41:0F:25:CB:25:C3:B5:33:46:C8:97:2F:AE:30:F8:EE:74:11:DF:91:04:80:AD:6B:2D:60:DB:83", 
"certificate(owner)":"Common Name: Android, Organizational Unit: Android, Organization: Google Inc., Locality: Mountain View, State/Province: California, Country: US", 
"permission":["com.google.android.finsky.permission.INSTANT_APP_STATE", "com.google.android.gms.magictether.permission.SCANNED_DEVICE", "android.permission.MANAGE_DEVICE_ADMINS", "android.permission.MODIFY_AUDIO_ROUTING", "android.permission.CHANGE_NETWORK_STATE", "android.permission.WRITE_CONTACTS", "android.permission.MODIFY_PHONE_STATE", "android.permission.MANAGE_SUBSCRIPTION_PLANS", "com.google.android.gms.auth.cryptauth.permission.KEY_CHANGE", "android.permission.AUTHENTICATE_ACCOUNTS", "android.permission.MANAGE_ACCOUNTS", "android.permission.RECEIVE_SMS", "com.google.android.gms.permission.CONTACTS_SYNC_DELEGATION", "com.google.android.gms.permission.GAMES_DEBUG_SETTINGS", "com.google.android.gms.auth.authzen.permission.KEY_REGISTRATION_FINISHED", "android.permission.READ_CONTACTS", "android.permission.INTERACT_ACROSS_USERS", "com.google.android.gms.auth.proximity.permission.SMS_CONNECT_SETUP_REQUESTED", "android.permission.GET_APP_OPS_STATS", "com.google.android.googlequicksearchbox.permission.PAUSE_HOTWORD", "android.permission.READ_CALENDAR", "com.google.android.gms.magictether.permission.CONNECTED_HOST_CHANGED", "android.permission.SUBSCRIBED_FEEDS_WRITE", "android.permission.WRITE_SYNC_SETTINGS", "com.google.android.gms.auth.permission.FACE_UNLOCK", "android.permission.RECEIVE_BOOT_COMPLETED", "com.google.android.gms.permission.APPINDEXING", "android.permission.CONTROL_INCALL_EXPERIENCE", "android.permission.SUBSCRIBED_FEEDS_READ", "android.permission.BACKUP", "com.google.android.gms.permission.BROADCAST_TO_GOOGLEHELP", "android.permission.PRE_FACTORY_RESET", "android.permission.RECEIVE_MMS", "android.permission.CAMERA", "android.permission.MODIFY_AUDIO_SETTINGS", "com.google.android.gms.game.notifications.permission.WRITE", "android.permission.MANAGE_USB", "com.android.launcher.permission.INSTALL_SHORTCUT", "android.permission.INTENT_FILTER_VERIFICATION_AGENT", "android.permission.DOWNLOAD_WITHOUT_NOTIFICATION", "com.google.android.hangouts.START_HANGOUT", "com.google.android.gms.chromesync.permission.CONTENT_PROVIDER_ACCESS", "com.google.android.apps.enterprise.dmagent.permission.AutoSyncPermission", "android.permission.READ_LOGS", "com.android.voicemail.permission.READ_VOICEMAIL", "android.permission.OBSERVE_GRANT_REVOKE_PERMISSIONS", "android.permission.CAPTURE_AUDIO_HOTWORD", "android.permission.MANAGE_SOUND_TRIGGER", "android.permission.SCORE_NETWORKS", "android.permission.SET_TIME_ZONE", "android.permission.CALL_PRIVILEGED", "android.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST", "com.google.android.gms.permission.BIND_NETWORK_TASK_SERVICE", "android.permission.READ_WIFI_CREDENTIAL", "android.permission.DISABLE_KEYGUARD", "android.permission.ACCESS_NETWORK_STATE", "android.permission.ACCESS_COARSE_LOCATION", "com.google.android.finsky.permission.ACCESS_INSTANT_APP_NOTIFICATION_ENFORCEMENT", "com.google.android.vending.verifier.ACCESS_VERIFIER", "android.permission.PACKAGE_USAGE_STATS", "android.permission.ACCESS_NETWORK_CONDITIONS", "com.google.android.finsky.permission.GEARHEAD_SERVICE", "android.permission.ACTIVITY_EMBEDDING", "android.permission.RECEIVE_DATA_ACTIVITY_CHANGE", "com.google.android.gms.magictether.permission.CLIENT_TETHERING_PREFERENCE_CHANGED", "com.android.vending.setup.PLAY_SETUP_SERVICE", "com.google.android.gms.permission.NEARBY_START_DISCOVERER", "com.google.android.providers.settings.permission.READ_GSETTINGS", "com.google.android.gms.permission.INTERNAL_BROADCAST", "com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN", "android.permission.CHANGE_WIFI_MULTICAST_STATE", "android.permission.DISPATCH_PROVISIONING_MESSAGE", "android.permission.LOCATION_HARDWARE", "android.permission.BLUETOOTH_PRIVILEGED", "android.permission.CAPTURE_VIDEO_OUTPUT", "android.permission.READ_EXTERNAL_STORAGE", "android.permission.MANAGE_ACTIVITY_STACKS", "android.permission.READ_OEM_UNLOCK_STATE", "com.google.android.wearable.WRITE_SETTINGS", "com.google.android.gms.DRIVE", "android.permission.SEND_SMS", "com.google.android.gms.cloudsave.BIND_EVENT_BROADCAST", "android.permission.INTERNET", "com.google.android.gms.permission.SAFETY_NET", "android.permission.RECOVER_KEYSTORE", "android.permission.BLUETOOTH", "com.google.android.gms.permission.NOTIFICATION_CONTACTS", "com.google.android.gms.common.internal.SHARED_PREFERENCES_PERMISSION", "com.google.android.gms.permission.GRANT_WALLPAPER_PERMISSIONS", "com.google.android.gms.permission.PHENOTYPE_OVERRIDE_FLAGS", "android.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS", "com.google.android.gms.permission.ACTIVITY_RECOGNITION", "com.google.android.clockwork.settings.SHOW_FACTORY_RESET_CONFIRMATION", "android.car.permission.CONTROL_CAR_CLIMATE", "com.google.android.wearable.READ_SETTINGS", "android.permission.RECOVERY", "android.permission.SEND_SMS_NO_CONFIRMATION", "android.permission.READ_DREAM_STATE", "com.google.android.permission.ACCESSIBILITY_SCAN_SERVICE", "com.google.android.launcher.permission.RECEIVE_LAUNCH_BROADCASTS", "com.google.android.gms.growth.permission.GROWTH_NOTIFICATION_BROADCAST", "android.permission.GET_ACCOUNTS", "com.google.android.gms.auth.authzen.permission.DEVICE_SYNC_FINISHED", "android.permission.READ_PHONE_STATE", "com.android.vending.INTENT_VENDING_ONLY", "android.permission.WRITE_SETTINGS", "com.google.android.gms.carsetup.DRIVING_MODE_MANAGER", "android.permission.NOTIFY_PENDING_SYSTEM_UPDATE", "android.permission.USE_CREDENTIALS", "android.permission.PROVIDE_RESOLVER_RANKER_SERVICE", "com.google.android.gm.permission.READ_GMAIL", "android.permission.CAPTURE_SECURE_VIDEO_OUTPUT", "android.permission.MANAGE_VOICE_KEYPHRASES", "android.permission.SYSTEM_ALERT_WINDOW", "com.google.android.gms.googlehelp.LAUNCH_SUPPORT_SCREENSHARE", "com.google.android.gms.trustagent.permission.TRUSTAGENT_STATE", "com.google.android.gms.trustagent.framework.model.DATA_CHANGE_NOTIFICATION", "android.permission.PROVIDE_TRUST_AGENT", "android.permission.GET_PACKAGE_SIZE", "android.permission.BROADCAST_STICKY", "android.permission.START_TASKS_FROM_RECENTS", "com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION", "com.google.android.gms.permission.TRANSFER_WIFI_CREDENTIAL", "com.google.android.gms.permission.PHENOTYPE_UPDATE_BROADCAST", "android.permission.READ_CALL_LOG", "android.permission.USE_FINGERPRINT", "android.permission.USER_ACTIVITY", "com.google.android.gms.magictether.permission.DISABLE_SOFT_AP", "android.permission.RECORD_AUDIO", "android.permission.CONTROL_DISPLAY_SATURATION", "com.google.android.gms.trustagent.framework.model.DATA_ACCESS", "android.permission.REORDER_TASKS", "android.permission.READ_PRIVILEGED_PHONE_STATE", "android.permission.SUBSTITUTE_NOTIFICATION_APP_NAME", "com.google.android.gms.permission.CHECKIN_NOW", "android.permission.VIBRATE", "android.permission.READ_SYNC_SETTINGS", "com.felicanetworks.mfc.permission.MFC_ACCESS", "android.permission.PROCESS_OUTGOING_CALLS", "android.permission.FLASHLIGHT", "android.permission.FOREGROUND_SERVICE", "android.permission.OVERRIDE_WIFI_CONFIG", "android.permission.BIND_NOTIFICATION_LISTENER_SERVICE", "android.permission.CHANGE_WIFI_STATE", "android.permission.TETHER_PRIVILEGED", "com.google.android.gms.chimera.permission.CONFIG_CHANGE", "android.permission.ACCESS_WIFI_STATE", "android.permission.ACCESS_NOTIFICATION_POLICY", "android.permission.GET_TASKS", "android.permission.MODIFY_NETWORK_ACCOUNTING", "android.permission.WAKE_LOCK", "android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.WRITE_PROFILE", "com.android.voicemail.permission.ADD_VOICEMAIL", "android.permission.CALL_PHONE", "android.permission.UPDATE_APP_OPS_STATS", "android.permission.READ_SMS", "android.car.permission.ADJUST_CAR_CABIN", "com.google.android.gms.auth.permission.POST_SIGN_IN_ACCOUNT", "com.google.android.providers.settings.permission.WRITE_GSETTINGS", "android.permission.REAL_GET_TASKS", "com.felicanetworks.mfc.mfi.permission.MFI_ACCESS", "android.permission.CAPTURE_AUDIO_OUTPUT", "com.google.android.gms.chromesync.permission.METADATA_UPDATED", "android.permission.NFC", "android.permission.READ_PROFILE", "android.permission.LOCAL_MAC_ADDRESS", "com.google.android.providers.gsf.permission.READ_GSERVICES", "android.permission.BLUETOOTH_ADMIN", "android.permission.ACCESS_FINE_LOCATION", "com.google.android.gms.permission.C2D_MESSAGE", "com.google.android.gms.auth.permission.GOOGLE_ACCOUNT_CHANGE"], 
"API":["android.arch.lifecycle.ProcessLifecycleOwnerInitializer.getContext()", "android.support.constraint.ConstraintLayout.isInEditMode()", "android.support.constraint.ConstraintLayout.getPaddingLeft()", "android.support.constraint.ConstraintLayout.getPaddingTop()", "android.support.constraint.ConstraintLayout.getPaddingBottom()", "android.support.constraint.ConstraintLayout.getPaddingRight()", "android.support.constraint.ConstraintLayout.combineMeasuredStates(long,long)", "android.support.constraint.ConstraintLayout.resolveSizeAndState(long,long,long)", "android.support.constraint.ConstraintLayout.setMeasuredDimension(long,long)", "android.support.design.appbar.AppBarLayout.setKeyboardNavigationCluster(long)", "android.support.design.appbar.AppBarLayout.setTouchscreenBlocksFocus(long)", "android.support.design.appbar.AppBarLayout.requestLayout()", "android.support.design.appbar.AppBarLayout.mergeDrawableStates(long,long)", "android.support.design.appbar.AppBarLayout.refreshDrawableState()", "android.support.design.button.MaterialButton.getContext()", "android.support.design.button.MaterialButton.getDrawableState()", "android.support.design.button.MaterialButton.setCompoundDrawablePadding(long)", "android.support.design.button.MaterialButton.getPaddingRight()", "android.support.design.chip.Chip.setOutlineProvider(android.view.ViewOutlineProvider)", "android.support.design.chip.Chip.refreshDrawableState()", "android.support.design.chip.Chip.requestLayout()", "android.support.design.chip.Chip.invalidateOutline()", "android.support.design.chip.Chip.invalidate()", "android.support.design.chip.Chip.playSoundEffect(long)", "android.support.design.chip.Chip.mergeDrawableStates(long,long)", "android.support.design.chip.Chip.performClick()", "android.support.design.floatingactionbutton.FloatingActionButton.setScaleType(android.widget.ImageView.ScaleType)", "android.support.design.floatingactionbutton.FloatingActionButton.getResources()", "android.support.design.floatingactionbutton.FloatingActionButton.getDrawableState()", "android.support.design.floatingactionbutton.FloatingActionButton.setMeasuredDimension(long,long)", "android.support.design.floatingactionbutton.FloatingActionButton.getWidth()", "android.support.design.floatingactionbutton.FloatingActionButton.getHeight()", "android.support.design.floatingactionbutton.FloatingActionButton.getLayoutParams()", "android.support.design.floatingactionbutton.FloatingActionButton.getRight()", "android.support.design.floatingactionbutton.FloatingActionButton.getBottom()", "android.support.design.floatingactionbutton.FloatingActionButton.getTop()", "android.support.design.floatingactionbutton.FloatingActionButton.getLeft()", "android.support.design.floatingactionbutton.FloatingActionButton.setPadding(long,long,long,long)", "android.support.design.internal.BaselineLayout.getPaddingLeft()", "android.support.design.internal.BaselineLayout.getPaddingRight()", "android.support.design.internal.BaselineLayout.getPaddingTop()", "android.support.design.internal.BaselineLayout.measureChild(long,long,android.view.View)", "android.support.design.internal.BaselineLayout.getPaddingBottom()", "android.support.design.internal.BaselineLayout.setMeasuredDimension(long,long)", "android.support.design.internal.CheckableImageButton.mergeDrawableStates(long,long)", "android.support.design.internal.CheckableImageButton.refreshDrawableState()", "android.support.design.internal.CheckableImageButton.sendAccessibilityEvent(long)", "android.support.design.internal.CheckableImageButton.setPadding(long,long,long,long)", "android.support.design.internal.CheckableImageButton.getVisibility()", "android.support.design.internal.CheckableImageButton.jumpDrawablesToCurrentState()", "android.support.design.internal.NavigationMenuItemView.refreshDrawableState()", "android.support.design.internal.NavigationMenuItemView.setContentDescription(java.lang.CharSequence)", "android.support.design.internal.NavigationMenuItemView.mergeDrawableStates(long,long)", "android.support.design.snackbar.Snackbar.SnackbarLayout.getChildCount()", "android.support.design.snackbar.Snackbar.SnackbarLayout.getPaddingLeft()", "android.support.design.snackbar.Snackbar.SnackbarLayout.getPaddingRight()", "android.support.design.snackbar.SnackbarContentLayout.getOrientation()", "android.support.design.widget.CoordinatorLayout.getPaddingLeft()", "android.support.design.widget.CoordinatorLayout.getPaddingRight()", "android.support.design.widget.CoordinatorLayout.getPaddingBottom()", "android.support.design.widget.CoordinatorLayout.getResources()", "android.support.design.widget.CoordinatorLayout.getPaddingTop()", "android.support.design.widget.CoordinatorLayout.isChildrenDrawingOrderEnabled()", "android.support.design.widget.CoordinatorLayout.getChildDrawingOrder(long,long)", "android.support.design.widget.CoordinatorLayout.setSystemUiVisibility(long)", "android.support.design.widget.CoordinatorLayout.measureChildWithMargins(long,long,long,long,android.view.View)", "android.support.design.widget.CoordinatorLayout.getDrawableState()", "android.support.design.widget.CoordinatorLayout.isInEditMode()", "android.support.design.widget.CoordinatorLayout.setMeasuredDimension(long,long)", "android.support.design.widget.CoordinatorLayout.setWillNotDraw(long)", "android.support.design.widget.Snackbar.SnackbarLayout.getChildCount()", "android.support.design.widget.Snackbar.SnackbarLayout.getPaddingLeft()", "android.support.design.widget.Snackbar.SnackbarLayout.getPaddingRight()", "android.support.design.widget.TabLayout.setVisibility(long)", "android.support.v17.leanback.app.GuidedStepRootLayout.getLayoutDirection()", "android.support.v17.leanback.widget.BrowseRowsFrameLayout.getPaddingLeft()", "android.support.v17.leanback.widget.BrowseRowsFrameLayout.getPaddingRight()", "android.support.v17.leanback.widget.BrowseRowsFrameLayout.getChildMeasureSpec(long,long,long)", "android.support.v17.leanback.widget.CheckableImageView.mergeDrawableStates(long,long)", "android.support.v17.leanback.widget.CheckableImageView.refreshDrawableState()", "android.support.v17.leanback.widget.ControlBar.indexOfChild(android.view.View)", "android.support.v17.leanback.widget.GuidanceStylingRelativeLayout.getRootView()", "android.support.v17.leanback.widget.GuidanceStylingRelativeLayout.getMeasuredHeight()", "android.support.v17.leanback.widget.GuidedActionEditText.setBackground(android.graphics.drawable.Drawable)", "android.support.v17.leanback.widget.HorizontalGridView.setLayerType(android.graphics.Paint,long)", "android.support.v17.leanback.widget.PagingIndicator.setMeasuredDimension(long,long)", "android.support.v17.leanback.widget.PlaybackControlsRowView.findFocus()", "android.support.v17.leanback.widget.PlaybackTransportRowView.getFocusedChild()", "android.support.v17.leanback.widget.PlaybackTransportRowView.indexOfChild(android.view.View)", "android.support.v17.leanback.widget.PlaybackTransportRowView.findFocus()", "android.support.v17.leanback.widget.ResizingTextView.isPaddingRelative()", "android.support.v17.leanback.widget.ResizingTextView.getPaddingStart()", "android.support.v17.leanback.widget.ResizingTextView.getPaddingEnd()", "android.support.v17.leanback.widget.ResizingTextView.setPaddingRelative(long,long,long,long)", "android.support.v17.leanback.widget.ScaleFrameLayout.getChildCount()", "android.support.v17.leanback.widget.ScaleFrameLayout.getLayoutDirection()", "android.support.v17.leanback.widget.ScaleFrameLayout.getWidth()", "android.support.v17.leanback.widget.ScaleFrameLayout.getPivotX()", "android.support.v17.leanback.widget.ScaleFrameLayout.getPaddingLeft()", "android.support.v17.leanback.widget.ScaleFrameLayout.getPaddingRight()", "android.support.v17.leanback.widget.ScaleFrameLayout.getPivotY()", "android.support.v17.leanback.widget.ScaleFrameLayout.setMeasuredDimension(long,long)", "android.support.v17.leanback.widget.SearchBar.getResources()", "android.support.v17.leanback.widget.SearchBar.getContext()", "android.support.v17.leanback.widget.SearchBar.setBackgroundColor(long)", "android.support.v17.leanback.widget.SearchBar.setClipChildren(long)", "android.support.v17.leanback.widget.SearchBar.hasFocus()", "android.support.v17.leanback.widget.SearchBar.requestFocus()", "android.support.v17.leanback.widget.SearchEditText.setPrivateImeOptions(java.lang.String)", "android.support.v17.leanback.widget.SearchEditText.setNextFocusDownId(long)", "android.support.v17.leanback.widget.SearchEditText.requestFocusFromTouch()", "android.support.v17.leanback.widget.SearchEditText.getHeight()", "android.support.v17.leanback.widget.SearchEditText.dispatchTouchEvent(android.view.MotionEvent)", "android.support.v17.leanback.widget.SearchOrbView.setClipChildren(long)", "android.support.v17.leanback.widget.SearchOrbView.setSoundEffectsEnabled(long)", "android.support.v17.leanback.widget.SeekBar.setWillNotDraw(long)", "android.support.v17.leanback.widget.SpeechOrbView.isFocused()", "android.support.v17.leanback.widget.SpeechOrbView.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)", "android.support.v17.leanback.widget.SpeechOrbView.setNextFocusDownId(long)", "android.support.v17.leanback.widget.SpeechOrbView.requestFocus()", "android.support.v17.leanback.widget.SpeechOrbView.getResources()", "android.support.v17.leanback.widget.SpeechOrbView.hasFocus()", "android.support.v17.leanback.widget.ThumbsBar.getPaddingTop()", "android.support.v17.leanback.widget.TitleView.setClipToPadding(long)", "android.support.v17.leanback.widget.TitleView.setClipChildren(long)", "android.support.v17.leanback.widget.VerticalGridView.setFocusable(long)", "android.support.v17.leanback.widget.VerticalGridView.requestFocus(android.graphics.Rect,long)", "android.support.v4.view.ViewPager.getScrollY()", "android.support.v4.view.ViewPager.getScrollX()", "android.support.v4.view.ViewPager.getMeasuredWidth()", "android.support.v4.view.ViewPager.getPaddingLeft()", "android.support.v4.view.ViewPager.getPaddingRight()", "android.support.v4.view.ViewPager.findFocus()", "android.support.v4.view.ViewPager.playSoundEffect(long)", "android.support.v4.view.ViewPager.setWillNotDraw(long)", "android.support.v4.view.ViewPager.setFocusable(long)", "android.support.v4.view.ViewPager.getWindowToken()", "android.support.v4.view.ViewPager.getResources()", "android.support.v4.view.ViewPager.getDescendantFocusability()", "android.support.v4.view.ViewPager.isFocusable()", "android.support.v4.view.ViewPager.isInTouchMode()", "android.support.v4.view.ViewPager.isFocusableInTouchMode()", "android.support.v4.view.ViewPager.addViewInLayout(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.support.v4.view.ViewPager.getOverScrollMode()", "android.support.v4.view.ViewPager.getPaddingTop()", "android.support.v4.view.ViewPager.getPaddingBottom()", "android.support.v4.view.ViewPager.getDefaultSize(long,long)", "android.support.v4.view.ViewPager.setMeasuredDimension(long,long)", "android.support.v4.view.ViewPager.getMeasuredHeight()", "android.support.v4.widget.NestedScrollView.setDescendantFocusability(long)", "android.support.v4.widget.NestedScrollView.setWillNotDraw(long)", "android.support.v4.widget.NestedScrollView.getChildCount()", "android.support.v4.widget.NestedScrollView.getHeight()", "android.support.v4.widget.NestedScrollView.getScrollY()", "android.support.v4.widget.NestedScrollView.getVerticalFadingEdgeLength()", "android.support.v4.widget.NestedScrollView.getScrollX()", "android.support.v4.widget.NestedScrollView.scrollBy(long,long)", "android.support.v4.widget.NestedScrollView.getOverScrollMode()", "android.support.v4.widget.NestedScrollView.offsetDescendantRectToMyCoords(android.graphics.Rect,android.view.View)", "android.support.v4.widget.NestedScrollView.findFocus()", "android.support.v4.widget.NestedScrollView.getDescendantFocusability()", "android.support.v4.widget.NestedScrollView.requestFocus()", "android.support.v4.widget.NestedScrollView.getFocusables(long)", "android.support.v4.widget.NestedScrollView.isFocused()", "android.support.v4.widget.NestedScrollView.getWidth()", "android.support.v4.widget.NestedScrollView.getClipToPadding()", "android.support.v4.widget.NestedScrollView.getPaddingLeft()", "android.support.v4.widget.NestedScrollView.getPaddingRight()", "android.support.v4.widget.NestedScrollView.getChildMeasureSpec(long,long,long)", "android.support.v4.widget.NestedScrollView.isEnabled()", "android.support.v4.widget.NestedScrollView.setClipToPadding(long)", "android.support.v4.widget.Space.getSuggestedMinimumWidth()", "android.support.v4.widget.Space.getSuggestedMinimumHeight()", "android.support.v4.widget.Space.setMeasuredDimension(long,long)", "android.support.v4.widget.SwipeRefreshLayout.getResources()", "android.support.v4.widget.SwipeRefreshLayout.setWillNotDraw(long)", "android.support.v4.widget.SwipeRefreshLayout.setChildrenDrawingOrderEnabled(long)", "android.support.v4.widget.SwipeRefreshLayout.isEnabled()", "android.support.v4.widget.SwipeRefreshLayout.getMeasuredWidth()", "android.support.v4.widget.SwipeRefreshLayout.getMeasuredHeight()", "android.support.v4.widget.SwipeRefreshLayout.getPaddingLeft()", "android.support.v4.widget.SwipeRefreshLayout.getPaddingTop()", "android.support.v4.widget.SwipeRefreshLayout.getPaddingRight()", "android.support.v4.widget.SwipeRefreshLayout.getPaddingBottom()", "android.support.v4.widget.SwipeRefreshLayout.postDelayed(long,java.lang.Runnable)", "android.support.v4.widget.SwipeRefreshLayout.isLaidOut()", "android.support.v4.widget.SwipeRefreshLayout.announceForAccessibility(java.lang.CharSequence)", "android.support.v4.widget.SwipeRefreshLayout.clearFocus()", "android.support.v7.app.AlertController.RecycleListView.getPaddingLeft()", "android.support.v7.app.AlertController.RecycleListView.getPaddingRight()", "android.support.v7.app.AlertController.RecycleListView.setPadding(long,long,long,long)", "android.support.v7.app.MediaRouteVolumeSlider.isEnabled()", "android.support.v7.app.MediaRouteVolumeSlider.getProgressDrawable()", "android.support.v7.view.menu.ActionMenuItemView.setSaveEnabled(long)", "android.support.v7.view.menu.ExpandedMenuView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.support.v7.view.menu.ExpandedMenuView.setChildrenDrawingCacheEnabled(long)", "android.support.v7.view.menu.ListMenuItemView.isEnabled()", "android.support.v7.widget.ActionBarContainer.setTranslationY(long)", "android.support.v7.widget.ActionBarContainer.getHeight()", "android.support.v7.widget.ActionBarContainer.getLocationInWindow(long)", "android.support.v7.widget.ActionBarContainer.setAlpha(long)", "android.support.v7.widget.ActionBarContainer.unscheduleDrawable(android.graphics.drawable.Drawable)", "android.support.v7.widget.ActionBarContainer.setWillNotDraw(long)", "android.support.v7.widget.ActionBarContainer.invalidate()", "android.support.v7.widget.ActionBarContainer.getId()", "android.support.v7.widget.ActionBarContainer.setDescendantFocusability(long)", "android.support.v7.widget.ActionBarContainer.getDrawableState()", "android.support.v7.widget.ActionBarContainer.getTranslationY()", "android.support.v7.widget.ActionBarContainer.getBottom()", "android.support.v7.widget.ActionBarContainer.getMeasuredState()", "android.support.v7.widget.ActionBarContainer.animate()", "android.support.v7.widget.ActionBarContextView.isShown()", "android.support.v7.widget.ActionBarContextView.getPaddingRight()", "android.support.v7.widget.ActionBarContextView.getPaddingTop()", "android.support.v7.widget.ActionBarContextView.getPaddingBottom()", "android.support.v7.widget.ActionBarContextView.getPaddingLeft()", "android.support.v7.widget.ActionBarContextView.setMeasuredDimension(long,long)", "android.support.v7.widget.ActionBarOverlayLayout.getWindowToken()", "android.support.v7.widget.ActionBarOverlayLayout.setWillNotDraw(long)", "android.support.v7.widget.ActionBarOverlayLayout.getPaddingLeft()", "android.support.v7.widget.ActionBarOverlayLayout.getPaddingRight()", "android.support.v7.widget.ActionBarOverlayLayout.getPaddingTop()", "android.support.v7.widget.ActionBarOverlayLayout.getPaddingBottom()", "android.support.v7.widget.ActionBarOverlayLayout.measureChildWithMargins(long,long,long,long,android.view.View)", "android.support.v7.widget.ActionBarOverlayLayout.setMeasuredDimension(long,long)", "android.support.v7.widget.ActionBarOverlayLayout.postDelayed(long,java.lang.Runnable)", "android.support.v7.widget.ActionMenuView.getMeasuredState()", "android.support.v7.widget.ActivityChooserView.InnerLayout.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.support.v7.widget.AppCompatButton.draw(android.graphics.Canvas)", "android.support.v7.widget.AppCompatButton.setBackgroundColor(long)", "android.support.v7.widget.AppCompatButton.setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.support.v7.widget.AppCompatImageButton.onCreateDrawableState(long)", "android.support.v7.widget.AppCompatImageView.setFrame(long,long,long,long)", "android.support.v7.widget.AppCompatSpinner.getMeasuredWidth()", "android.support.v7.widget.AppCompatSpinner.getMeasuredHeight()", "android.support.v7.widget.AppCompatSpinner.getBackground()", "android.support.v7.widget.AppCompatSpinner.setMeasuredDimension(long,long)", "android.support.v7.widget.AppCompatSpinner.getContext()", "android.support.v7.widget.AppCompatSpinner.getPaddingLeft()", "android.support.v7.widget.AppCompatSpinner.getPaddingRight()", "android.support.v7.widget.AppCompatSpinner.getWidth()", "android.support.v7.widget.AppCompatSpinner.getViewTreeObserver()", "android.support.v7.widget.AppCompatSpinner.getOnItemClickListener()", "android.support.v7.widget.AppCompatSpinner.performItemClick(long,long,android.view.View)", "android.support.v7.widget.ButtonBarLayout.bringChildToFront(android.view.View)", "android.support.v7.widget.ButtonBarLayout.getOrientation()", "android.support.v7.widget.ButtonBarLayout.getMeasuredWidthAndState()", "android.support.v7.widget.ButtonBarLayout.getPaddingTop()", "android.support.v7.widget.ButtonBarLayout.setMinimumHeight(long)", "android.support.v7.widget.ButtonBarLayout.getPaddingBottom()", "android.support.v7.widget.CardView.getResources()", "android.support.v7.widget.CardView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.support.v7.widget.CardView.setClipToOutline(long)", "android.support.v7.widget.CardView.getHeight()", "android.support.v7.widget.ContentFrameLayout.getMeasuredState()", "android.support.v7.widget.RecyclerView.setWillNotDraw(long)", "android.support.v7.widget.RecyclerView.isFocused()", "android.support.v7.widget.RecyclerView.focusSearch(long)", "android.support.v7.widget.RecyclerView.onFocusChanged(android.graphics.Rect,long,long)", "android.support.v7.widget.RecyclerView.getDescendantFocusability()", "android.support.v7.widget.RecyclerView.isLayoutRequested()", "android.support.v7.widget.RecyclerView.findFocus()", "android.support.v7.widget.RecyclerView.isFocusable()", "android.support.v7.widget.RecyclerView.focusableViewAvailable(android.view.View)", "android.support.v7.widget.RecyclerView.getOverScrollMode()", "android.support.v7.widget.RecyclerView.postDelayed(long,java.lang.Runnable)", "android.support.v7.widget.RecyclerView.getWindowVisibility()", "android.support.v7.widget.RecyclerView.getDrawingTime()", "android.support.v7.widget.RecyclerView.setScrollContainer(long)", "android.support.v7.widget.RecyclerView.setFocusableInTouchMode(long)", "android.support.v7.widget.RecyclerView.isInEditMode()", "android.support.v7.widget.RecyclerView.detachViewFromParent(long)", "android.support.v7.widget.RecyclerView.setMeasuredDimension(long,long)", "android.support.v7.widget.RecyclerView.attachViewToParent(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.support.v7.widget.RecyclerView.awakenScrollBars()", "android.support.v7.widget.RecyclerView.getPaddingLeft()", "android.support.v7.widget.RecyclerView.getPaddingRight()", "android.support.v7.widget.RecyclerView.getPaddingTop()", "android.support.v7.widget.RecyclerView.getPaddingBottom()", "android.support.v7.widget.RecyclerView.getMeasuredWidth()", "android.support.v7.widget.RecyclerView.getMeasuredHeight()", "android.support.v7.widget.RecyclerView.getScrollX()", "android.support.v7.widget.RecyclerView.getScrollY()", "android.support.v7.widget.RecyclerView.onScrollChanged(long,long,long,long)", "android.support.v7.widget.RecyclerView.dispatchThawSelfOnly(android.util.SparseArray)", "android.support.v7.widget.RecyclerView.dispatchFreezeSelfOnly(android.util.SparseArray)", "android.support.v7.widget.RecyclerView.canScrollVertically(long)", "android.support.v7.widget.RecyclerView.canScrollHorizontally(long)", "android.support.v7.widget.RecyclerView.setOnScrollChangeListener(android.view.View.OnScrollChangeListener)", "android.support.v7.widget.RecyclerView.setVerticalScrollBarEnabled(long)", "android.support.v7.widget.SearchView.getResources()", "android.support.v7.widget.SearchView.setFocusable(long)", "android.support.v7.widget.SearchView.getLocationInWindow(long)", "android.support.v7.widget.SearchView.setTouchDelegate(android.view.TouchDelegate)", "android.support.v7.widget.SearchView.isFocusable()", "android.support.v7.widget.SearchView.getWindowVisibility()", "android.support.v7.widget.SearchView.SearchAutoComplete.setOnClickListener(android.view.View.OnClickListener)", "android.support.v7.widget.SearchView.SearchAutoComplete.addTextChangedListener(android.text.TextWatcher)", "android.support.v7.widget.SearchView.SearchAutoComplete.setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)", "android.support.v7.widget.SearchView.SearchAutoComplete.setOnKeyListener(android.view.View.OnKeyListener)", "android.support.v7.widget.SearchView.SearchAutoComplete.getDropDownAnchor()", "android.support.v7.widget.SearchView.SearchAutoComplete.setInputType(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.getText()", "android.support.v7.widget.SearchView.SearchAutoComplete.getTextSize()", "android.support.v7.widget.SearchView.SearchAutoComplete.setHint(java.lang.CharSequence)", "android.support.v7.widget.SearchView.SearchAutoComplete.setImeOptions(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.setPrivateImeOptions(java.lang.String)", "android.support.v7.widget.SearchView.SearchAutoComplete.setText(java.lang.CharSequence)", "android.support.v7.widget.SearchView.SearchAutoComplete.length()", "android.support.v7.widget.SearchView.SearchAutoComplete.setSelection(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.dismissDropDown()", "android.support.v7.widget.SearchView.SearchAutoComplete.getListSelection()", "android.support.v7.widget.SearchView.SearchAutoComplete.setListSelection(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.clearListSelection()", "android.support.v7.widget.SearchView.SearchAutoComplete.getImeOptions()", "android.support.v7.widget.SearchView.SearchAutoComplete.clearFocus()", "android.support.v7.widget.SearchView.SearchAutoComplete.requestFocus()", "android.support.v7.widget.SearchView.SearchAutoComplete.hasFocus()", "android.support.v7.widget.SearchView.SearchAutoComplete.requestFocus(android.graphics.Rect,long)", "android.support.v7.widget.SearchView.SearchAutoComplete.getDropDownBackground()", "android.support.v7.widget.SearchView.SearchAutoComplete.setDropDownHorizontalOffset(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.setDropDownWidth(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.isPopupShowing()", "android.support.v7.widget.SearchView.SearchAutoComplete.removeCallbacks(java.lang.Runnable)", "android.support.v7.widget.SearchView.SearchAutoComplete.getWindowToken()", "android.support.v7.widget.SearchView.SearchAutoComplete.post(java.lang.Runnable)", "android.support.v7.widget.SearchView.SearchAutoComplete.getResources()", "android.support.v7.widget.SearchView.SearchAutoComplete.setMinWidth(long)", "android.support.v7.widget.SearchView.SearchAutoComplete.getKeyDispatcherState()", "android.support.v7.widget.SearchView.SearchAutoComplete.getVisibility()", "android.support.v7.widget.SwitchCompat.requestLayout()", "android.support.v7.widget.SwitchCompat.getResources()", "android.support.v7.widget.SwitchCompat.getTextColors()", "android.support.v7.widget.SwitchCompat.invalidate()", "android.support.v7.widget.SwitchCompat.getBackground()", "android.support.v7.widget.SwitchCompat.mergeDrawableStates(long,long)", "android.support.v7.widget.SwitchCompat.getWidth()", "android.support.v7.widget.SwitchCompat.getPaddingLeft()", "android.support.v7.widget.SwitchCompat.getGravity()", "android.support.v7.widget.SwitchCompat.getPaddingTop()", "android.support.v7.widget.SwitchCompat.getHeight()", "android.support.v7.widget.SwitchCompat.getPaddingBottom()", "android.support.v7.widget.SwitchCompat.getPaddingRight()", "android.support.v7.widget.SwitchCompat.getMeasuredHeight()", "android.support.v7.widget.SwitchCompat.getMeasuredWidthAndState()", "android.support.v7.widget.SwitchCompat.setMeasuredDimension(long,long)", "android.support.v7.widget.SwitchCompat.getParent()", "android.support.v7.widget.SwitchCompat.playSoundEffect(long)", "android.support.v7.widget.SwitchCompat.getWindowToken()", "android.support.v7.widget.Toolbar.getPaddingTop()", "android.support.v7.widget.Toolbar.getPaddingBottom()", "android.support.v7.widget.Toolbar.getPaddingLeft()", "android.support.v7.widget.Toolbar.getPaddingRight()", "android.support.v7.widget.Toolbar.setMeasuredDimension(long,long)", "android.support.v7.widget.Toolbar.getResources()", "android.support.v7.widget.Toolbar.announceForAccessibility(java.lang.CharSequence)", "android.support.v7.widget.ViewStubCompat.setWillNotDraw(long)", "android.support.v7.widget.ViewStubCompat.setMeasuredDimension(long,long)", "java.lang.Object.<init>()", "java.lang.Object.getClass()", "java.lang.Object.equals(java.lang.Object)", "java.lang.Object.hashCode()", "java.lang.Object.toString()", "java.lang.Object.clone()", "java.lang.Object.finalize()", "java.lang.Object.notifyAll()", "java.lang.Object.wait()", "java.lang.Object.wait(long)", "java.lang.Object.notify()", "java.lang.Object.wait(long,long)", "java.lang.ref.WeakReference.<init>(java.lang.Object)", "java.lang.ref.WeakReference.get()", "java.lang.ref.WeakReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "java.lang.ref.WeakReference.clear()", "android.view.View.animate()", "android.view.View.getViewTreeObserver()", "android.view.View.getVisibility()", "android.view.View.getMeasuredWidth()", "android.view.View.getMeasuredHeight()", "android.view.View.layout(long,long,long,long)", "android.view.View.findViewById(long)", "android.view.View.setOnClickListener(android.view.View.OnClickListener)", "android.view.View.setClickable(long)", "android.view.View.setTag(java.lang.Object)", "android.view.View.setBackgroundResource(long)", "android.view.View.getTag()", "android.view.View.setVisibility(long)", "android.view.View.setLayerType(android.graphics.Paint,long)", "android.view.View.<init>(android.content.Context)", "android.view.View.getLocationOnScreen(long)", "android.view.View.getWidth()", "android.view.View.getHeight()", "android.view.View.addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)", "android.view.View.removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)", "android.view.View.setPadding(long,long,long,long)", "android.view.View.isLaidOut()", "android.view.View.isNestedScrollingEnabled()", "android.view.View.isPaddingRelative()", "android.view.View.postInvalidateOnAnimation()", "android.view.View.requestApplyInsets()", "android.view.View.requestFitSystemWindows()", "android.view.View.setAlpha(long)", "android.view.View.setImportantForAutofill(long)", "android.view.View.setNestedScrollingEnabled(long)", "android.view.View.setTranslationZ(long)", "android.view.View.stopNestedScroll()", "android.view.View.getTranslationY()", "android.view.View.setTranslationY(long)", "android.view.View.dispatchApplyWindowInsets(android.view.WindowInsets)", "android.view.View.setElevation(long)", "android.view.View.setPaddingRelative(long,long,long,long)", "android.view.View.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.view.View.setBackgroundTintList(android.content.res.ColorStateList)", "android.view.View.getBackground()", "android.view.View.getBackgroundTintList()", "android.view.View.getBackgroundTintMode()", "android.view.View.getDrawableState()", "android.view.View.setBackground(android.graphics.drawable.Drawable)", "android.view.View.setBackgroundTintMode(android.graphics.PorterDuff.Mode)", "android.view.View.setClipBounds(android.graphics.Rect)", "android.view.View.postOnAnimation(java.lang.Runnable)", "android.view.View.postOnAnimationDelayed(long,java.lang.Runnable)", "android.view.View.setTransitionName(java.lang.String)", "android.view.View.setAccessibilityDelegate(android.view.View.AccessibilityDelegate)", "android.view.View.setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)", "android.view.View.setPointerIcon(android.view.PointerIcon)", "android.view.View.setFitsSystemWindows(long)", "android.view.View.canScrollVertically(long)", "android.view.View.performAccessibilityAction(android.os.Bundle,long)", "android.view.View.getAccessibilityLiveRegion()", "android.view.View.onApplyWindowInsets(android.view.WindowInsets)", "android.view.View.setZ(long)", "android.view.View.offsetLeftAndRight(long)", "android.view.View.getParent()", "android.view.View.getLeft()", "android.view.View.getTop()", "android.view.View.getRight()", "android.view.View.getBottom()", "android.view.View.invalidate(android.graphics.Rect)", "android.view.View.setHasTransientState(long)", "android.view.View.getAlpha()", "android.view.View.offsetTopAndBottom(long)", "android.view.View.setAccessibilityLiveRegion(long)", "android.view.View.setImportantForAccessibility(long)", "android.view.View.getClipBounds()", "android.view.View.setScrollIndicators(long,long)", "android.view.View.getDisplay()", "android.view.View.getElevation()", "android.view.View.getFitsSystemWindows()", "android.view.View.getImportantForAccessibility()", "android.view.View.getImportantForAutofill()", "android.view.View.getLayoutDirection()", "android.view.View.getMinimumHeight()", "android.view.View.getMinimumWidth()", "android.view.View.getOverScrollMode()", "android.view.View.getPaddingEnd()", "android.view.View.getPaddingStart()", "android.view.View.getTransitionName()", "android.view.View.getWindowSystemUiVisibility()", "android.view.View.getY()", "android.view.View.getZ()", "android.view.View.hasOnClickListeners()", "android.view.View.hasOverlappingRendering()", "android.view.View.hasTransientState()", "android.view.View.isAttachedToWindow()", "android.view.View.getWindowToken()", "android.view.View.setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)", "android.view.View.getLayerType()", "android.view.View.saveHierarchyState(android.util.SparseArray)", "android.view.View.setSaveFromParentEnabled(long)", "android.view.View.restoreHierarchyState(android.util.SparseArray)", "android.view.View.clearAnimation()", "android.view.View.startAnimation(android.view.animation.Animation)", "android.view.View.getId()", "android.view.View.setId(long)", "android.view.View.getAnimation()", "android.view.View.post(java.lang.Runnable)", "android.view.View.findViewWithTag(java.lang.Object)", "android.view.View.getLayoutParams()", "android.view.View.isLayoutRequested()", "android.view.View.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.View.setRotationX(long)", "android.view.View.setRotationY(long)", "android.view.View.setScaleX(long)", "android.view.View.setScaleY(long)", "android.view.View.setPivotX(long)", "android.view.View.setPivotY(long)", "android.view.View.setTranslationX(long)", "android.view.View.measure(long,long)", "android.view.View.getBaseline()", "android.view.View.getMeasuredState()", "android.view.View.isShown()", "android.view.View.getTag(long)", "android.view.View.setTag(java.lang.Object,long)", "android.view.View.removeCallbacks(java.lang.Runnable)", "android.view.View.getContext()", "android.view.View.requestLayout()", "android.view.View.setOutlineProvider(android.view.ViewOutlineProvider)", "android.view.View.getResources()", "android.view.View.setStateListAnimator(android.animation.StateListAnimator)", "android.view.View.resolveSizeAndState(long,long,long)", "android.view.View.setBackgroundColor(long)", "android.view.View.focusSearch(long)", "android.view.View.requestFocus()", "android.view.View.combineMeasuredStates(long,long)", "android.view.View.getScrollX()", "android.view.View.getScrollY()", "android.view.View.getMatrix()", "android.view.View.getPaddingLeft()", "android.view.View.getPaddingTop()", "android.view.View.getPaddingRight()", "android.view.View.setSelected(long)", "android.view.View.setActivated(long)", "android.view.View.setMinimumWidth(long)", "android.view.View.setEnabled(long)", "android.view.View.draw(android.graphics.Canvas)", "android.view.View.setLeft(long)", "android.view.View.setTop(long)", "android.view.View.setRight(long)", "android.view.View.setBottom(long)", "android.view.View.getWindowId()", "android.view.View.hasFocusable()", "android.view.View.requestFocus(android.graphics.Rect,long)", "android.view.View.findFocus()", "android.view.View.hasFocus()", "android.view.View.addFocusables(long,long,java.util.ArrayList)", "android.view.View.<init>(android.util.AttributeSet,android.content.Context)", "android.view.View.<init>(long,android.util.AttributeSet,android.content.Context)", "android.view.View.onDraw(android.graphics.Canvas)", "android.view.View.setForeground(android.graphics.drawable.Drawable)", "android.view.View.getPaddingBottom()", "android.view.View.onRtlPropertiesChanged(long)", "android.view.View.invalidate()", "android.view.View.isFocusable()", "android.view.View.isFocused()", "android.view.View.onFocusChanged(android.graphics.Rect,long,long)", "android.view.View.onSizeChanged(long,long,long,long)", "android.view.View.setFocusable(long)", "android.view.View.getLocationInWindow(long)", "android.view.View.canScrollHorizontally(long)", "android.view.View.requestFocus(long)", "android.view.View.addTouchables(java.util.ArrayList)", "android.view.View.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.view.View.onTouchEvent(android.view.MotionEvent)", "android.view.View.getLocalVisibleRect(android.graphics.Rect)", "android.view.View.getWindowVisibility()", "android.view.View.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.view.View.computeHorizontalScrollRange()", "android.view.View.computeHorizontalScrollExtent()", "android.view.View.computeVerticalScrollExtent()", "android.view.View.getDrawingRect(android.graphics.Rect)", "android.view.View.onCheckIsTextEditor()", "android.view.View.setAccessibilityHeading(long)", "android.view.View.setOnKeyListener(android.view.View.OnKeyListener)", "android.view.View.setPressed(long)", "android.view.View.jumpDrawablesToCurrentState()", "android.view.View.getWindowVisibleDisplayFrame(android.graphics.Rect)", "android.view.View.getKeyDispatcherState()", "android.view.View.getGlobalVisibleRect(android.graphics.Rect)", "android.view.View.setClipToOutline(long)", "android.view.View.getTranslationX()", "android.view.View.forceLayout()", "android.view.View.isPressed()", "android.view.View.drawableHotspotChanged(long,long)", "android.view.View.isEnabled()", "android.view.View.setLongClickable(long)", "android.view.View.postDelayed(long,java.lang.Runnable)", "android.view.View.isLongClickable()", "android.view.View.addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.view.View.cancelLongPress()", "android.view.View.dispatchTouchEvent(android.view.MotionEvent)", "android.view.View.setTooltipText(java.lang.CharSequence)", "android.view.View.setOnLongClickListener(android.view.View.OnLongClickListener)", "android.view.View.setOnHoverListener(android.view.View.OnHoverListener)", "android.view.View.getApplicationWindowToken()", "android.view.View.getRootView()", "android.view.View.setSystemUiVisibility(long)", "android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.view.View.cancelPendingInputEvents()", "android.view.View.getSystemUiVisibility()", "android.view.View.inflate(android.view.ViewGroup,long,android.content.Context)", "android.view.View.onScrollChanged(long,long,long,long)", "android.view.View.setX(long)", "android.view.View.removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.view.View.setContentDescription(java.lang.CharSequence)", "android.view.View.setMinimumHeight(long)", "android.view.View.setFocusableInTouchMode(long)", "android.view.View.sendAccessibilityEvent(long)", "android.view.View.performClick()", "android.view.View.announceForAccessibility(java.lang.CharSequence)", "android.view.View.getHitRect(android.graphics.Rect)", "android.view.View.generateViewId()", "android.view.View.invalidate(long,long,long,long)", "android.view.View.setOnTouchListener(android.view.View.OnTouchListener)", "android.view.View.clearFocus()", "android.view.View.getDrawingCacheBackgroundColor()", "android.view.View.invalidateDrawable(android.graphics.drawable.Drawable)", "android.view.View.onAttachedToWindow()", "android.view.View.onDetachedFromWindow()", "android.view.View.onLayout(long,long,long,long,long)", "android.view.View.onMeasure(long,long)", "android.view.View.verifyDrawable(android.graphics.drawable.Drawable)", "android.view.View.onRestoreInstanceState(android.os.Parcelable)", "android.view.View.onSaveInstanceState()", "android.view.View.isSelected()", "android.view.View.setY(long)", "android.view.View.getHandler()", "android.view.View.setDrawingCacheEnabled(long)", "android.view.View.getDrawingCache()", "android.view.View.setSaveEnabled(long)", "android.view.View.addChildrenForAccessibility(java.util.ArrayList)", "android.view.View.buildLayer()", "android.view.View.isSoundEffectsEnabled()", "android.view.View.getX()", "android.view.View.getFocusedRect(android.graphics.Rect)", "android.view.View.dispatchKeyEvent(android.view.KeyEvent)", "android.view.View.dispatchUnhandledMove(long,android.view.View)", "android.view.ViewPropertyAnimator.alpha(long)", "android.view.ViewPropertyAnimator.setDuration(long)", "android.view.ViewPropertyAnimator.setListener(android.animation.Animator.AnimatorListener)", "android.view.ViewPropertyAnimator.setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)", "android.view.ViewPropertyAnimator.cancel()", "android.view.ViewPropertyAnimator.translationY(long)", "android.view.ViewPropertyAnimator.setInterpolator(android.animation.TimeInterpolator)", "android.view.ViewPropertyAnimator.setStartDelay(long)", "android.view.ViewPropertyAnimator.start()", "android.view.ViewPropertyAnimator.scaleX(long)", "android.view.ViewPropertyAnimator.scaleY(long)", "android.view.ViewPropertyAnimator.getDuration()", "android.view.ViewPropertyAnimator.translationX(long)", "android.view.ViewPropertyAnimator.translationYBy(long)", "android.view.ViewPropertyAnimator.withEndAction(java.lang.Runnable)", "android.view.ViewPropertyAnimator.x(long)", "android.view.WindowInsets.getSystemWindowInsetBottom()", "android.view.WindowInsets.replaceSystemWindowInsets(long,long,long,long)", "android.view.WindowInsets.getSystemWindowInsetLeft()", "android.view.WindowInsets.getSystemWindowInsetRight()", "android.view.WindowInsets.getSystemWindowInsetTop()", "android.view.WindowInsets.isConsumed()", "android.view.WindowInsets.<init>(android.view.WindowInsets)", "android.view.WindowInsets.consumeSystemWindowInsets()", "android.view.WindowInsets.consumeStableInsets()", "android.view.accessibility.AccessibilityNodeInfo.setClickable(long)", "android.view.accessibility.AccessibilityNodeInfo.addAction(long)", "android.view.accessibility.AccessibilityNodeInfo.addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)", "android.view.accessibility.AccessibilityNodeInfo.getBoundsInParent(android.graphics.Rect)", "android.view.accessibility.AccessibilityNodeInfo.setTraversalBefore(android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.setClassName(java.lang.CharSequence)", "android.view.accessibility.AccessibilityNodeInfo.setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)", "android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused(long)", "android.view.accessibility.AccessibilityNodeInfo.setFocusable(long)", "android.view.accessibility.AccessibilityNodeInfo.getBoundsInScreen(android.graphics.Rect)", "android.view.accessibility.AccessibilityNodeInfo.setContentDescription(java.lang.CharSequence)", "android.view.accessibility.AccessibilityNodeInfo.setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)", "android.view.accessibility.AccessibilityNodeInfo.setCheckable(long)", "android.view.accessibility.AccessibilityNodeInfo.setBoundsInParent(android.graphics.Rect)", "android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence)", "android.view.accessibility.AccessibilityNodeInfo.setEnabled(long)", "android.view.accessibility.AccessibilityNodeInfo.setBoundsInScreen(android.graphics.Rect)", "android.view.accessibility.AccessibilityNodeInfo.setScrollable(long)", "android.view.accessibility.AccessibilityNodeInfo.equals(java.lang.Object)", "android.view.accessibility.AccessibilityNodeInfo.hashCode()", "android.view.accessibility.AccessibilityNodeInfo.getPackageName()", "android.view.accessibility.AccessibilityNodeInfo.getClassName()", "android.view.accessibility.AccessibilityNodeInfo.getText()", "android.view.accessibility.AccessibilityNodeInfo.getContentDescription()", "android.view.accessibility.AccessibilityNodeInfo.getViewIdResourceName()", "android.view.accessibility.AccessibilityNodeInfo.isCheckable()", "android.view.accessibility.AccessibilityNodeInfo.isChecked()", "android.view.accessibility.AccessibilityNodeInfo.isFocusable()", "android.view.accessibility.AccessibilityNodeInfo.isFocused()", "android.view.accessibility.AccessibilityNodeInfo.isSelected()", "android.view.accessibility.AccessibilityNodeInfo.isClickable()", "android.view.accessibility.AccessibilityNodeInfo.isLongClickable()", "android.view.accessibility.AccessibilityNodeInfo.isEnabled()", "android.view.accessibility.AccessibilityNodeInfo.isPassword()", "android.view.accessibility.AccessibilityNodeInfo.isScrollable()", "android.view.accessibility.AccessibilityNodeInfo.getActions()", "android.view.accessibility.AccessibilityNodeInfo.setChecked(long)", "android.view.accessibility.AccessibilityNodeInfo.setContentInvalid(long)", "android.view.accessibility.AccessibilityNodeInfo.setError(java.lang.CharSequence)", "android.view.accessibility.AccessibilityNodeInfo.setLabelFor(android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.obtain()", "android.view.accessibility.AccessibilityNodeInfo.setParent(android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.setPackageName(java.lang.CharSequence)", "android.view.accessibility.AccessibilityNodeInfo.setSource(long,android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.setFocused(long)", "android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser(long)", "android.view.accessibility.AccessibilityNodeInfo.setParent(long,android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.recycle()", "android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.getChildCount()", "android.view.accessibility.AccessibilityNodeInfo.addChild(long,android.view.View)", "android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.accessibility.AccessibilityNodeInfo)", "android.view.accessibility.AccessibilityNodeInfo.getCollectionItemInfo()", "java.lang.StringBuilder.<init>()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.CharSequence)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long,long,java.lang.CharSequence)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(java.lang.String)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.setLength(long)", "java.lang.StringBuilder.append(long,long,long)", "java.lang.StringBuilder.delete(long,long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(java.lang.CharSequence)", "java.lang.StringBuilder.indexOf(java.lang.String)", "java.lang.StringBuilder.appendCodePoint(long)", "java.lang.StringBuilder.substring(long,long)", "java.lang.StringBuilder.insert(java.lang.String,long)", "java.lang.StringBuilder.reverse()", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.replace(java.lang.String,long,long)", "java.lang.StringBuilder.deleteCharAt(long)", "java.lang.StringBuilder.charAt(long)", "java.lang.StringBuilder.setCharAt(long,long)", "java.lang.StringBuilder.indexOf(long,java.lang.String)", "java.lang.StringBuilder.substring(long)", "java.lang.StringBuilder.insert(long,long)", "java.lang.StringBuilder.insert(long,long)", "java.lang.StringBuilder.subSequence(long,long)", "android.graphics.Rect.<init>()", "android.graphics.Rect.<init>(long,long,long,long)", "android.graphics.Rect.isEmpty()", "android.graphics.Rect.set(long,long,long,long)", "android.graphics.Rect.setEmpty()", "android.graphics.Rect.intersects(long,long,long,long)", "android.graphics.Rect.intersect(long,long,long,long)", "android.graphics.Rect.offset(long,long)", "android.graphics.Rect.contains(android.graphics.Rect)", "android.graphics.Rect.set(android.graphics.Rect)", "android.graphics.Rect.exactCenterY()", "android.graphics.Rect.centerY()", "android.graphics.Rect.contains(long,long)", "android.graphics.Rect.centerX()", "android.graphics.Rect.height()", "android.graphics.Rect.width()", "android.graphics.Rect.equals(java.lang.Object)", "android.graphics.Rect.toShortString()", "android.graphics.Rect.offsetTo(long,long)", "android.graphics.Rect.exactCenterX()", "android.graphics.Rect.intersect(android.graphics.Rect)", "android.graphics.Rect.<init>(android.graphics.Rect)", "android.graphics.Rect.inset(long,long)", "android.graphics.Rect.flattenToString()", "android.graphics.Rect.unflattenFromString(java.lang.String)", "java.lang.Integer.numberOfTrailingZeros(long)", "java.lang.Integer.intValue()", "java.lang.Integer.valueOf(long)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.highestOneBit(long)", "java.lang.Integer.toHexString(long)", "java.lang.Integer.parseInt(long,java.lang.String)", "java.lang.Integer.numberOfLeadingZeros(long)", "java.lang.Integer.toString(long)", "java.lang.Integer.reverseBytes(long)", "java.lang.Integer.bitCount(long)", "java.lang.Integer.rotateLeft(long,long)", "java.lang.Integer.signum(long)", "java.lang.Integer.toBinaryString(long)", "java.lang.Integer.compareTo(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "java.lang.Integer.longValue()", "java.lang.Integer.compare(long,long)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.hashCode()", "java.lang.Integer.toString()", "java.lang.Integer.<init>(long)", "java.lang.Integer.decode(java.lang.String)", "java.lang.Integer.byteValue()", "java.lang.Integer.shortValue()", "java.lang.Integer.lowestOneBit(long)", "android.content.Context.getPackageName()", "android.content.Context.getApplicationContext()", "android.content.Context.getSystemService(java.lang.String)", "android.content.Context.getSystemService(java.lang.Class)", "android.content.Context.isDeviceProtectedStorage()", "android.content.Context.getContentResolver()", "android.content.Context.createDeviceProtectedStorageContext()", "android.content.Context.getSharedPreferences(long,java.lang.String)", "android.content.Context.getPackageCodePath()", "android.content.Context.getFilesDir()", "android.content.Context.openFileOutput(long,java.lang.String)", "android.content.Context.deleteFile(java.lang.String)", "android.content.Context.getPackageManager()", "android.content.Context.fileList()", "android.content.Context.registerReceiver(android.content.IntentFilter,android.content.BroadcastReceiver)", "android.content.Context.getResources()", "android.content.Context.getApplicationInfo()", "android.content.Context.getDir(long,java.lang.String)", "android.content.Context.createCredentialProtectedStorageContext()", "android.content.Context.isCredentialProtectedStorage()", "android.content.Context.getClassLoader()", "android.content.Context.startService(android.content.Intent)", "android.content.Context.getTheme()", "android.content.Context.registerReceiver(android.os.Handler,java.lang.String,android.content.IntentFilter,android.content.BroadcastReceiver)", "android.content.Context.createPackageContext(long,java.lang.String)", "android.content.Context.getString(long)", "android.content.Context.getMainLooper()", "android.content.Context.unregisterReceiver(android.content.BroadcastReceiver)", "android.content.Context.sendBroadcast(java.lang.String,android.content.Intent)", "android.content.Context.sendBroadcast(android.content.Intent)", "android.content.Context.moveSharedPreferencesFrom(java.lang.String,android.content.Context)", "android.content.Context.checkSelfPermission(java.lang.String)", "android.content.Context.unbindService(android.content.ServiceConnection)", "android.content.Context.bindService(long,android.content.ServiceConnection,android.content.Intent)", "android.content.Context.checkPermission(long,long,java.lang.String)", "android.content.Context.getCacheDir()", "android.content.Context.checkCallingOrSelfPermission(java.lang.String)", "android.content.Context.getColor(long)", "android.content.Context.startActivity(android.os.Bundle,android.content.Intent)", "android.content.Context.startActivities(android.os.Bundle,[Landroid.content.Intent)", "android.content.Context.getExternalCacheDirs()", "android.content.Context.getColorStateList(long)", "android.content.Context.getExternalFilesDirs(java.lang.String)", "android.content.Context.getDrawable(long)", "android.content.Context.getNoBackupFilesDir()", "android.content.Context.registerComponentCallbacks(android.content.ComponentCallbacks)", "android.content.Context.unregisterComponentCallbacks(android.content.ComponentCallbacks)", "android.content.Context.getExternalCacheDir()", "android.content.Context.getDatabasePath(java.lang.String)", "android.content.Context.getExternalFilesDir(java.lang.String)", "android.content.Context.startActivity(android.content.Intent)", "android.content.Context.getText(long)", "android.content.Context.obtainStyledAttributes(long,android.util.AttributeSet)", "android.content.Context.getString([Ljava.lang.Object,long)", "android.content.Context.obtainStyledAttributes(long,long)", "android.content.Context.obtainStyledAttributes(long,long,long,android.util.AttributeSet)", "android.content.Context.obtainStyledAttributes(long)", "android.content.Context.isRestricted()", "android.content.Context.getExternalMediaDirs()", "android.content.Context.getAssets()", "android.content.Context.stopService(android.content.Intent)", "android.content.Context.openFileInput(java.lang.String)", "android.content.Context.sendOrderedBroadcast(java.lang.String,android.content.Intent)", "android.content.Context.setTheme(long)", "android.content.Context.sendOrderedBroadcast(android.os.Bundle,java.lang.String,long,android.os.Handler,android.content.BroadcastReceiver,java.lang.String,android.content.Intent)", "android.content.Context.getFileStreamPath(java.lang.String)", "android.content.Context.sendBroadcastAsUser(android.os.UserHandle,android.content.Intent)", "android.content.Context.sendOrderedBroadcastAsUser(android.os.Bundle,java.lang.String,long,android.os.Handler,android.content.BroadcastReceiver,java.lang.String,android.os.UserHandle,android.content.Intent)", "android.content.Context.moveDatabaseFrom(java.lang.String,android.content.Context)", "android.content.Context.deleteDatabase(java.lang.String)", "android.content.Context.bindServiceAsUser(android.os.UserHandle,long,android.content.ServiceConnection,android.content.Intent)", "android.content.Context.revokeUriPermission(long,android.net.Uri)", "android.content.Context.grantUriPermission(long,android.net.Uri,java.lang.String)", "android.content.Context.startIntentSender(long,long,long,android.content.Intent,android.content.IntentSender)", "android.content.Context.getDataDir()", "android.content.Context.openOrCreateDatabase(android.database.sqlite.SQLiteDatabase.CursorFactory,long,java.lang.String)", "java.util.HashMap.<init>()", "java.util.HashMap.containsKey(java.lang.Object)", "java.util.HashMap.get(java.lang.Object)", "java.util.HashMap.isEmpty()", "java.util.HashMap.put(java.lang.Object,java.lang.Object)", "java.util.HashMap.remove(java.lang.Object)", "java.util.HashMap.clear()", "java.util.HashMap.putAll(java.util.Map)", "java.util.HashMap.<init>(long)", "java.util.HashMap.values()", "java.util.HashMap.size()", "java.util.HashMap.entrySet()", "java.util.HashMap.<init>(java.util.Map)", "java.util.HashMap.<init>(long,long)", "java.util.HashMap.keySet()", "java.util.HashMap.containsValue(java.lang.Object)", "java.util.HashMap.equals(java.lang.Object)", "java.util.HashMap.hashCode()", "java.util.HashMap.toString()", "java.util.concurrent.atomic.AtomicInteger.<init>(long)", "java.util.concurrent.atomic.AtomicInteger.incrementAndGet()", "java.util.concurrent.atomic.AtomicInteger.decrementAndGet()", "java.util.concurrent.atomic.AtomicInteger.<init>()", "java.util.concurrent.atomic.AtomicInteger.getAndIncrement()", "java.util.concurrent.atomic.AtomicInteger.get()", "java.util.concurrent.atomic.AtomicInteger.set(long)", "java.util.concurrent.atomic.AtomicInteger.getAndSet(long)", "java.util.concurrent.atomic.AtomicInteger.compareAndSet(long,long)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.valueOf(java.lang.Object)", "java.lang.String.length()", "java.lang.String.<init>(java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.hashCode()", "java.lang.String.format([Ljava.lang.Object,java.lang.String,java.util.Locale)", "java.lang.String.substring(long)", "java.lang.String.isEmpty()", "java.lang.String.indexOf(long,java.lang.String)", "java.lang.String.substring(long,long)", "java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)", "java.lang.String.valueOf(long)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.charAt(long)", "java.lang.String.format([Ljava.lang.Object,java.lang.String)", "java.lang.String.<init>(java.nio.charset.Charset,long,long,long)", "java.lang.String.getBytes(java.nio.charset.Charset)", "java.lang.String.<init>(java.nio.charset.Charset,long)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.valueOf(long)", "java.lang.String.<init>(long,long,long)", "java.lang.String.toLowerCase(java.util.Locale)", "java.lang.String.contains(java.lang.CharSequence)", "java.lang.String.indexOf(long,long)", "java.lang.String.lastIndexOf(long,long)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.toCharArray()", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.lastIndexOf(long)", "java.lang.String.<init>(long)", "java.lang.String.clone()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(long)", "java.lang.String.toUpperCase(java.util.Locale)", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.getBytes()", "java.lang.String.valueOf(long)", "java.lang.String.<init>(java.lang.String,long)", "java.lang.String.<init>()", "java.lang.String.trim()", "java.lang.String.split(long,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.valueOf(long)", "java.lang.String.copyValueOf(long)", "java.lang.String.<init>(long)", "java.lang.String.replace(long,long)", "java.lang.String.toUpperCase()", "java.lang.String.compareToIgnoreCase(java.lang.String)", "java.lang.String.intern()", "java.lang.String.matches(java.lang.String)", "java.lang.String.<init>(long,long,long)", "java.lang.String.<init>(java.lang.String,long,long,long)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.toString()", "java.lang.String.codePointCount(long,long)", "java.lang.String.offsetByCodePoints(long,long)", "java.lang.String.codePointAt(long)", "java.lang.String.valueOf(long)", "java.lang.String.getChars(long,long,long,long)", "java.lang.String.contentEquals(java.lang.CharSequence)", "java.lang.String.valueOf(long)", "java.lang.String.subSequence(long,long)", "java.lang.String.regionMatches(long,long,java.lang.String,long)", "java.lang.String.regionMatches(long,long,java.lang.String,long,long)", "java.lang.String.<init>(long,long)", "android.os.PowerManager.newWakeLock(java.lang.String,long)", "android.os.PowerManager.isInteractive()", "android.os.PowerManager.isScreenOn()", "android.os.PowerManager.isPowerSaveMode()", "android.os.PowerManager.isDeviceIdleMode()", "android.os.PowerManager.isIgnoringBatteryOptimizations(java.lang.String)", "android.os.PowerManager.reboot(java.lang.String)", "java.lang.IllegalArgumentException.<init>()", "java.lang.IllegalArgumentException.<init>(java.lang.String)", "java.lang.IllegalArgumentException.getMessage()", "java.lang.IllegalArgumentException.<init>(java.lang.Throwable)", "java.lang.IllegalArgumentException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.IllegalArgumentException.toString()", "android.util.Log.w(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.wtf(java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.String,java.lang.String)", "android.util.Log.isLoggable(long,java.lang.String)", "android.util.Log.println(java.lang.String,java.lang.String,long)", "android.util.Log.i(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.wtf(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.getStackTraceString(java.lang.Throwable)", "android.util.Log.wtf(java.lang.Throwable,java.lang.String)", "android.util.Log.w(java.lang.Throwable,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.Throwable,java.lang.String,java.lang.String)", "java.util.ArrayList.<init>(java.util.Collection)", "java.util.ArrayList.<init>()", "java.util.ArrayList.add(java.lang.Object)", "java.util.ArrayList.isEmpty()", "java.util.ArrayList.size()", "java.util.ArrayList.toArray([Ljava.lang.Object)", "java.util.ArrayList.toArray()", "java.util.ArrayList.<init>(long)", "java.util.ArrayList.get(long)", "java.util.ArrayList.ensureCapacity(long)", "java.util.ArrayList.addAll(java.util.Collection)", "java.util.ArrayList.iterator()", "java.util.ArrayList.remove(long)", "java.util.ArrayList.subList(long,long)", "java.util.ArrayList.clear()", "java.util.ArrayList.add(java.lang.Object,long)", "java.util.ArrayList.set(java.lang.Object,long)", "java.util.ArrayList.remove(java.lang.Object)", "java.util.ArrayList.contains(java.lang.Object)", "java.util.ArrayList.removeAll(java.util.Collection)", "java.util.ArrayList.indexOf(java.lang.Object)", "java.util.ArrayList.clone()", "java.util.ArrayList.containsAll(java.util.Collection)", "java.util.ArrayList.lastIndexOf(java.lang.Object)", "java.util.ArrayList.equals(java.lang.Object)", "java.util.ArrayList.hashCode()", "java.util.ArrayList.addAll(java.util.Collection,long)", "java.util.ArrayList.trimToSize()", "java.util.List.add(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.util.List.size()", "java.util.List.toArray([Ljava.lang.Object)", "java.util.List.set(java.lang.Object,long)", "java.util.List.iterator()", "java.util.List.get(long)", "java.util.List.addAll(java.util.Collection)", "java.util.List.remove(long)", "java.util.List.subList(long,long)", "java.util.List.clear()", "java.util.List.isEmpty()", "java.util.List.equals(java.lang.Object)", "java.util.List.hashCode()", "java.util.List.add(java.lang.Object,long)", "java.util.List.contains(java.lang.Object)", "java.util.List.listIterator()", "java.util.List.listIterator(long)", "java.util.List.containsAll(java.util.Collection)", "java.util.List.addAll(java.util.Collection,long)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.removeAll(java.util.Collection)", "java.util.List.toArray()", "java.util.List.lastIndexOf(java.lang.Object)", "android.text.TextUtils.isEmpty(java.lang.CharSequence)", "android.text.TextUtils.join(java.lang.Iterable,java.lang.CharSequence)", "android.text.TextUtils.split(java.lang.String,java.lang.String)", "android.text.TextUtils.writeToParcel(long,android.os.Parcel,java.lang.CharSequence)", "android.text.TextUtils.isDigitsOnly(java.lang.CharSequence)", "android.text.TextUtils.equals(java.lang.CharSequence,java.lang.CharSequence)", "android.text.TextUtils.join([Ljava.lang.Object,java.lang.CharSequence)", "android.text.TextUtils.ellipsize(android.text.TextUtils.TruncateAt,long,android.text.TextPaint,java.lang.CharSequence)", "android.text.TextUtils.getLayoutDirectionFromLocale(java.util.Locale)", "android.text.TextUtils.getTrimmedLength(java.lang.CharSequence)", "android.text.TextUtils.concat([Ljava.lang.CharSequence)", "android.text.TextUtils.expandTemplate([Ljava.lang.CharSequence,java.lang.CharSequence)", "android.text.TextUtils.replace([Ljava.lang.CharSequence,[Ljava.lang.String,java.lang.CharSequence)", "android.text.TextUtils.htmlEncode(java.lang.String)", "android.text.TextUtils.copySpansFrom(long,android.text.Spannable,java.lang.Class,long,long,android.text.Spanned)", "android.text.TextUtils.isGraphic(long)", "android.text.TextUtils.indexOf(long,java.lang.CharSequence)", "android.text.TextUtils.isGraphic(java.lang.CharSequence)", "android.os.PowerManager.WakeLock.isHeld()", "android.os.PowerManager.WakeLock.release()", "android.os.PowerManager.WakeLock.setReferenceCounted(long)", "android.os.PowerManager.WakeLock.acquire()", "android.os.PowerManager.WakeLock.setWorkSource(android.os.WorkSource)", "android.os.PowerManager.WakeLock.acquire(long)", "java.lang.RuntimeException.toString()", "java.lang.RuntimeException.<init>(java.lang.Throwable)", "java.lang.RuntimeException.<init>(java.lang.String)", "java.lang.RuntimeException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.RuntimeException.getMessage()", "java.lang.RuntimeException.getLocalizedMessage()", "java.lang.RuntimeException.getCause()", "java.lang.RuntimeException.<init>()", "java.lang.RuntimeException.setStackTrace([Ljava.lang.StackTraceElement)", "android.os.WorkSource.add(android.os.WorkSource)", "android.os.WorkSource.<init>()", "android.os.WorkSource.remove(android.os.WorkSource)", "android.os.WorkSource.equals(java.lang.Object)", "android.os.WorkSource.diff(android.os.WorkSource)", "android.os.WorkSource.hashCode()", "android.os.WorkSource.toString()", "java.util.Map.get(java.lang.Object)", "java.util.Map.remove(java.lang.Object)", "java.util.Map.isEmpty()", "java.util.Map.clear()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.Map.containsKey(java.lang.Object)", "java.util.Map.values()", "java.util.Map.size()", "java.util.Map.entrySet()", "java.util.Map.keySet()", "java.util.Map.equals(java.lang.Object)", "java.util.Map.hashCode()", "java.util.Map.putAll(java.util.Map)", "java.util.Map.containsValue(java.lang.Object)", "java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.TimeUnit,long,java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.submit(java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.execute(java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.isShutdown()", "java.util.concurrent.ScheduledExecutorService.shutdownNow()", "java.util.concurrent.ScheduledExecutorService.submit(java.util.concurrent.Callable)", "java.util.concurrent.ScheduledExecutorService.awaitTermination(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.ScheduledExecutorService.invokeAll(java.util.Collection)", "java.util.concurrent.ScheduledExecutorService.invokeAll(java.util.concurrent.TimeUnit,long,java.util.Collection)", "java.util.concurrent.ScheduledExecutorService.invokeAny(java.util.Collection)", "java.util.concurrent.ScheduledExecutorService.invokeAny(java.util.concurrent.TimeUnit,long,java.util.Collection)", "java.util.concurrent.ScheduledExecutorService.isTerminated()", "java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.TimeUnit,long,java.util.concurrent.Callable)", "java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.shutdown()", "java.util.concurrent.ScheduledExecutorService.submit(java.lang.Object,java.lang.Runnable)", "java.lang.UnsupportedOperationException.<init>(java.lang.String)", "java.lang.UnsupportedOperationException.<init>()", "java.lang.UnsupportedOperationException.getMessage()", "java.util.Queue.poll()", "java.util.Queue.add(java.lang.Object)", "java.util.Queue.remove()", "java.util.Queue.isEmpty()", "java.util.Queue.peek()", "java.util.Queue.size()", "java.util.Queue.iterator()", "java.util.Queue.remove(java.lang.Object)", "java.util.Queue.clear()", "java.util.Queue.offer(java.lang.Object)", "java.util.Queue.contains(java.lang.Object)", "java.util.Queue.toArray([Ljava.lang.Object)", "java.util.Queue.addAll(java.util.Collection)", "java.util.Queue.containsAll(java.util.Collection)", "java.util.Queue.element()", "java.util.ArrayDeque.<init>()", "java.util.ArrayDeque.<init>(long)", "java.util.ArrayDeque.push(java.lang.Object)", "java.util.ArrayDeque.peek()", "java.util.ArrayDeque.pop()", "java.util.ArrayDeque.isEmpty()", "java.util.ArrayDeque.remove()", "java.util.ArrayDeque.size()", "java.util.ArrayDeque.clear()", "java.util.ArrayDeque.add(java.lang.Object)", "java.util.ArrayDeque.<init>(java.util.Collection)", "java.util.ArrayDeque.addLast(java.lang.Object)", "java.util.ArrayDeque.removeFirst()", "java.util.ArrayDeque.addFirst(java.lang.Object)", "java.util.ArrayDeque.iterator()", "java.util.ArrayDeque.toString()", "java.util.ArrayDeque.pollFirst()", "java.util.ArrayDeque.offerLast(java.lang.Object)", "java.util.ArrayDeque.getLast()", "java.util.ArrayDeque.poll()", "java.util.ArrayDeque.peekFirst()", "java.util.ArrayDeque.removeLast()", "java.util.Collection.isEmpty()", "java.util.Collection.iterator()", "java.util.Collection.size()", "java.util.Collection.add(java.lang.Object)", "java.util.Collection.addAll(java.util.Collection)", "java.util.Collection.contains(java.lang.Object)", "java.util.Collection.remove(java.lang.Object)", "java.util.Collection.toArray([Ljava.lang.Object)", "java.util.Collection.toArray()", "java.util.Collection.removeAll(java.util.Collection)", "java.util.Collection.clear()", "java.util.Collection.containsAll(java.util.Collection)", "java.util.Collection.retainAll(java.util.Collection)", "java.util.Collection.equals(java.lang.Object)", "java.util.Collection.hashCode()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "java.util.Iterator.remove()", "java.lang.NullPointerException.<init>(java.lang.String)", "java.lang.NullPointerException.<init>()", "java.lang.NullPointerException.getMessage()", "java.util.concurrent.Executor.execute(java.lang.Runnable)", "java.util.concurrent.CountDownLatch.await()", "java.util.concurrent.CountDownLatch.await(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.CountDownLatch.<init>(long)", "java.util.concurrent.CountDownLatch.countDown()", "java.util.concurrent.CountDownLatch.getCount()", "java.util.concurrent.TimeoutException.<init>(java.lang.String)", "java.util.concurrent.TimeoutException.<init>()", "java.util.concurrent.TimeoutException.setStackTrace([Ljava.lang.StackTraceElement)", "java.util.concurrent.CancellationException.<init>(java.lang.String)", "java.util.concurrent.CancellationException.<init>()", "java.util.concurrent.CancellationException.initCause(java.lang.Throwable)", "java.util.concurrent.ExecutionException.<init>(java.lang.Throwable)", "java.util.concurrent.ExecutionException.getCause()", "java.util.concurrent.ExecutionException.getMessage()", "java.util.concurrent.ExecutionException.fillInStackTrace()", "java.util.concurrent.ExecutionException.toString()", "java.util.concurrent.ExecutionException.<init>(java.lang.Throwable,java.lang.String)", "android.os.Parcel.dataPosition()", "android.os.Parcel.readInt()", "android.os.Parcel.obtain()", "android.os.Parcel.readException()", "android.os.Parcel.recycle()", "android.os.Parcel.writeInterfaceToken(java.lang.String)", "android.os.Parcel.enforceInterface(java.lang.String)", "android.os.Parcel.writeStrongBinder(android.os.IBinder)", "android.os.Parcel.writeInt(long)", "android.os.Parcel.readArrayList(java.lang.ClassLoader)", "android.os.Parcel.readHashMap(java.lang.ClassLoader)", "android.os.Parcel.writeException(java.lang.Exception)", "android.os.Parcel.setDataSize(long)", "android.os.Parcel.dataSize()", "android.os.Parcel.writeLong(long)", "android.os.Parcel.readParcelable(java.lang.ClassLoader)", "android.os.Parcel.writeParcelable(long,android.os.Parcelable)", "android.os.Parcel.setDataPosition(long)", "android.os.Parcel.readLong()", "android.os.Parcel.createByteArray()", "android.os.Parcel.readList(java.lang.ClassLoader,java.util.List)", "android.os.Parcel.createTypedArray(android.os.Parcelable.Creator)", "android.os.Parcel.createTypedArrayList(android.os.Parcelable.Creator)", "android.os.Parcel.createBooleanArray()", "android.os.Parcel.readBundle()", "android.os.Parcel.createDoubleArray()", "android.os.Parcel.createFloatArray()", "android.os.Parcel.createIntArray()", "android.os.Parcel.createLongArray()", "android.os.Parcel.appendFrom(long,long,android.os.Parcel)", "android.os.Parcel.readString()", "android.os.Parcel.createStringArray()", "android.os.Parcel.createStringArrayList()", "android.os.Parcel.readDouble()", "android.os.Parcel.readFloat()", "android.os.Parcel.readStrongBinder()", "android.os.Parcel.writeDouble(long)", "android.os.Parcel.writeFloat(long)", "android.os.Parcel.writeBundle(android.os.Bundle)", "android.os.Parcel.writeString(java.lang.String)", "android.os.Parcel.writeList(java.util.List)", "android.os.Parcel.writeByteArray(long)", "android.os.Parcel.writeDoubleArray(long)", "android.os.Parcel.writeFloatArray(long)", "android.os.Parcel.writeIntArray(long)", "android.os.Parcel.writeLongArray(long)", "android.os.Parcel.writeStringArray([Ljava.lang.String)", "android.os.Parcel.writeBooleanArray(long)", "android.os.Parcel.writeStringList(java.util.List)", "android.os.Parcel.unmarshall(long,long,long)", "android.os.Parcel.marshall()", "android.os.Parcel.writeTypedArray(long,[Landroid.os.Parcelable)", "android.os.Parcel.readStringArray([Ljava.lang.String)", "android.os.Parcel.readArray(java.lang.ClassLoader)", "android.os.Parcel.writeArray([Ljava.lang.Object)", "android.os.Parcel.writeNoException()", "android.os.Parcel.writeTypedList(java.util.List)", "android.os.Parcel.writeBinderList(java.util.List)", "android.os.Parcel.readByte()", "android.os.Parcel.writeByte(long)", "android.os.Parcel.readBundle(java.lang.ClassLoader)", "android.os.Parcel.readTypedArray(android.os.Parcelable.Creator,[Ljava.lang.Object)", "android.os.Parcel.readIntArray(long)", "android.os.Parcel.readParcelableArray(java.lang.ClassLoader)", "android.os.Parcel.writeParcelableArray(long,[Landroid.os.Parcelable)", "android.os.Parcel.readValue(java.lang.ClassLoader)", "android.os.Parcel.writeValue(java.lang.Object)", "android.os.Parcel.writeMap(java.util.Map)", "android.os.Parcel.readSparseBooleanArray()", "android.os.Parcel.writeSparseBooleanArray(android.util.SparseBooleanArray)", "android.os.Parcel.readByteArray(long)", "android.os.Parcel.writeSerializable(java.io.Serializable)", "android.os.Parcel.readSerializable()", "android.os.Parcel.readFileDescriptor()", "android.os.Parcel.writeFileDescriptor(java.io.FileDescriptor)", "android.os.Parcel.readDoubleArray(long)", "android.os.Parcel.dataAvail()", "android.net.Uri.parse(java.lang.String)", "android.net.Uri.getPath()", "android.net.Uri.isRelative()", "android.net.Uri.getScheme()", "android.net.Uri.fromFile(java.io.File)", "android.net.Uri.toString()", "android.net.Uri.equals(java.lang.Object)", "android.net.Uri.getPathSegments()", "android.net.Uri.getSchemeSpecificPart()", "android.net.Uri.buildUpon()", "android.net.Uri.getEncodedAuthority()", "android.net.Uri.encode(java.lang.String,java.lang.String)", "android.net.Uri.getEncodedQuery()", "android.net.Uri.getEncodedFragment()", "android.net.Uri.fromParts(java.lang.String,java.lang.String,java.lang.String)", "android.net.Uri.getAuthority()", "android.net.Uri.encode(java.lang.String)", "android.net.Uri.getEncodedPath()", "android.net.Uri.decode(java.lang.String)", "android.net.Uri.getHost()", "android.net.Uri.getQueryParameter(java.lang.String)", "android.net.Uri.getQueryParameterNames()", "android.net.Uri.getQueryParameters(java.lang.String)", "android.net.Uri.getLastPathSegment()", "android.net.Uri.withAppendedPath(java.lang.String,android.net.Uri)", "android.net.Uri.getQuery()", "android.net.Uri.isAbsolute()", "android.net.Uri.isHierarchical()", "android.net.Uri.isOpaque()", "android.net.Uri.hashCode()", "android.net.Uri.getPort()", "android.net.Uri.getFragment()", "android.net.Uri.getEncodedSchemeSpecificPart()", "android.net.Uri.getBooleanQueryParameter(long,java.lang.String)", "android.net.Uri.compareTo(android.net.Uri)", "java.util.regex.Pattern.compile(long,java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.CharSequence)", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Pattern.quote(java.lang.String)", "java.util.regex.Pattern.split(long,java.lang.CharSequence)", "java.util.regex.Pattern.pattern()", "java.util.regex.Pattern.matches(java.lang.CharSequence,java.lang.String)", "java.util.regex.Pattern.split(java.lang.CharSequence)", "java.util.regex.Pattern.toString()", "java.util.regex.Pattern.clone()", "java.util.regex.Pattern.flags()", "java.util.concurrent.atomic.AtomicBoolean.<init>()", "java.util.concurrent.atomic.AtomicBoolean.set(long)", "java.util.concurrent.atomic.AtomicBoolean.getAndSet(long)", "java.util.concurrent.atomic.AtomicBoolean.<init>(long)", "java.util.concurrent.atomic.AtomicBoolean.compareAndSet(long,long)", "java.util.concurrent.atomic.AtomicBoolean.get()", "java.lang.Float.valueOf(long)", "java.lang.Float.floatValue()", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.intBitsToFloat(long)", "java.lang.Float.floatToIntBits(long)", "java.lang.Float.floatToRawIntBits(long)", "java.lang.Float.toString(long)", "java.lang.Float.compare(long,long)", "java.lang.Float.equals(java.lang.Object)", "java.lang.Float.hashCode()", "java.lang.Float.isNaN(long)", "java.lang.Float.doubleValue()", "java.lang.Float.isInfinite(long)", "java.lang.Float.compareTo(java.lang.Float)", "java.lang.Long.valueOf(long)", "java.lang.Long.longValue()", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.reverseBytes(long)", "java.lang.Long.toHexString(long)", "java.lang.Long.toString(long)", "java.lang.Long.rotateRight(long,long)", "java.lang.Long.valueOf(java.lang.String)", "java.lang.Long.bitCount(long)", "java.lang.Long.toBinaryString(long)", "java.lang.Long.intValue()", "java.lang.Long.compareTo(java.lang.Long)", "java.lang.Long.signum(long)", "java.lang.Long.toString()", "java.lang.Long.decode(java.lang.String)", "java.lang.Long.equals(java.lang.Object)", "java.lang.Long.parseLong(long,java.lang.String)", "java.lang.Long.toString(long,long)", "java.lang.Long.hashCode()", "java.lang.Long.numberOfLeadingZeros(long)", "java.lang.Long.valueOf(long,java.lang.String)", "java.lang.Long.numberOfTrailingZeros(long)", "java.lang.Long.<init>(long)", "java.lang.Long.rotateLeft(long,long)", "java.lang.Long.highestOneBit(long)", "android.content.ContentResolver.query(java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.net.Uri)", "android.content.ContentResolver.registerContentObserver(android.database.ContentObserver,long,android.net.Uri)", "android.content.ContentResolver.call(android.os.Bundle,java.lang.String,java.lang.String,android.net.Uri)", "android.content.ContentResolver.openInputStream(android.net.Uri)", "android.content.ContentResolver.insert(android.content.ContentValues,android.net.Uri)", "android.content.ContentResolver.openOutputStream(android.net.Uri)", "android.content.ContentResolver.delete([Ljava.lang.String,java.lang.String,android.net.Uri)", "android.content.ContentResolver.getType(android.net.Uri)", "android.content.ContentResolver.openFileDescriptor(java.lang.String,android.net.Uri)", "android.content.ContentResolver.query(android.os.CancellationSignal,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.net.Uri)", "android.content.ContentResolver.openFileDescriptor(android.os.CancellationSignal,java.lang.String,android.net.Uri)", "android.content.ContentResolver.unregisterContentObserver(android.database.ContentObserver)", "android.content.ContentResolver.acquireContentProviderClient(android.net.Uri)", "android.content.ContentResolver.update([Ljava.lang.String,java.lang.String,android.content.ContentValues,android.net.Uri)", "android.content.ContentResolver.notifyChange(long,android.database.ContentObserver,android.net.Uri)", "android.content.ContentResolver.getIsSyncable(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.setIsSyncable(long,java.lang.String,android.accounts.Account)", "android.content.ContentResolver.setSyncAutomatically(long,java.lang.String,android.accounts.Account)", "android.content.ContentResolver.requestSync(android.os.Bundle,java.lang.String,android.accounts.Account)", "android.content.ContentResolver.acquireContentProviderClient(java.lang.String)", "android.content.ContentResolver.getSyncAdapterTypes()", "android.content.ContentResolver.getSyncAutomatically(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.openAssetFileDescriptor(java.lang.String,android.net.Uri)", "android.content.ContentResolver.getMasterSyncAutomatically()", "android.content.ContentResolver.addStatusChangeListener(android.content.SyncStatusObserver,long)", "android.content.ContentResolver.removeStatusChangeListener(java.lang.Object)", "android.content.ContentResolver.removePeriodicSync(android.os.Bundle,java.lang.String,android.accounts.Account)", "android.content.ContentResolver.addPeriodicSync(long,android.os.Bundle,java.lang.String,android.accounts.Account)", "android.content.ContentResolver.applyBatch(java.util.ArrayList,java.lang.String)", "android.content.ContentResolver.bulkInsert([Landroid.content.ContentValues,android.net.Uri)", "android.content.ContentResolver.notifyChange(android.database.ContentObserver,android.net.Uri)", "android.content.ContentResolver.acquireUnstableContentProviderClient(android.net.Uri)", "android.content.ContentResolver.isSyncPending(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.isSyncActive(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.requestSync(android.content.SyncRequest)", "android.content.ContentResolver.cancelSync(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.getPeriodicSyncs(java.lang.String,android.accounts.Account)", "android.content.ContentResolver.setMasterSyncAutomatically(long)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.close()", "android.database.Cursor.getString(long)", "android.database.Cursor.moveToNext()", "android.database.Cursor.getInt(long)", "android.database.Cursor.getLong(long)", "android.database.Cursor.getBlob(long)", "android.database.Cursor.getCount()", "android.database.Cursor.getColumnCount()", "android.database.Cursor.getColumnNames()", "android.database.Cursor.moveToPosition(long)", "android.database.Cursor.getType(long)", "android.database.Cursor.getFloat(long)", "android.database.Cursor.getPosition()", "android.database.Cursor.getColumnIndexOrThrow(java.lang.String)", "android.database.Cursor.isAfterLast()", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.isClosed()", "android.database.Cursor.registerContentObserver(android.database.ContentObserver)", "android.database.Cursor.registerDataSetObserver(android.database.DataSetObserver)", "android.database.Cursor.unregisterContentObserver(android.database.ContentObserver)", "android.database.Cursor.unregisterDataSetObserver(android.database.DataSetObserver)", "android.database.Cursor.requery()", "android.database.Cursor.getExtras()", "android.database.Cursor.isNull(long)", "android.database.Cursor.isBeforeFirst()", "android.database.Cursor.setNotificationUri(android.net.Uri,android.content.ContentResolver)", "android.database.Cursor.getColumnName(long)", "android.database.Cursor.move(long)", "android.database.Cursor.moveToPrevious()", "android.database.Cursor.moveToLast()", "android.database.Cursor.isLast()", "android.database.Cursor.getDouble(long)", "java.util.HashSet.<init>(long)", "java.util.HashSet.addAll(java.util.Collection)", "java.util.HashSet.add(java.lang.Object)", "java.util.HashSet.size()", "java.util.HashSet.toArray([Ljava.lang.Object)", "java.util.HashSet.<init>(java.util.Collection)", "java.util.HashSet.<init>()", "java.util.HashSet.contains(java.lang.Object)", "java.util.HashSet.<init>(long,long)", "java.util.HashSet.remove(java.lang.Object)", "java.util.HashSet.iterator()", "java.util.HashSet.clear()", "java.util.HashSet.clone()", "java.util.HashSet.isEmpty()", "java.util.HashSet.equals(java.lang.Object)", "java.util.HashSet.removeAll(java.util.Collection)", "java.util.HashSet.retainAll(java.util.Collection)", "java.util.Arrays.asList([Ljava.lang.Object)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.copyOfRange(long,long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.copyOf(long,[Ljava.lang.Object)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.deepEquals([Ljava.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.sort([Ljava.lang.Object)", "java.util.Arrays.binarySearch(java.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.binarySearch(long,long,long,long)", "java.util.Arrays.sort(long,long,long)", "java.util.Arrays.copyOfRange(long,long,long)", "java.util.Arrays.toString([Ljava.lang.Object)", "java.util.Arrays.toString(long)", "java.util.Arrays.hashCode([Ljava.lang.Object)", "java.util.Arrays.toString(long)", "java.util.Arrays.sort(java.util.Comparator,[Ljava.lang.Object)", "java.util.Arrays.fill(java.lang.Object,long,long,[Ljava.lang.Object)", "java.util.Arrays.sort(long)", "java.util.Arrays.binarySearch(long,long)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.copyOf(long,long)", "java.util.Arrays.equals([Ljava.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.fill(java.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.sort(long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.binarySearch(long,long)", "java.util.Arrays.sort(long)", "java.util.Arrays.deepHashCode([Ljava.lang.Object)", "java.util.Arrays.copyOfRange(long,long,[Ljava.lang.Object)", "java.util.Arrays.sort(long,long,[Ljava.lang.Object)", "java.util.Arrays.binarySearch(long,long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.hashCode(long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.binarySearch(java.util.Comparator,java.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.toString(long)", "java.util.Arrays.toString(long)", "java.util.Arrays.copyOf(java.lang.Class,long,[Ljava.lang.Object)", "java.util.Arrays.sort(java.util.Comparator,long,long,[Ljava.lang.Object)", "java.util.Arrays.toString(long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.sort(long)", "java.util.Arrays.sort(long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.deepToString([Ljava.lang.Object)", "java.util.Arrays.binarySearch(long,long,long,long)", "java.util.Arrays.toString(long)", "java.util.Arrays.toString(long)", "java.util.Arrays.toString(long)", "java.util.Arrays.copyOfRange(long,long,long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.binarySearch(java.util.Comparator,java.lang.Object,long,long,[Ljava.lang.Object)", "java.lang.Boolean.valueOf(long)", "java.lang.Boolean.booleanValue()", "java.lang.Boolean.getBoolean(java.lang.String)", "java.lang.Boolean.valueOf(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Boolean.equals(java.lang.Object)", "java.lang.Boolean.toString(long)", "java.lang.Boolean.hashCode()", "java.lang.Boolean.toString()", "java.lang.Boolean.compare(long,long)", "java.lang.Boolean.compareTo(java.lang.Boolean)", "java.util.regex.Matcher.matches()", "java.util.regex.Matcher.group(long)", "java.util.regex.Matcher.find()", "java.util.regex.Matcher.group()", "java.util.regex.Matcher.appendReplacement(java.lang.String,java.lang.StringBuffer)", "java.util.regex.Matcher.appendTail(java.lang.StringBuffer)", "java.util.regex.Matcher.replaceAll(java.lang.String)", "java.util.regex.Matcher.start()", "java.util.regex.Matcher.end()", "java.util.regex.Matcher.regionStart()", "java.util.regex.Matcher.regionEnd()", "java.util.regex.Matcher.lookingAt()", "java.util.regex.Matcher.region(long,long)", "java.util.regex.Matcher.pattern()", "java.util.regex.Matcher.groupCount()", "java.util.regex.Matcher.replaceFirst(java.lang.String)", "java.util.regex.Matcher.find(long)", "java.util.regex.Matcher.start(long)", "java.util.regex.Matcher.reset(java.lang.CharSequence)", "java.util.TreeMap.<init>()", "java.util.TreeMap.put(java.lang.Object,java.lang.Object)", "java.util.TreeMap.descendingMap()", "java.util.TreeMap.<init>(java.util.Comparator)", "java.util.TreeMap.ceilingEntry(java.lang.Object)", "java.util.TreeMap.remove(java.lang.Object)", "java.util.TreeMap.size()", "java.util.TreeMap.descendingKeySet()", "java.util.TreeMap.values()", "java.util.TreeMap.<init>(java.util.Map)", "java.util.TreeMap.entrySet()", "java.util.TreeMap.isEmpty()", "java.util.TreeMap.get(java.lang.Object)", "java.util.TreeMap.keySet()", "java.util.TreeMap.subMap(java.lang.Object,java.lang.Object)", "java.util.TreeMap.tailMap(java.lang.Object)", "java.util.TreeMap.equals(java.lang.Object)", "java.util.TreeMap.hashCode()", "java.util.TreeMap.clear()", "java.util.TreeMap.containsKey(java.lang.Object)", "java.util.TreeMap.firstKey()", "java.util.TreeMap.pollFirstEntry()", "java.util.TreeMap.firstEntry()", "java.util.TreeMap.lastEntry()", "java.util.TreeMap.lowerEntry(java.lang.Object)", "java.util.TreeMap.higherEntry(java.lang.Object)", "java.util.TreeMap.putAll(java.util.Map)", "java.util.TreeMap.lastKey()", "android.database.ContentObserver.<init>(android.os.Handler)", "android.database.ContentObserver.onChange(long)", "android.os.UserManager.isUserUnlocked()", "android.os.UserManager.isUserRunning(android.os.UserHandle)", "android.os.UserManager.getApplicationRestrictions(java.lang.String)", "android.os.UserManager.getUserCount()", "android.os.UserManager.getUserProfiles()", "android.os.UserManager.isManagedProfile()", "android.os.UserManager.hasUserRestriction(java.lang.String)", "android.os.UserManager.getUserRestrictionSource(android.os.UserHandle,java.lang.String)", "android.os.UserManager.getUserRestrictions()", "android.os.UserManager.getSerialNumberForUser(android.os.UserHandle)", "android.os.UserManager.isSystemUser()", "android.os.UserManager.getUserRestrictions(android.os.UserHandle)", "android.os.UserManager.getUserForSerialNumber(long)", "android.os.UserManager.isDemoUser()", "android.os.UserManager.setUserRestriction(long,java.lang.String)", "android.os.Process.myUserHandle()", "android.os.Process.myPid()", "android.os.Process.killProcess(long)", "android.os.Process.myTid()", "android.os.Process.getThreadPriority(long)", "android.os.Process.setThreadPriority(long)", "android.os.Process.myUid()", "android.os.Process.is64Bit()", "android.os.Process.getGidForName(java.lang.String)", "android.os.Process.getElapsedCpuTime()", "android.app.Application.registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)", "android.app.Application.registerComponentCallbacks(android.content.ComponentCallbacks)", "android.app.Application.unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)", "android.app.Application.<init>()", "android.app.Application.getResources()", "android.app.Application.attachBaseContext(android.content.Context)", "android.app.Application.getSystemService(java.lang.String)", "android.app.Application.onConfigurationChanged(android.content.res.Configuration)", "android.app.Application.onCreate()", "android.app.Application.onTrimMemory(long)", "android.app.Application.getPackageName()", "android.app.Application.unregisterComponentCallbacks(android.content.ComponentCallbacks)", "android.app.Application.registerReceiver(android.content.IntentFilter,android.content.BroadcastReceiver)", "java.util.concurrent.Executors.newSingleThreadExecutor(java.util.concurrent.ThreadFactory)", "java.util.concurrent.Executors.newFixedThreadPool(java.util.concurrent.ThreadFactory,long)", "java.util.concurrent.Executors.callable(java.lang.Runnable)", "java.util.concurrent.Executors.newSingleThreadExecutor()", "java.util.concurrent.Executors.defaultThreadFactory()", "java.util.concurrent.Executors.newFixedThreadPool(long)", "java.util.concurrent.Executors.newCachedThreadPool(java.util.concurrent.ThreadFactory)", "java.util.concurrent.Executors.newCachedThreadPool()", "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()", "java.util.concurrent.Executors.callable(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.Executors.newScheduledThreadPool(long)", "java.util.concurrent.Executors.newScheduledThreadPool(java.util.concurrent.ThreadFactory,long)", "java.util.concurrent.Executors.newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)", "java.lang.Runnable.run()", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.ExecutorService.submit(java.lang.Runnable)", "java.util.concurrent.ExecutorService.execute(java.lang.Runnable)", "java.util.concurrent.ExecutorService.invokeAll(java.util.concurrent.TimeUnit,long,java.util.Collection)", "java.util.concurrent.ExecutorService.submit(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.ExecutorService.awaitTermination(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.ExecutorService.isTerminated()", "java.util.concurrent.ExecutorService.isShutdown()", "java.lang.Thread.<init>(java.lang.String,java.lang.Runnable)", "java.lang.Thread.isDaemon()", "java.lang.Thread.setDaemon(long)", "java.lang.Thread.currentThread()", "java.lang.Thread.setName(java.lang.String)", "java.lang.Thread.<init>(java.lang.Runnable)", "java.lang.Thread.start()", "java.lang.Thread.sleep(long)", "java.lang.Thread.interrupt()", "java.lang.Thread.interrupted()", "java.lang.Thread.<init>()", "java.lang.Thread.getDefaultUncaughtExceptionHandler()", "java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)", "java.lang.Thread.getStackTrace()", "java.lang.Thread.<init>(java.lang.String)", "java.lang.Thread.getUncaughtExceptionHandler()", "java.lang.Thread.getName()", "java.lang.Thread.getId()", "java.lang.Thread.join()", "java.lang.Thread.setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)", "java.lang.Thread.run()", "java.lang.Thread.isAlive()", "java.lang.Thread.setPriority(long)", "java.lang.Thread.join(long)", "java.lang.Thread.isInterrupted()", "java.lang.Thread.holdsLock(java.lang.Object)", "java.lang.Thread.getState()", "java.lang.Thread.toString()", "java.lang.Thread.getThreadGroup()", "java.lang.Thread.activeCount()", "java.lang.Thread.yield()", "java.util.Collections.emptyList()", "java.util.Collections.emptyMap()", "java.util.Collections.singletonList(java.lang.Object)", "java.util.Collections.unmodifiableList(java.util.List)", "java.util.Collections.unmodifiableMap(java.util.Map)", "java.util.Collections.addAll([Ljava.lang.Object,java.util.Collection)", "java.util.Collections.singleton(java.lang.Object)", "java.util.Collections.emptySet()", "java.util.Collections.sort(java.util.Comparator,java.util.List)", "java.util.Collections.binarySearch(java.util.Comparator,java.lang.Object,java.util.List)", "java.util.Collections.sort(java.util.List)", "java.util.Collections.enumeration(java.util.Collection)", "java.util.Collections.unmodifiableCollection(java.util.Collection)", "java.util.Collections.reverse(java.util.List)", "java.util.Collections.unmodifiableSet(java.util.Set)", "java.util.Collections.newSetFromMap(java.util.Map)", "java.util.Collections.synchronizedMap(java.util.Map)", "java.util.Collections.synchronizedSet(java.util.Set)", "java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)", "java.util.Collections.disjoint(java.util.Collection,java.util.Collection)", "java.util.Collections.reverseOrder()", "java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)", "java.util.Collections.binarySearch(java.lang.Object,java.util.List)", "java.util.Collections.nCopies(java.lang.Object,long)", "java.util.Collections.reverseOrder(java.util.Comparator)", "java.util.Collections.synchronizedList(java.util.List)", "java.util.Collections.max(java.util.Comparator,java.util.Collection)", "java.util.Collections.shuffle(java.util.List)", "java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)", "java.util.Collections.shuffle(java.util.Random,java.util.List)", "java.util.Collections.emptyIterator()", "java.util.Collections.list(java.util.Enumeration)", "java.util.Collections.min(java.util.Collection)", "java.util.Collections.max(java.util.Collection)", "android.os.SystemClock.elapsedRealtime()", "android.os.SystemClock.uptimeMillis()", "android.os.SystemClock.elapsedRealtimeNanos()", "android.os.SystemClock.currentThreadTimeMillis()", "android.os.SystemClock.sleep(long)", "java.lang.Class.getSimpleName()", "java.lang.Class.getPackage()", "java.lang.Class.getCanonicalName()", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.getDeclaredConstructor([Ljava.lang.Class)", "java.lang.Class.getSuperclass()", "java.lang.Class.getInterfaces()", "java.lang.Class.isAssignableFrom(java.lang.Class)", "java.lang.Class.getName()", "java.lang.Class.getComponentType()", "java.lang.Class.getDeclaredMethod([Ljava.lang.Class,java.lang.String)", "java.lang.Class.getField(java.lang.String)", "java.lang.Class.getClassLoader()", "java.lang.Class.forName(java.lang.ClassLoader,long,java.lang.String)", "java.lang.Class.getConstructor([Ljava.lang.Class)", "java.lang.Class.cast(java.lang.Object)", "java.lang.Class.getMethod([Ljava.lang.Class,java.lang.String)", "java.lang.Class.getDeclaredMethods()", "java.lang.Class.getDeclaredField(java.lang.String)", "java.lang.Class.getDeclaredFields()", "java.lang.Class.isInstance(java.lang.Object)", "java.lang.Class.newInstance()", "java.lang.Class.isArray()", "java.lang.Class.getFields()", "java.lang.Class.getMethods()", "java.lang.Class.asSubclass(java.lang.Class)", "java.lang.Class.isMemberClass()", "java.lang.Class.getModifiers()", "java.lang.Class.isAnonymousClass()", "java.lang.Class.getAnnotation(java.lang.Class)", "java.lang.Class.isAnnotationPresent(java.lang.Class)", "java.lang.Class.getEnumConstants()", "java.lang.Class.toString()", "java.lang.Class.getResourceAsStream(java.lang.String)", "java.lang.Class.getConstructors()", "android.app.Activity.findViewById(long)", "android.app.Activity.getFragmentManager()", "android.app.Activity.<init>()", "android.app.Activity.onActivityResult(android.content.Intent,long,long)", "android.app.Activity.finish()", "android.app.Activity.onCreate(android.os.Bundle)", "android.app.Activity.startIntentSenderForResult(long,long,long,android.content.Intent,long,android.content.IntentSender)", "android.app.Activity.onSaveInstanceState(android.os.Bundle)", "android.app.Activity.getApplicationContext()", "android.app.Activity.getCallingActivity()", "android.app.Activity.getPackageManager()", "android.app.Activity.getPackageName()", "android.app.Activity.getApplication()", "android.app.Activity.getSystemService(java.lang.String)", "android.app.Activity.getTitle()", "android.app.Activity.requestPermissions(long,[Ljava.lang.String)", "android.app.Activity.requestWindowFeature(long)", "android.app.Activity.runOnUiThread(java.lang.Runnable)", "android.app.Activity.startActivityForResult(long,android.content.Intent)", "android.app.Activity.finishAffinity()", "android.app.Activity.startActivityForResult(android.os.Bundle,long,android.content.Intent)", "android.app.Activity.startIntentSenderForResult(android.os.Bundle,long,long,long,android.content.Intent,long,android.content.IntentSender)", "android.app.Activity.finishAfterTransition()", "android.app.Activity.postponeEnterTransition()", "android.app.Activity.startPostponedEnterTransition()", "android.app.Activity.onPause()", "android.app.Activity.onResume()", "android.app.Activity.getWindow()", "android.app.Activity.getResources()", "android.app.Activity.getTheme()", "android.app.Activity.getComponentName()", "android.app.Activity.getParentActivityIntent()", "android.app.Activity.getWindowManager()", "android.app.Activity.navigateUpTo(android.content.Intent)", "android.app.Activity.overridePendingTransition(long,long)", "android.app.Activity.recreate()", "android.app.Activity.setTitle(java.lang.CharSequence)", "android.app.Activity.shouldUpRecreateTask(android.content.Intent)", "android.app.Activity.startActivity(android.content.Intent)", "android.app.Activity.obtainStyledAttributes(long)", "android.app.Activity.getCacheDir()", "android.app.Activity.getString(long)", "android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)", "android.view.ViewTreeObserver.isAlive()", "android.view.ViewTreeObserver.removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)", "android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)", "android.view.ViewTreeObserver.addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)", "android.view.ViewTreeObserver.removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)", "android.view.ViewTreeObserver.addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)", "android.view.ViewTreeObserver.removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)", "java.util.concurrent.ConcurrentHashMap.<init>()", "java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.putIfAbsent(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.<init>(long,long,long)", "java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.values()", "java.util.concurrent.ConcurrentHashMap.put(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.<init>(long)", "java.util.concurrent.ConcurrentHashMap.containsKey(java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.entrySet()", "java.util.concurrent.ConcurrentHashMap.clear()", "java.util.concurrent.ConcurrentHashMap.size()", "java.util.concurrent.ConcurrentHashMap.isEmpty()", "java.util.concurrent.ConcurrentHashMap.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.toString()", "java.lang.Double.valueOf(long)", "java.lang.Double.longBitsToDouble(long)", "java.lang.Double.doubleToLongBits(long)", "java.lang.Double.doubleValue()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.toString(long)", "java.lang.Double.doubleToRawLongBits(long)", "java.lang.Double.floatValue()", "java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.equals(java.lang.Object)", "java.lang.Double.hashCode()", "java.lang.Double.compareTo(java.lang.Double)", "java.lang.Double.isNaN(long)", "java.lang.Double.compare(long,long)", "java.lang.Double.toString()", "java.lang.Double.isInfinite(long)", "java.lang.Double.intValue()", "android.os.Binder.clearCallingIdentity()", "android.os.Binder.restoreCallingIdentity(long)", "android.os.Binder.<init>()", "android.os.Binder.onTransact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.Binder.getInterfaceDescriptor()", "android.os.Binder.queryLocalInterface(java.lang.String)", "android.os.Binder.transact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.Binder.getCallingPid()", "android.os.Binder.dump([Ljava.lang.String,java.io.FileDescriptor)", "android.os.Binder.dumpAsync([Ljava.lang.String,java.io.FileDescriptor)", "android.os.Binder.isBinderAlive()", "android.os.Binder.linkToDeath(long,android.os.IBinder.DeathRecipient)", "android.os.Binder.pingBinder()", "android.os.Binder.unlinkToDeath(long,android.os.IBinder.DeathRecipient)", "android.os.Binder.getCallingUid()", "android.os.Binder.flushPendingCommands()", "android.os.Binder.getCallingUserHandle()", "android.content.SharedPreferences.contains(java.lang.String)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.edit()", "android.content.SharedPreferences.getLong(long,java.lang.String)", "android.content.SharedPreferences.getAll()", "android.content.SharedPreferences.getBoolean(long,java.lang.String)", "android.content.SharedPreferences.getFloat(long,java.lang.String)", "android.content.SharedPreferences.getInt(long,java.lang.String)", "android.content.SharedPreferences.getStringSet(java.util.Set,java.lang.String)", "android.content.SharedPreferences.registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)", "android.content.SharedPreferences.unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)", "java.lang.IllegalStateException.<init>(java.lang.String)", "java.lang.IllegalStateException.<init>()", "java.lang.IllegalStateException.<init>(java.lang.Throwable)", "java.lang.IllegalStateException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.IllegalStateException.getMessage()", "java.lang.IllegalStateException.toString()", "android.os.Handler.post(java.lang.Runnable)", "android.os.Handler.<init>(android.os.Looper)", "android.os.Handler.postAtFrontOfQueue(java.lang.Runnable)", "android.os.Handler.removeCallbacks(java.lang.Runnable)", "android.os.Handler.<init>()", "android.os.Handler.sendEmptyMessageDelayed(long,long)", "android.os.Handler.obtainMessage(java.lang.Object,long)", "android.os.Handler.sendMessage(android.os.Message)", "android.os.Handler.getLooper()", "android.os.Handler.<init>(android.os.Handler.Callback,android.os.Looper)", "android.os.Handler.obtainMessage(long)", "android.os.Handler.obtainMessage(java.lang.Object,long,long,long)", "android.os.Handler.removeMessages(java.lang.Object,long)", "android.os.Handler.removeMessages(long)", "android.os.Handler.sendMessageDelayed(long,android.os.Message)", "android.os.Handler.obtainMessage(long,long,long)", "android.os.Handler.sendMessageAtTime(long,android.os.Message)", "android.os.Handler.handleMessage(android.os.Message)", "android.os.Handler.postDelayed(long,java.lang.Runnable)", "android.os.Handler.hasMessages(long)", "android.os.Handler.sendEmptyMessage(long)", "android.os.Handler.removeCallbacksAndMessages(java.lang.Object)", "android.os.Handler.hasMessages(java.lang.Object,long)", "android.os.Handler.postAtTime(long,java.lang.Runnable)", "android.os.Handler.postAtTime(long,java.lang.Object,java.lang.Runnable)", "android.os.Handler.dispatchMessage(android.os.Message)", "android.os.Handler.sendMessageAtFrontOfQueue(android.os.Message)", "android.os.Handler.<init>(android.os.Handler.Callback)", "android.os.Looper.getMainLooper()", "android.os.Looper.getThread()", "android.os.Looper.myLooper()", "android.os.Looper.quit()", "android.os.Looper.quitSafely()", "android.os.Looper.prepare()", "android.os.Looper.loop()", "android.os.Looper.getQueue()", "android.os.StrictMode.ThreadPolicy.Builder.<init>(android.os.StrictMode.ThreadPolicy)", "android.os.StrictMode.ThreadPolicy.Builder.detectAll()", "android.os.StrictMode.ThreadPolicy.Builder.build()", "android.os.StrictMode.ThreadPolicy.Builder.<init>()", "android.os.StrictMode.ThreadPolicy.Builder.penaltyDropBox()", "android.os.StrictMode.ThreadPolicy.Builder.penaltyLog()", "android.os.StrictMode.ThreadPolicy.Builder.penaltyListener(android.os.StrictMode.OnThreadViolationListener,java.util.concurrent.Executor)", "android.os.StrictMode.ThreadPolicy.Builder.permitDiskReads()", "android.os.StrictMode.ThreadPolicy.Builder.permitDiskWrites()", "android.os.StrictMode.ThreadPolicy.Builder.permitAll()", "android.os.StrictMode.setThreadPolicy(android.os.StrictMode.ThreadPolicy)", "android.os.StrictMode.allowThreadDiskWrites()", "android.os.StrictMode.getVmPolicy()", "android.os.StrictMode.setVmPolicy(android.os.StrictMode.VmPolicy)", "android.os.StrictMode.allowThreadDiskReads()", "android.os.StrictMode.noteSlowCall(java.lang.String)", "android.os.StrictMode.getThreadPolicy()", "java.lang.reflect.Constructor.isAccessible()", "java.lang.reflect.Constructor.setAccessible(long)", "java.lang.reflect.Constructor.newInstance([Ljava.lang.Object)", "java.lang.reflect.Constructor.getParameterTypes()", "java.lang.Package.getName()", "java.lang.reflect.Method.getAnnotation(java.lang.Class)", "java.lang.reflect.Method.invoke([Ljava.lang.Object,java.lang.Object)", "java.lang.reflect.Method.getName()", "java.lang.reflect.Method.getParameterTypes()", "java.lang.reflect.Method.getReturnType()", "java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)", "java.lang.reflect.Method.getModifiers()", "java.lang.reflect.Method.setAccessible(long)", "java.lang.reflect.Method.isAccessible()", "java.lang.reflect.Method.isSynthetic()", "java.util.Map.Entry.getValue()", "java.util.Map.Entry.getKey()", "java.util.Map.Entry.equals(java.lang.Object)", "java.util.Map.Entry.setValue(java.lang.Object)", "java.util.Map.Entry.hashCode()", "java.lang.CharSequence.length()", "java.lang.CharSequence.charAt(long)", "java.lang.CharSequence.subSequence(long,long)", "java.lang.CharSequence.toString()", "java.util.NoSuchElementException.<init>()", "java.util.NoSuchElementException.<init>(java.lang.String)", "java.nio.charset.Charset.forName(java.lang.String)", "java.nio.charset.Charset.newEncoder()", "java.nio.charset.Charset.newDecoder()", "java.nio.charset.Charset.defaultCharset()", "java.nio.charset.Charset.name()", "java.nio.charset.Charset.displayName()", "java.nio.charset.Charset.equals(java.lang.Object)", "java.lang.Appendable.append(java.lang.CharSequence)", "java.lang.Appendable.append(long)", "java.lang.Iterable.iterator()", "java.lang.AssertionError.<init>(java.lang.Object)", "java.lang.AssertionError.<init>()", "java.lang.AssertionError.initCause(java.lang.Throwable)", "java.lang.AssertionError.getCause()", "java.lang.AssertionError.getMessage()", "java.lang.AssertionError.<init>(java.lang.Throwable,java.lang.String)", "java.util.AbstractList.<init>()", "java.util.AbstractList.equals(java.lang.Object)", "java.util.AbstractList.add(java.lang.Object,long)", "java.util.AbstractList.add(java.lang.Object)", "java.util.AbstractList.addAll(java.util.Collection,long)", "java.util.AbstractList.addAll(java.util.Collection)", "java.util.AbstractList.clear()", "java.util.AbstractList.remove(long)", "java.util.AbstractList.remove(java.lang.Object)", "java.util.AbstractList.removeAll(java.util.Collection)", "java.util.AbstractList.retainAll(java.util.Collection)", "java.util.AbstractList.set(java.lang.Object,long)", "java.util.logging.Logger.getLogger(java.lang.String)", "java.util.logging.Logger.logp(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.logp(java.lang.String,java.lang.String,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.logp(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.getAnonymousLogger()", "java.util.logging.Logger.log(java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.log(java.lang.Throwable,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.isLoggable(java.util.logging.Level)", "java.util.logging.Logger.log(java.util.logging.LogRecord)", "java.util.logging.Logger.getFilter()", "java.util.logging.Logger.getName()", "java.util.logging.Logger.setLevel(java.util.logging.Level)", "java.util.logging.Logger.getHandlers()", "java.util.logging.Logger.getUseParentHandlers()", "java.util.logging.Logger.getParent()", "java.util.logging.Logger.warning(java.lang.String)", "java.util.logging.Logger.fine(java.lang.String)", "java.util.logging.Logger.logp([Ljava.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.log([Ljava.lang.Object,java.lang.String,java.util.logging.Level)", "java.lang.System.nanoTime()", "java.lang.System.arraycopy(long,long,java.lang.Object,long,java.lang.Object)", "java.lang.System.currentTimeMillis()", "java.lang.System.identityHashCode(java.lang.Object)", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.loadLibrary(java.lang.String)", "java.lang.System.getProperty(java.lang.String,java.lang.String)", "java.lang.System.load(java.lang.String)", "java.lang.System.gc()", "java.lang.System.exit(long)", "java.lang.System.runFinalization()", "java.lang.System.getenv(java.lang.String)", "java.util.BitSet.<init>()", "java.util.BitSet.cardinality()", "java.util.BitSet.flip(long,long)", "java.util.BitSet.nextSetBit(long)", "java.util.BitSet.set(long,long)", "java.util.BitSet.equals(java.lang.Object)", "java.util.BitSet.hashCode()", "java.util.BitSet.get(long)", "java.util.BitSet.set(long)", "java.util.BitSet.isEmpty()", "java.util.BitSet.clear(long)", "java.util.BitSet.length()", "java.util.BitSet.<init>(long)", "java.util.BitSet.or(java.util.BitSet)", "java.util.BitSet.size()", "java.util.BitSet.clone()", "java.util.BitSet.valueOf(long)", "java.util.BitSet.toByteArray()", "java.util.BitSet.set(long,long)", "java.util.BitSet.nextClearBit(long)", "java.lang.IndexOutOfBoundsException.<init>(java.lang.String)", "java.lang.IndexOutOfBoundsException.getMessage()", "java.lang.IndexOutOfBoundsException.<init>()", "java.lang.IndexOutOfBoundsException.toString()", "java.lang.Character.valueOf(long)", "java.lang.Character.isUpperCase(long)", "java.lang.Character.toLowerCase(long)", "java.lang.Character.codePointAt(long,java.lang.CharSequence)", "java.lang.Character.isSurrogatePair(long,long)", "java.lang.Character.toCodePoint(long,long)", "java.lang.Character.getDirectionality(long)", "java.lang.Character.toUpperCase(long)", "java.lang.Character.isISOControl(long)", "java.lang.Character.isWhitespace(long)", "java.lang.Character.toChars(long)", "java.lang.Character.digit(long,long)", "java.lang.Character.charValue()", "java.lang.Character.toString(long)", "java.lang.Character.isHighSurrogate(long)", "java.lang.Character.charCount(long)", "java.lang.Character.getDirectionality(long)", "java.lang.Character.isLowSurrogate(long)", "java.lang.Character.codePointBefore(long,java.lang.CharSequence)", "java.lang.Character.getType(long)", "java.lang.Character.getType(long)", "java.lang.Character.isDigit(long)", "java.lang.Character.isLetter(long)", "java.lang.Character.isLetterOrDigit(long)", "java.lang.Character.isLetterOrDigit(long)", "java.lang.Character.isLetter(long)", "java.lang.Character.toLowerCase(long)", "java.lang.Character.forDigit(long,long)", "java.lang.Character.isValidCodePoint(long)", "java.lang.Character.isBmpCodePoint(long)", "java.lang.Character.isISOControl(long)", "java.util.LinkedHashMap.<init>()", "java.util.LinkedHashMap.<init>(java.util.Map)", "java.util.LinkedHashMap.isEmpty()", "java.util.LinkedHashMap.clear()", "java.util.LinkedHashMap.entrySet()", "java.util.LinkedHashMap.put(java.lang.Object,java.lang.Object)", "java.util.LinkedHashMap.putAll(java.util.Map)", "java.util.LinkedHashMap.remove(java.lang.Object)", "java.util.LinkedHashMap.size()", "java.util.LinkedHashMap.values()", "java.util.LinkedHashMap.containsKey(java.lang.Object)", "java.util.LinkedHashMap.<init>(long,long,long)", "java.util.LinkedHashMap.get(java.lang.Object)", "java.util.LinkedHashMap.<init>(long)", "java.util.LinkedHashMap.keySet()", "java.util.AbstractCollection.<init>()", "java.util.AbstractCollection.remove(java.lang.Object)", "java.util.AbstractCollection.removeAll(java.util.Collection)", "java.util.AbstractCollection.retainAll(java.util.Collection)", "java.lang.reflect.Array.newInstance(long,java.lang.Class)", "java.lang.reflect.Array.getLength(java.lang.Object)", "java.lang.reflect.Array.get(long,java.lang.Object)", "java.lang.reflect.Array.set(java.lang.Object,long,java.lang.Object)", "java.lang.reflect.Array.getInt(long,java.lang.Object)", "java.lang.reflect.Array.getLong(long,java.lang.Object)", "java.lang.reflect.Array.getBoolean(long,java.lang.Object)", "java.lang.reflect.Array.getFloat(long,java.lang.Object)", "java.lang.reflect.Array.getDouble(long,java.lang.Object)", "java.lang.reflect.Array.newInstance(long,java.lang.Class)", "java.util.Deque.isEmpty()", "java.util.Deque.removeFirst()", "java.util.Deque.addFirst(java.lang.Object)", "java.util.Deque.removeLast()", "java.util.Deque.add(java.lang.Object)", "java.util.Deque.remove()", "java.util.Deque.addLast(java.lang.Object)", "java.util.Deque.size()", "java.util.Deque.peek()", "java.util.Deque.push(java.lang.Object)", "java.util.Deque.clear()", "java.util.Deque.pop()", "java.util.Deque.getFirst()", "java.util.Deque.iterator()", "java.util.Deque.poll()", "java.util.Deque.pollFirst()", "java.util.Deque.peekFirst()", "java.util.Deque.getLast()", "java.util.Deque.remove(java.lang.Object)", "java.util.Deque.descendingIterator()", "java.util.Deque.offer(java.lang.Object)", "java.util.LinkedList.<init>()", "java.util.LinkedList.push(java.lang.Object)", "java.util.LinkedList.isEmpty()", "java.util.LinkedList.pop()", "java.util.LinkedList.<init>(java.util.Collection)", "java.util.LinkedList.remove(long)", "java.util.LinkedList.addFirst(java.lang.Object)", "java.util.LinkedList.size()", "java.util.LinkedList.subList(long,long)", "java.util.LinkedList.add(java.lang.Object)", "java.util.LinkedList.iterator()", "java.util.LinkedList.remove(java.lang.Object)", "java.util.LinkedList.peekLast()", "java.util.LinkedList.offer(java.lang.Object)", "java.util.LinkedList.poll()", "java.util.LinkedList.get(long)", "java.util.LinkedList.clear()", "java.util.LinkedList.toArray([Ljava.lang.Object)", "java.util.LinkedList.getLast()", "java.util.LinkedList.removeLast()", "java.util.LinkedList.addAll(java.util.Collection,long)", "java.util.LinkedList.contains(java.lang.Object)", "java.util.LinkedList.addLast(java.lang.Object)", "java.util.LinkedList.pollFirst()", "java.util.LinkedList.getFirst()", "java.util.LinkedList.removeFirst()", "java.util.LinkedList.remove()", "java.util.LinkedList.add(java.lang.Object,long)", "java.util.LinkedList.listIterator()", "java.util.LinkedList.peek()", "java.util.LinkedList.addAll(java.util.Collection)", "java.util.LinkedList.removeAll(java.util.Collection)", "java.util.Set.iterator()", "java.util.Set.size()", "java.util.Set.containsAll(java.util.Collection)", "java.util.Set.remove(java.lang.Object)", "java.util.Set.add(java.lang.Object)", "java.util.Set.equals(java.lang.Object)", "java.util.Set.contains(java.lang.Object)", "java.util.Set.isEmpty()", "java.util.Set.clear()", "java.util.Set.addAll(java.util.Collection)", "java.util.Set.toArray([Ljava.lang.Object)", "java.util.Set.retainAll(java.util.Collection)", "java.util.Set.hashCode()", "java.util.Set.removeAll(java.util.Collection)", "java.util.Set.toArray()", "java.util.concurrent.CopyOnWriteArraySet.<init>()", "java.util.concurrent.CopyOnWriteArraySet.add(java.lang.Object)", "java.util.concurrent.CopyOnWriteArraySet.remove(java.lang.Object)", "java.util.concurrent.CopyOnWriteArraySet.iterator()", "java.util.LinkedHashSet.<init>()", "java.util.LinkedHashSet.<init>(long,long)", "java.util.LinkedHashSet.addAll(java.util.Collection)", "java.util.LinkedHashSet.<init>(java.util.Collection)", "java.util.LinkedHashSet.add(java.lang.Object)", "java.util.LinkedHashSet.remove(java.lang.Object)", "java.util.LinkedHashSet.<init>(long)", "java.util.LinkedHashSet.iterator()", "java.util.AbstractSet.<init>()", "java.util.AbstractSet.retainAll(java.util.Collection)", "java.io.DataOutputStream.<init>(java.io.OutputStream)", "java.io.DataOutputStream.writeBoolean(long)", "java.io.DataOutputStream.writeByte(long)", "java.io.DataOutputStream.writeBytes(java.lang.String)", "java.io.DataOutputStream.writeUTF(java.lang.String)", "java.io.DataOutputStream.writeInt(long)", "java.io.DataOutputStream.write(long)", "java.io.DataOutputStream.write(long,long,long)", "java.io.DataOutputStream.flush()", "java.io.DataOutputStream.close()", "java.io.DataOutputStream.writeLong(long)", "java.io.DataOutputStream.writeShort(long)", "java.io.DataOutputStream.write(long)", "java.io.DataOutput.write(long)", "java.io.DataOutput.write(long)", "java.io.DataOutput.write(long,long,long)", "java.io.DataOutput.writeBoolean(long)", "java.io.DataOutput.writeByte(long)", "java.io.DataOutput.writeBytes(java.lang.String)", "java.io.DataOutput.writeChar(long)", "java.io.DataOutput.writeChars(java.lang.String)", "java.io.DataOutput.writeDouble(long)", "java.io.DataOutput.writeFloat(long)", "java.io.DataOutput.writeInt(long)", "java.io.DataOutput.writeLong(long)", "java.io.DataOutput.writeShort(long)", "java.io.DataOutput.writeUTF(java.lang.String)", "java.io.InputStream.read(long)", "java.io.InputStream.read(long,long,long)", "java.io.InputStream.read()", "java.io.InputStream.available()", "java.io.InputStream.mark(long)", "java.io.InputStream.markSupported()", "java.io.InputStream.reset()", "java.io.InputStream.skip(long)", "java.io.InputStream.close()", "java.io.InputStream.<init>()", "java.io.OutputStream.write(long,long,long)", "java.io.OutputStream.<init>()", "java.io.OutputStream.close()", "java.io.OutputStream.write(long)", "java.io.OutputStream.write(long)", "java.io.OutputStream.flush()", "java.io.ByteArrayOutputStream.<init>(long)", "java.io.ByteArrayOutputStream.<init>()", "java.io.ByteArrayOutputStream.toByteArray()", "java.io.ByteArrayOutputStream.size()", "java.io.ByteArrayOutputStream.reset()", "java.io.ByteArrayOutputStream.write(long)", "java.io.ByteArrayOutputStream.write(long,long,long)", "java.io.ByteArrayOutputStream.toString()", "java.io.ByteArrayOutputStream.close()", "java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream)", "java.io.ByteArrayOutputStream.write(long)", "java.io.ByteArrayOutputStream.flush()", "java.io.EOFException.<init>(java.lang.String)", "java.io.EOFException.<init>()", "java.lang.Math.min(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.log(long)", "java.lang.Math.round(long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.ceil(long)", "java.lang.Math.abs(long)", "java.lang.Math.max(long,long)", "java.lang.Math.abs(long)", "java.lang.Math.round(long)", "java.lang.Math.abs(long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.toRadians(long)", "java.lang.Math.cos(long)", "java.lang.Math.pow(long,long)", "java.lang.Math.hypot(long,long)", "java.lang.Math.sqrt(long)", "java.lang.Math.sin(long)", "java.lang.Math.atan2(long,long)", "java.lang.Math.abs(long)", "java.lang.Math.tan(long)", "java.lang.Math.floor(long)", "java.lang.Math.asin(long)", "java.lang.Math.acos(long)", "java.lang.Math.signum(long)", "java.lang.Math.log1p(long)", "java.lang.Math.exp(long)", "java.lang.Math.toDegrees(long)", "java.lang.Math.random()", "java.lang.Math.log10(long)", "java.lang.Math.scalb(long,long)", "java.lang.Math.scalb(long,long)", "java.lang.Math.IEEEremainder(long,long)", "java.lang.Math.ulp(long)", "java.lang.Math.tanh(long)", "java.lang.Math.expm1(long)", "java.lang.Math.atan(long)", "java.lang.Math.copySign(long,long)", "java.lang.OutOfMemoryError.<init>(java.lang.String)", "java.lang.OutOfMemoryError.<init>()", "java.io.FilterInputStream.<init>(java.io.InputStream)", "java.io.FilterInputStream.available()", "java.io.FilterInputStream.read()", "java.io.FilterInputStream.read(long,long,long)", "java.io.FilterInputStream.skip(long)", "java.io.FilterInputStream.close()", "java.io.FilterInputStream.read(long)", "java.io.FilterInputStream.reset()", "java.io.FilterInputStream.mark(long)", "java.io.IOException.<init>(java.lang.String)", "java.io.IOException.<init>(java.lang.Throwable,java.lang.String)", "java.io.IOException.getMessage()", "java.io.IOException.initCause(java.lang.Throwable)", "java.io.IOException.<init>(java.lang.Throwable)", "java.io.IOException.<init>()", "java.io.IOException.toString()", "java.io.IOException.getCause()", "java.io.IOException.getLocalizedMessage()", "java.io.IOException.getStackTrace()", "java.io.Closeable.close()", "java.io.FilterOutputStream.<init>(java.io.OutputStream)", "java.io.DataInputStream.<init>(java.io.InputStream)", "java.io.DataInputStream.readUTF()", "java.io.DataInputStream.readInt()", "java.io.DataInputStream.readFully(long)", "java.io.DataInputStream.available()", "java.io.DataInputStream.mark(long)", "java.io.DataInputStream.reset()", "java.io.DataInputStream.read()", "java.io.DataInputStream.read(long,long,long)", "java.io.DataInputStream.readBoolean()", "java.io.DataInputStream.readChar()", "java.io.DataInputStream.readUnsignedByte()", "java.io.DataInputStream.skipBytes(long)", "java.io.DataInputStream.close()", "java.io.DataInputStream.readLong()", "java.io.DataInputStream.read(long)", "java.io.DataInputStream.readLine()", "java.io.DataInputStream.readUnsignedShort()", "java.io.DataInputStream.readByte()", "java.io.DataInputStream.readShort()", "java.io.DataInputStream.readFully(long,long,long)", "java.lang.Number.intValue()", "java.lang.Number.longValue()", "java.lang.Number.doubleValue()", "java.lang.Number.floatValue()", "java.lang.Number.shortValue()", "java.lang.Number.<init>()", "java.nio.ByteBuffer.position()", "java.nio.ByteBuffer.getShort()", "java.nio.ByteBuffer.getInt()", "java.nio.ByteBuffer.wrap(long)", "java.nio.ByteBuffer.order(java.nio.ByteOrder)", "java.nio.ByteBuffer.allocate(long)", "java.nio.ByteBuffer.putShort(long)", "java.nio.ByteBuffer.putInt(long)", "java.nio.ByteBuffer.putInt(long,long)", "java.nio.ByteBuffer.array()", "java.nio.ByteBuffer.put(long)", "java.nio.ByteBuffer.position(long)", "java.nio.ByteBuffer.get()", "java.nio.ByteBuffer.hasRemaining()", "java.nio.ByteBuffer.wrap(long,long,long)", "java.nio.ByteBuffer.put(long,long,long)", "java.nio.ByteBuffer.get(long)", "java.nio.ByteBuffer.get(long)", "java.nio.ByteBuffer.getShort(long)", "java.nio.ByteBuffer.put(long)", "java.nio.ByteBuffer.putShort(long,long)", "java.nio.ByteBuffer.capacity()", "java.nio.ByteBuffer.clear()", "java.nio.ByteBuffer.flip()", "java.nio.ByteBuffer.remaining()", "java.nio.ByteBuffer.put(java.nio.ByteBuffer)", "java.nio.ByteBuffer.put(long,long)", "java.nio.ByteBuffer.putLong(long,long)", "java.nio.ByteBuffer.getInt(long)", "java.nio.ByteBuffer.duplicate()", "java.nio.ByteBuffer.limit(long)", "java.nio.ByteBuffer.hasArray()", "java.nio.ByteBuffer.arrayOffset()", "java.nio.ByteBuffer.isDirect()", "java.nio.ByteBuffer.isReadOnly()", "java.nio.ByteBuffer.limit()", "java.nio.ByteBuffer.putLong(long)", "java.nio.ByteBuffer.compareTo(java.nio.ByteBuffer)", "java.nio.ByteBuffer.hashCode()", "java.nio.ByteBuffer.get(long,long,long)", "java.nio.ByteBuffer.slice()", "java.nio.ByteBuffer.order()", "java.nio.ByteBuffer.getLong(long)", "java.nio.ByteBuffer.getLong()", "java.nio.ByteBuffer.getFloat(long)", "java.nio.ByteBuffer.allocateDirect(long)", "java.nio.ByteBuffer.compact()", "java.nio.ByteBuffer.reset()", "java.nio.ByteBuffer.mark()", "java.nio.ByteBuffer.asReadOnlyBuffer()", "java.nio.ByteBuffer.equals(java.lang.Object)", "java.nio.ByteBuffer.putFloat(long,long)", "java.nio.ByteBuffer.rewind()", "java.nio.ByteBuffer.asShortBuffer()", "java.nio.ByteBuffer.getFloat()", "java.nio.ByteBuffer.asIntBuffer()", "java.nio.ByteBuffer.asLongBuffer()", "java.nio.ByteBuffer.getDouble()", "java.nio.ByteBuffer.putDouble(long)", "java.nio.ByteBuffer.putFloat(long)", "java.nio.ByteBuffer.putChar(long)", "java.lang.Enum.ordinal()", "java.lang.Enum.<init>(long,java.lang.String)", "java.lang.Enum.valueOf(java.lang.String,java.lang.Class)", "java.util.TreeSet.<init>()", "java.util.TreeSet.<init>(java.util.Comparator)", "java.util.TreeSet.size()", "java.util.TreeSet.iterator()", "java.util.TreeSet.first()", "java.util.TreeSet.clear()", "java.util.TreeSet.add(java.lang.Object)", "java.util.TreeSet.isEmpty()", "java.util.TreeSet.remove(java.lang.Object)", "java.util.TreeSet.addAll(java.util.Collection)", "java.util.TreeSet.contains(java.lang.Object)", "java.util.TreeSet.<init>(java.util.Collection)", "java.util.TreeSet.last()", "java.util.NavigableSet.add(java.lang.Object)", "java.util.NavigableSet.ceiling(java.lang.Object)", "java.util.NavigableSet.descendingIterator()", "java.util.NavigableSet.descendingSet()", "java.util.NavigableSet.floor(java.lang.Object)", "java.util.NavigableSet.headSet(long,java.lang.Object)", "java.util.NavigableSet.higher(java.lang.Object)", "java.util.NavigableSet.lower(java.lang.Object)", "java.util.NavigableSet.subSet(long,java.lang.Object,long,java.lang.Object)", "java.util.NavigableSet.tailSet(long,java.lang.Object)", "java.util.NavigableSet.iterator()", "java.util.NavigableSet.remove(java.lang.Object)", "java.lang.Short.valueOf(long)", "java.lang.Short.shortValue()", "java.lang.Short.parseShort(java.lang.String)", "java.lang.Short.equals(java.lang.Object)", "java.lang.Short.hashCode()", "java.lang.Byte.valueOf(long)", "java.lang.Byte.byteValue()", "java.lang.Byte.parseByte(java.lang.String)", "java.util.Locale.getLanguage()", "java.util.Locale.<init>(java.lang.String)", "java.util.Locale.getDefault()", "java.util.Locale.getDisplayName()", "java.util.Locale.getCountry()", "java.util.Locale.<init>(java.lang.String,java.lang.String)", "java.util.Locale.<init>(java.lang.String,java.lang.String,java.lang.String)", "java.util.Locale.clone()", "java.util.Locale.equals(java.lang.Object)", "java.util.Locale.hashCode()", "java.util.Locale.toLanguageTag()", "java.util.Locale.toString()", "java.util.Locale.getVariant()", "java.util.Locale.getISOCountries()", "java.util.Locale.getDisplayCountry()", "java.util.Locale.getDisplayCountry(java.util.Locale)", "java.io.File.<init>(java.lang.String,java.lang.String)", "java.io.File.exists()", "java.io.File.<init>(java.lang.String)", "java.io.File.lastModified()", "java.io.File.setLastModified(long)", "java.io.File.renameTo(java.io.File)", "java.io.File.<init>(java.lang.String,java.io.File)", "java.io.File.getCanonicalFile()", "java.io.File.getParentFile()", "java.io.File.delete()", "java.io.File.length()", "java.io.File.getName()", "java.io.File.getPath()", "java.io.File.getAbsolutePath()", "java.io.File.getCanonicalPath()", "java.io.File.mkdir()", "java.io.File.listFiles()", "java.io.File.isDirectory()", "java.io.File.mkdirs()", "java.io.File.equals(java.lang.Object)", "java.io.File.setExecutable(long,long)", "java.io.File.setReadable(long,long)", "java.io.File.isFile()", "java.io.File.list()", "java.io.File.getParent()", "java.io.File.canWrite()", "java.io.File.setWritable(long)", "java.io.File.setExecutable(long)", "java.io.File.setReadable(long)", "java.io.File.canRead()", "java.io.File.canExecute()", "java.io.File.setReadOnly()", "java.io.File.compareTo(java.io.File)", "java.io.File.createNewFile()", "java.io.File.createTempFile(java.lang.String,java.lang.String)", "java.io.File.listFiles(java.io.FileFilter)", "java.io.File.createTempFile(java.io.File,java.lang.String,java.lang.String)", "java.io.File.getUsableSpace()", "java.io.File.listFiles(java.io.FilenameFilter)", "java.io.File.isHidden()", "java.io.File.setWritable(long,long)", "java.io.File.toURI()", "java.io.File.getAbsoluteFile()", "java.io.File.deleteOnExit()", "java.io.File.getTotalSpace()", "java.io.File.toString()", "java.io.File.list(java.io.FilenameFilter)", "java.io.File.getFreeSpace()", "java.io.File.toPath()", "java.io.BufferedOutputStream.<init>(java.io.OutputStream)", "java.io.BufferedOutputStream.close()", "java.io.BufferedOutputStream.write(long)", "java.io.BufferedOutputStream.write(long,long,long)", "java.io.BufferedOutputStream.flush()", "java.io.BufferedOutputStream.<init>(long,java.io.OutputStream)", "java.io.BufferedOutputStream.write(long)", "java.util.zip.ZipOutputStream.<init>(java.io.OutputStream)", "java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "java.util.zip.ZipOutputStream.write(long)", "java.util.zip.ZipOutputStream.closeEntry()", "java.util.zip.ZipOutputStream.close()", "java.util.zip.ZipOutputStream.write(long,long,long)", "android.content.res.AssetManager.open(java.lang.String)", "android.content.res.AssetManager.open(long,java.lang.String)", "android.content.res.AssetManager.list(java.lang.String)", "android.content.res.AssetManager.getLocales()", "android.content.res.AssetManager.openFd(java.lang.String)", "java.util.zip.ZipEntry.<init>(java.lang.String)", "java.util.zip.ZipEntry.setMethod(long)", "java.util.zip.ZipEntry.setSize(long)", "java.util.zip.ZipEntry.setTime(long)", "java.util.zip.ZipEntry.setCrc(long)", "java.util.zip.ZipEntry.getExtra()", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.setExtra(long)", "java.util.zip.ZipEntry.getTime()", "java.util.zip.ZipEntry.isDirectory()", "java.util.zip.ZipEntry.getCrc()", "java.util.zip.ZipEntry.getCompressedSize()", "java.util.zip.ZipEntry.getMethod()", "java.util.zip.CRC32.<init>()", "java.util.zip.CRC32.update(long)", "java.util.zip.CRC32.getValue()", "java.util.zip.CRC32.update(long,long,long)", "java.util.zip.CRC32.reset()", "java.util.zip.CRC32.update(long)", "java.io.BufferedInputStream.<init>(java.io.InputStream)", "java.io.BufferedInputStream.<init>(long,java.io.InputStream)", "java.io.BufferedInputStream.mark(long)", "java.io.BufferedInputStream.read(long)", "java.io.BufferedInputStream.reset()", "java.io.BufferedInputStream.close()", "java.io.BufferedInputStream.read(long,long,long)", "java.io.BufferedInputStream.skip(long)", "android.content.pm.PackageManager.getPackageInfo(long,java.lang.String)", "android.content.pm.PackageManager.getPackageArchiveInfo(long,java.lang.String)", "android.content.pm.PackageManager.getApplicationInfo(long,java.lang.String)", "android.content.pm.PackageManager.getResourcesForApplication(android.content.pm.ApplicationInfo)", "android.content.pm.PackageManager.queryBroadcastReceivers(long,android.content.Intent)", "android.content.pm.PackageManager.getPackageInstaller()", "android.content.pm.PackageManager.getResourcesForApplication(java.lang.String)", "android.content.pm.PackageManager.hasSystemFeature(java.lang.String)", "android.content.pm.PackageManager.resolveActivity(long,android.content.Intent)", "android.content.pm.PackageManager.addOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)", "android.content.pm.PackageManager.queryIntentServices(long,android.content.Intent)", "android.content.pm.PackageManager.setComponentEnabledSetting(long,long,android.content.ComponentName)", "android.content.pm.PackageManager.queryIntentActivities(long,android.content.Intent)", "android.content.pm.PackageManager.getComponentEnabledSetting(android.content.ComponentName)", "android.content.pm.PackageManager.getSystemSharedLibraryNames()", "android.content.pm.PackageManager.isInstantApp()", "android.content.pm.PackageManager.checkPermission(java.lang.String,java.lang.String)", "android.content.pm.PackageManager.getNameForUid(long)", "android.content.pm.PackageManager.isInstantApp(java.lang.String)", "android.content.pm.PackageManager.getPackagesForUid(long)", "android.content.pm.PackageManager.getApplicationLabel(android.content.pm.ApplicationInfo)", "android.content.pm.PackageManager.getApplicationIcon(android.content.pm.ApplicationInfo)", "android.content.pm.PackageManager.getInstalledPackages(long)", "android.content.pm.PackageManager.getActivityInfo(long,android.content.ComponentName)", "android.content.pm.PackageManager.resolveContentProvider(long,java.lang.String)", "android.content.pm.PackageManager.queryIntentActivityOptions(long,android.content.Intent,[Landroid.content.Intent,android.content.ComponentName)", "android.content.pm.PackageManager.getDrawable(android.content.pm.ApplicationInfo,long,java.lang.String)", "android.content.pm.PackageManager.getDefaultActivityIcon()", "android.content.pm.PackageManager.queryIntentContentProviders(long,android.content.Intent)", "android.content.pm.PackageManager.getServiceInfo(long,android.content.ComponentName)", "android.content.pm.PackageManager.getInstallerPackageName(java.lang.String)", "android.content.pm.PackageManager.getReceiverInfo(long,android.content.ComponentName)", "android.content.pm.PackageManager.getLaunchIntentForPackage(java.lang.String)", "android.content.pm.PackageManager.resolveService(long,android.content.Intent)", "android.content.pm.PackageManager.checkSignatures(long,long)", "android.content.pm.PackageManager.getPermissionInfo(long,java.lang.String)", "android.content.pm.PackageManager.getText(android.content.pm.ApplicationInfo,long,java.lang.String)", "android.content.pm.PackageManager.getInstalledApplications(long)", "android.content.pm.PackageManager.getApplicationEnabledSetting(java.lang.String)", "android.content.pm.PackageManager.setApplicationEnabledSetting(long,long,java.lang.String)", "android.content.pm.PackageManager.getSystemAvailableFeatures()", "android.content.pm.PackageManager.removeOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)", "android.content.pm.PackageManager.getApplicationIcon(java.lang.String)", "android.content.pm.PackageManager.checkSignatures(java.lang.String,java.lang.String)", "java.util.concurrent.TimeUnit.toMillis(long)", "java.util.concurrent.TimeUnit.toSeconds(long)", "java.util.concurrent.TimeUnit.convert(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.TimeUnit.toNanos(long)", "java.util.concurrent.TimeUnit.toMicros(long)", "java.util.concurrent.TimeUnit.toMinutes(long)", "java.util.concurrent.TimeUnit.toHours(long)", "java.util.concurrent.TimeUnit.toDays(long)", "java.util.concurrent.TimeUnit.ordinal()", "java.util.concurrent.TimeUnit.values()", "java.util.concurrent.TimeUnit.toString()", "java.util.concurrent.TimeUnit.timedWait(long,java.lang.Object)", "android.content.res.Resources.getString(long)", "android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)", "android.content.res.Resources.getConfiguration()", "android.content.res.Resources.getDisplayMetrics()", "android.content.res.Resources.updateConfiguration(android.util.DisplayMetrics,android.content.res.Configuration)", "android.content.res.Resources.getAssets()", "android.content.res.Resources.newTheme()", "android.content.res.Resources.getString([Ljava.lang.Object,long)", "android.content.res.Resources.getText(long)", "android.content.res.Resources.getResourcePackageName(long)", "android.content.res.Resources.getResourceName(long)", "android.content.res.Resources.<init>(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.AssetManager)", "android.content.res.Resources.getValue(long,android.util.TypedValue,java.lang.String)", "android.content.res.Resources.getDimensionPixelSize(long)", "android.content.res.Resources.getColor(long)", "android.content.res.Resources.getColorStateList(long)", "android.content.res.Resources.getDrawable(long)", "android.content.res.Resources.getDimension(long)", "android.content.res.Resources.getLayout(long)", "android.content.res.Resources.getResourceEntryName(long)", "android.content.res.Resources.getResourceTypeName(long)", "android.content.res.Resources.obtainAttributes(long,android.util.AttributeSet)", "android.content.res.Resources.getXml(long)", "android.content.res.Resources.getInteger(long)", "android.content.res.Resources.getDimensionPixelOffset(long)", "android.content.res.Resources.getIntArray(long)", "android.content.res.Resources.getAnimation(long)", "android.content.res.Resources.getFraction(long,long,long)", "android.content.res.Resources.obtainTypedArray(long)", "android.content.res.Resources.getStringArray(long)", "android.content.res.Resources.getValue(long,android.util.TypedValue,long)", "android.content.res.Resources.getDrawable(android.content.res.Resources.Theme,long)", "android.content.res.Resources.openRawResource(long)", "android.content.res.Resources.getSystem()", "android.content.res.Resources.getBoolean(long)", "android.content.res.Resources.parseBundleExtra(android.os.Bundle,android.util.AttributeSet,java.lang.String)", "android.content.res.Resources.getDrawableForDensity(long,long)", "android.content.res.Resources.getDrawableForDensity(android.content.res.Resources.Theme,long,long)", "android.content.res.Resources.getMovie(long)", "android.content.res.Resources.getQuantityString(long,long)", "android.content.res.Resources.getQuantityString([Ljava.lang.Object,long,long)", "android.content.res.Resources.getQuantityText(long,long)", "android.content.res.Resources.getText(java.lang.CharSequence,long)", "android.content.res.Resources.getTextArray(long)", "android.content.res.Resources.getValueForDensity(long,android.util.TypedValue,long,long)", "android.content.res.Resources.openRawResource(android.util.TypedValue,long)", "android.content.res.Resources.openRawResourceFd(long)", "android.content.res.Resources.parseBundleExtras(android.os.Bundle,android.content.res.XmlResourceParser)", "android.content.res.Resources.getColor(android.content.res.Resources.Theme,long)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.<init>(java.lang.String,long,java.io.OutputStream)", "java.io.PrintStream.flush()", "java.io.PrintStream.close()", "java.io.PrintStream.write(long,long,long)", "java.io.PrintStream.<init>(java.io.OutputStream)", "java.io.PrintStream.format([Ljava.lang.Object,java.lang.String)", "java.io.PrintStream.<init>(java.io.File)", "java.lang.Throwable.printStackTrace(java.io.PrintStream)", "java.lang.Throwable.initCause(java.lang.Throwable)", "java.lang.Throwable.getMessage()", "java.lang.Throwable.getStackTrace()", "java.lang.Throwable.getCause()", "java.lang.Throwable.<init>(java.lang.Throwable,java.lang.String)", "java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement)", "java.lang.Throwable.<init>(java.lang.String)", "java.lang.Throwable.printStackTrace()", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.lang.Throwable.addSuppressed(java.lang.Throwable)", "java.lang.Throwable.<init>()", "java.lang.Throwable.fillInStackTrace()", "java.lang.Throwable.toString()", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.setAccessible(long)", "java.lang.reflect.Field.getModifiers()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getInt(java.lang.Object)", "java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)", "java.lang.reflect.Field.isAccessible()", "java.lang.reflect.Field.isSynthetic()", "java.lang.reflect.Field.setInt(long,java.lang.Object)", "java.lang.reflect.Field.getBoolean(java.lang.Object)", "java.lang.reflect.Field.getLong(java.lang.Object)", "java.lang.reflect.Field.getFloat(java.lang.Object)", "java.lang.reflect.Field.setFloat(long,java.lang.Object)", "java.lang.Exception.printStackTrace(java.io.PrintStream)", "java.lang.Exception.getMessage()", "java.lang.Exception.toString()", "java.lang.Exception.getCause()", "java.lang.Exception.<init>(java.lang.String)", "java.lang.Exception.<init>(java.lang.Throwable,java.lang.String)", "java.lang.Exception.<init>(java.lang.Throwable)", "java.lang.Exception.<init>()", "java.lang.Exception.fillInStackTrace()", "java.lang.Exception.initCause(java.lang.Throwable)", "java.lang.ref.ReferenceQueue.<init>()", "java.lang.ref.ReferenceQueue.poll()", "java.lang.ref.ReferenceQueue.remove()", "java.util.Vector.<init>(long)", "java.util.Vector.size()", "java.util.Vector.iterator()", "java.util.Vector.<init>()", "java.util.Vector.add(java.lang.Object)", "java.util.Vector.get(long)", "java.util.Vector.clear()", "java.util.Vector.elementAt(long)", "java.util.Vector.setElementAt(long,java.lang.Object)", "java.util.Vector.addElement(java.lang.Object)", "java.util.Vector.removeElementAt(long)", "java.util.Vector.isEmpty()", "java.util.Vector.contains(java.lang.Object)", "java.util.Vector.removeElement(java.lang.Object)", "java.util.Vector.insertElementAt(long,java.lang.Object)", "java.nio.charset.CharsetEncoder.maxBytesPerChar()", "java.nio.charset.CharsetEncoder.encode(long,java.nio.ByteBuffer,java.nio.CharBuffer)", "java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer)", "java.nio.charset.CoderResult.isError()", "java.nio.charset.CoderResult.throwException()", "java.nio.charset.CoderResult.isUnderflow()", "java.nio.CharBuffer.wrap(java.lang.CharSequence)", "java.nio.CharBuffer.capacity()", "java.nio.CharBuffer.allocate(long)", "java.nio.CharBuffer.clear()", "java.nio.CharBuffer.flip()", "java.nio.CharBuffer.remaining()", "java.nio.CharBuffer.toString()", "java.nio.CharBuffer.position()", "java.nio.CharBuffer.limit()", "java.nio.CharBuffer.array()", "java.lang.Error.<init>(java.lang.Throwable)", "java.lang.Error.<init>()", "java.lang.ThreadLocal.<init>()", "java.lang.ThreadLocal.get()", "java.lang.ThreadLocal.set(java.lang.Object)", "java.lang.ThreadLocal.remove()", "java.nio.charset.CharsetDecoder.reset()", "java.nio.charset.CharsetDecoder.maxCharsPerByte()", "java.nio.charset.CharsetDecoder.decode(long,java.nio.CharBuffer,java.nio.ByteBuffer)", "java.lang.ArrayIndexOutOfBoundsException.<init>(java.lang.String)", "java.lang.ArrayIndexOutOfBoundsException.<init>()", "java.lang.ArrayIndexOutOfBoundsException.toString()", "java.lang.ArrayIndexOutOfBoundsException.<init>(long)", "java.util.ServiceLoader.load(java.lang.ClassLoader,java.lang.Class)", "java.util.ServiceLoader.iterator()", "java.util.ServiceLoader.load(java.lang.Class)", "java.lang.reflect.Modifier.isPublic(long)", "java.lang.reflect.Modifier.isStatic(long)", "java.lang.reflect.Modifier.isAbstract(long)", "java.util.concurrent.ConcurrentMap.get(java.lang.Object)", "java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.keySet()", "java.util.concurrent.ConcurrentMap.clear()", "java.util.concurrent.ConcurrentMap.remove(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.isEmpty()", "java.util.concurrent.ConcurrentMap.containsKey(java.lang.Object)", "java.util.concurrent.ConcurrentMap.put(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.values()", "java.util.concurrent.ConcurrentMap.remove(java.lang.Object)", "java.util.concurrent.ConcurrentMap.size()", "java.util.concurrent.ConcurrentMap.containsValue(java.lang.Object)", "java.util.AbstractMap.<init>()", "java.util.AbstractMap.equals(java.lang.Object)", "java.lang.Comparable.compareTo(java.lang.Object)", "java.util.SortedMap.put(java.lang.Object,java.lang.Object)", "java.util.SortedMap.entrySet()", "java.util.SortedMap.clear()", "java.util.SortedMap.keySet()", "java.util.SortedMap.get(java.lang.Object)", "java.util.SortedMap.values()", "java.util.SortedMap.size()", "java.util.SortedMap.tailMap(java.lang.Object)", "java.util.SortedMap.comparator()", "java.util.SortedMap.isEmpty()", "java.util.SortedMap.firstKey()", "java.util.SortedMap.remove(java.lang.Object)", "java.util.SortedMap.lastKey()", "java.util.SortedMap.headMap(java.lang.Object)", "java.util.SortedMap.subMap(java.lang.Object,java.lang.Object)", "java.util.ListIterator.hasNext()", "java.util.ListIterator.hasPrevious()", "java.util.ListIterator.next()", "java.util.ListIterator.nextIndex()", "java.util.ListIterator.previous()", "java.util.ListIterator.previousIndex()", "java.util.ListIterator.remove()", "java.util.ListIterator.set(java.lang.Object)", "java.util.ListIterator.add(java.lang.Object)", "java.nio.ByteOrder.nativeOrder()", "java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction)", "java.nio.ReadOnlyBufferException.<init>()", "java.nio.BufferOverflowException.<init>()", "java.nio.BufferOverflowException.initCause(java.lang.Throwable)", "java.lang.StringBuffer.<init>()", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.append(java.lang.StringBuffer)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.setLength(long)", "java.lang.StringBuffer.append(java.lang.Object)", "java.lang.StringBuffer.<init>(java.lang.String)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.<init>(long)", "java.lang.IllegalAccessException.getMessage()", "java.lang.reflect.InvocationTargetException.getMessage()", "java.lang.reflect.InvocationTargetException.getCause()", "java.lang.reflect.InvocationTargetException.getTargetException()", "javax.security.auth.x500.X500Principal.getName(java.lang.String)", "javax.security.auth.x500.X500Principal.getEncoded()", "javax.security.auth.x500.X500Principal.<init>(long)", "javax.security.auth.x500.X500Principal.<init>(java.lang.String)", "javax.security.auth.x500.X500Principal.equals(java.lang.Object)", "java.security.cert.X509Certificate.getSubjectAlternativeNames()", "java.security.cert.X509Certificate.getSubjectX500Principal()", "java.security.cert.X509Certificate.getPublicKey()", "java.security.cert.X509Certificate.<init>()", "java.security.cert.X509Certificate.checkValidity()", "java.security.cert.X509Certificate.checkValidity(java.util.Date)", "java.security.cert.X509Certificate.getBasicConstraints()", "java.security.cert.X509Certificate.getCriticalExtensionOIDs()", "java.security.cert.X509Certificate.getEncoded()", "java.security.cert.X509Certificate.getExtensionValue(java.lang.String)", "java.security.cert.X509Certificate.getIssuerDN()", "java.security.cert.X509Certificate.getIssuerUniqueID()", "java.security.cert.X509Certificate.getKeyUsage()", "java.security.cert.X509Certificate.getNonCriticalExtensionOIDs()", "java.security.cert.X509Certificate.getNotAfter()", "java.security.cert.X509Certificate.getNotBefore()", "java.security.cert.X509Certificate.getSerialNumber()", "java.security.cert.X509Certificate.getSigAlgName()", "java.security.cert.X509Certificate.getSigAlgOID()", "java.security.cert.X509Certificate.getSigAlgParams()", "java.security.cert.X509Certificate.getSignature()", "java.security.cert.X509Certificate.getSubjectDN()", "java.security.cert.X509Certificate.getSubjectUniqueID()", "java.security.cert.X509Certificate.getTBSCertificate()", "java.security.cert.X509Certificate.getVersion()", "java.security.cert.X509Certificate.hasUnsupportedCriticalExtension()", "java.security.cert.X509Certificate.toString()", "java.security.cert.X509Certificate.verify(java.security.PublicKey)", "java.security.cert.X509Certificate.verify(java.lang.String,java.security.PublicKey)", "java.security.cert.X509Certificate.getIssuerX500Principal()", "java.security.cert.X509Certificate.equals(java.lang.Object)", "java.security.cert.X509Certificate.hashCode()", "java.security.cert.X509Certificate.clone()", "java.security.cert.X509Certificate.getExtendedKeyUsage()", "java.security.cert.X509Certificate.getIssuerAlternativeNames()", "javax.net.ssl.SSLSession.getPeerCertificates()", "javax.net.ssl.SSLSession.getApplicationBufferSize()", "javax.net.ssl.SSLSession.getPacketBufferSize()", "javax.net.ssl.SSLSession.getPeerHost()", "javax.net.ssl.SSLSession.getPeerPort()", "javax.net.ssl.SSLSession.isValid()", "javax.net.ssl.SSLSession.getCipherSuite()", "javax.net.ssl.SSLSession.getLocalCertificates()", "android.app.Fragment.<init>()", "android.app.Fragment.onActivityCreated(android.os.Bundle)", "android.app.Fragment.onDestroy()", "android.app.Fragment.onPause()", "android.app.Fragment.onResume()", "android.app.Fragment.onStart()", "android.app.Fragment.onStop()", "android.app.Fragment.onCreate(android.os.Bundle)", "android.app.Fragment.onSaveInstanceState(android.os.Bundle)", "android.app.Fragment.dump([Ljava.lang.String,java.io.PrintWriter,java.io.FileDescriptor,java.lang.String)", "android.app.Fragment.onActivityResult(android.content.Intent,long,long)", "android.app.Fragment.getTag()", "android.app.Fragment.onAttach(android.app.Activity)", "android.app.Fragment.onViewCreated(android.os.Bundle,android.view.View)", "android.app.FragmentManager.findFragmentByTag(java.lang.String)", "android.app.FragmentManager.beginTransaction()", "android.app.FragmentManager.executePendingTransactions()", "android.app.FragmentTransaction.add(java.lang.String,android.app.Fragment)", "android.app.FragmentTransaction.commit()", "android.app.FragmentTransaction.commitAllowingStateLoss()", "android.os.IBinder.transact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.IBinder.queryLocalInterface(java.lang.String)", "android.os.IBinder.isBinderAlive()", "android.os.IBinder.linkToDeath(long,android.os.IBinder.DeathRecipient)", "android.os.IBinder.unlinkToDeath(long,android.os.IBinder.DeathRecipient)", "android.os.IBinder.getInterfaceDescriptor()", "android.os.IBinder.pingBinder()", "android.os.Parcelable.Creator.createFromParcel(android.os.Parcel)", "android.os.Parcelable.Creator.newArray(long)", "android.os.IInterface.asBinder()", "android.os.Parcelable.writeToParcel(long,android.os.Parcel)", "android.os.Parcelable.describeContents()", "android.content.BroadcastReceiver.<init>()", "android.content.BroadcastReceiver.abortBroadcast()", "android.content.BroadcastReceiver.clearAbortBroadcast()", "android.content.BroadcastReceiver.getAbortBroadcast()", "android.content.BroadcastReceiver.getDebugUnregister()", "android.content.BroadcastReceiver.getResultCode()", "android.content.BroadcastReceiver.getResultData()", "android.content.BroadcastReceiver.getResultExtras(long)", "android.content.BroadcastReceiver.goAsync()", "android.content.BroadcastReceiver.isInitialStickyBroadcast()", "android.content.BroadcastReceiver.isOrderedBroadcast()", "android.content.BroadcastReceiver.peekService(android.content.Intent,android.content.Context)", "android.content.BroadcastReceiver.setDebugUnregister(long)", "android.content.BroadcastReceiver.setOrderedHint(long)", "android.content.BroadcastReceiver.setResult(android.os.Bundle,java.lang.String,long)", "android.content.BroadcastReceiver.setResultCode(long)", "android.content.BroadcastReceiver.setResultData(java.lang.String)", "android.content.BroadcastReceiver.setResultExtras(android.os.Bundle)", "android.content.BroadcastReceiver.onReceive(android.content.Intent,android.content.Context)", "android.content.IntentFilter.<init>(java.lang.String)", "android.content.IntentFilter.addDataScheme(java.lang.String)", "android.content.IntentFilter.countActions()", "android.content.IntentFilter.getAction(long)", "android.content.IntentFilter.match(java.lang.String,java.util.Set,android.net.Uri,java.lang.String,java.lang.String,java.lang.String)", "android.content.IntentFilter.<init>()", "android.content.IntentFilter.addAction(java.lang.String)", "android.content.IntentFilter.hasAction(java.lang.String)", "android.content.IntentFilter.addCategory(java.lang.String)", "android.content.IntentFilter.addDataAuthority(java.lang.String,java.lang.String)", "android.content.IntentFilter.addDataPath(long,java.lang.String)", "android.content.IntentFilter.setOrder(long)", "android.content.IntentFilter.setPriority(long)", "android.content.IntentFilter.dump(java.lang.String,android.util.Printer)", "android.content.IntentFilter.matchAction(java.lang.String)", "android.content.IntentFilter.countDataAuthorities()", "android.content.IntentFilter.countDataPaths()", "android.content.ContextWrapper.getBaseContext()", "android.content.ContextWrapper.<init>(android.content.Context)", "android.content.ContextWrapper.getResources()", "android.content.ContextWrapper.getSystemService(java.lang.String)", "android.content.ContextWrapper.createCredentialProtectedStorageContext()", "android.content.ContextWrapper.createDeviceProtectedStorageContext()", "android.content.ContextWrapper.getDir(long,java.lang.String)", "android.content.ContextWrapper.getTheme()", "android.content.ContextWrapper.setTheme(long)", "java.io.FileOutputStream.<init>(java.io.File)", "java.io.FileOutputStream.write(long)", "java.io.FileOutputStream.close()", "java.io.FileOutputStream.write(long,long,long)", "java.io.FileOutputStream.flush()", "java.io.FileOutputStream.getFD()", "java.io.FileOutputStream.<init>(long,java.io.File)", "java.io.FileOutputStream.<init>(java.io.FileDescriptor)", "java.io.FileOutputStream.getChannel()", "java.io.FileOutputStream.<init>(java.lang.String)", "java.io.FileInputStream.<init>(java.io.File)", "java.io.FileInputStream.getChannel()", "java.io.FileInputStream.close()", "java.io.FileInputStream.read(long)", "java.io.FileInputStream.read(long,long,long)", "java.io.FileInputStream.<init>(java.lang.String)", "java.io.FileInputStream.<init>(java.io.FileDescriptor)", "java.io.FileInputStream.getFD()", "java.io.FileInputStream.available()", "java.nio.channels.FileChannel.size()", "java.nio.channels.FileChannel.map(long,long,java.nio.channels.FileChannel.MapMode)", "java.nio.channels.FileChannel.lock()", "java.nio.channels.FileChannel.tryLock()", "java.nio.channels.FileChannel.truncate(long)", "java.nio.channels.FileChannel.tryLock(long,long,long)", "java.nio.channels.FileChannel.isOpen()", "java.nio.channels.FileChannel.close()", "java.nio.channels.FileChannel.force(long)", "java.nio.channels.FileChannel.position()", "java.nio.channels.FileChannel.position(long)", "java.nio.channels.FileChannel.write(java.nio.ByteBuffer)", "java.nio.channels.FileChannel.transferFrom(long,long,java.nio.channels.ReadableByteChannel)", "java.nio.channels.FileChannel.read(java.nio.ByteBuffer)", "java.nio.MappedByteBuffer.order(java.nio.ByteOrder)", "java.nio.MappedByteBuffer.getInt()", "java.nio.MappedByteBuffer.limit(long)", "java.nio.MappedByteBuffer.getInt(long)", "java.nio.MappedByteBuffer.load()", "java.nio.MappedByteBuffer.position(long)", "java.nio.MappedByteBuffer.asFloatBuffer()", "android.os.FileObserver.<init>(long,java.lang.String)", "java.util.concurrent.LinkedBlockingQueue.<init>(long)", "java.util.concurrent.LinkedBlockingQueue.offer(java.lang.Object)", "java.util.concurrent.LinkedBlockingQueue.<init>()", "java.util.concurrent.LinkedBlockingQueue.clear()", "java.util.concurrent.LinkedBlockingQueue.take()", "java.util.concurrent.LinkedBlockingQueue.put(java.lang.Object)", "java.util.concurrent.LinkedBlockingQueue.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.LinkedBlockingQueue.add(java.lang.Object)", "java.util.concurrent.LinkedBlockingQueue.poll()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.ClassLoader.getResource(java.lang.String)", "java.lang.ClassLoader.getResources(java.lang.String)", "java.lang.ClassLoader.<init>(java.lang.ClassLoader)", "java.lang.ClassLoader.getParent()", "java.lang.ClassLoader.getPackage(java.lang.String)", "java.lang.ClassLoader.getPackages()", "java.lang.NoSuchMethodException.<init>(java.lang.String)", "java.lang.NoSuchMethodException.getMessage()", "java.lang.NoSuchMethodException.initCause(java.lang.Throwable)", "java.io.BufferedReader.close()", "java.io.BufferedReader.<init>(java.io.Reader)", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.mark(long)", "java.io.BufferedReader.reset()", "java.io.BufferedReader.read(long,long,long)", "java.io.BufferedReader.skip(long)", "java.io.BufferedReader.read(long)", "java.io.BufferedReader.<init>(long,java.io.Reader)", "java.io.BufferedReader.ready()", "java.io.BufferedReader.read(java.nio.CharBuffer)", "java.io.InputStreamReader.close()", "java.io.InputStreamReader.<init>(java.io.InputStream)", "java.io.InputStreamReader.read(long)", "java.io.InputStreamReader.<init>(java.lang.String,java.io.InputStream)", "java.io.InputStreamReader.read()", "java.io.InputStreamReader.<init>(java.nio.charset.Charset,java.io.InputStream)", "java.util.zip.ZipFile.close()", "java.util.zip.ZipFile.<init>(java.io.File)", "java.util.zip.ZipFile.entries()", "java.util.zip.ZipFile.getEntry(java.lang.String)", "java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)", "java.util.zip.ZipFile.<init>(java.lang.String)", "java.util.zip.ZipFile.size()", "java.util.Enumeration.hasMoreElements()", "java.util.Enumeration.nextElement()", "android.system.Os.readlink(java.lang.String)", "android.system.Os.symlink(java.lang.String,java.lang.String)", "android.system.Os.stat(java.lang.String)", "android.system.Os.prctl(long,long,long,long,long)", "android.system.Os.chmod(long,java.lang.String)", "android.system.Os.posix_fallocate(long,long,java.io.FileDescriptor)", "android.system.Os.getuid()", "android.system.Os.fchown(long,long,java.io.FileDescriptor)", "android.system.Os.fchmod(long,java.io.FileDescriptor)", "android.system.Os.chown(long,long,java.lang.String)", "android.content.Intent.getAction()", "android.content.Intent.<init>(android.content.Intent)", "android.content.Intent.setExtrasClassLoader(java.lang.ClassLoader)", "android.content.Intent.<init>(java.lang.Class,android.content.Context)", "android.content.Intent.setAction(java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(android.os.Parcelable,java.lang.String)", "android.content.Intent.getParcelableExtra(java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.getCategories()", "android.content.Intent.removeExtra(java.lang.String)", "android.content.Intent.setComponent(android.content.ComponentName)", "android.content.Intent.getIntExtra(long,java.lang.String)", "android.content.Intent.getLongExtra(long,java.lang.String)", "android.content.Intent.getBundleExtra(java.lang.String)", "android.content.Intent.putExtra(android.os.Bundle,java.lang.String)", "android.content.Intent.<init>(java.lang.String)", "android.content.Intent.setClassName(java.lang.String,android.content.Context)", "android.content.Intent.addCategory(java.lang.String)", "android.content.Intent.getComponent()", "android.content.Intent.setData(android.net.Uri)", "android.content.Intent.setPackage(java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.getBooleanExtra(long,java.lang.String)", "android.content.Intent.getExtras()", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.<init>()", "android.content.Intent.putExtra(java.io.Serializable,java.lang.String)", "android.content.Intent.putExtra([Ljava.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.getData()", "android.content.Intent.addFlags(long)", "android.content.Intent.putExtra([Landroid.os.Parcelable,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.setType(java.lang.String)", "android.content.Intent.getByteArrayExtra(java.lang.String)", "android.content.Intent.getSerializableExtra(java.lang.String)", "android.content.Intent.putStringArrayListExtra(java.util.ArrayList,java.lang.String)", "android.content.Intent.toUri(long)", "android.content.Intent.setClassName(java.lang.String,java.lang.String)", "android.content.Intent.hasExtra(java.lang.String)", "android.content.Intent.getParcelableArrayListExtra(java.lang.String)", "android.content.Intent.putParcelableArrayListExtra(java.util.ArrayList,java.lang.String)", "android.content.Intent.setFlags(long)", "android.content.Intent.putExtras(android.os.Bundle)", "android.content.Intent.makeMainActivity(android.content.ComponentName)", "android.content.Intent.putExtra(java.lang.CharSequence,java.lang.String)", "android.content.Intent.resolveTypeIfNeeded(android.content.ContentResolver)", "android.content.Intent.getScheme()", "android.content.Intent.getFlags()", "android.content.Intent.parseIntent(android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.content.res.Resources)", "android.content.Intent.getPackage()", "android.content.Intent.hasCategory(java.lang.String)", "android.content.Intent.resolveActivity(android.content.pm.PackageManager)", "android.content.Intent.<init>(android.net.Uri,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.getStringArrayExtra(java.lang.String)", "android.content.Intent.getStringArrayListExtra(java.lang.String)", "android.content.Intent.getDataString()", "android.content.Intent.getCharSequenceArrayListExtra(java.lang.String)", "android.content.Intent.getCharSequenceExtra(java.lang.String)", "android.content.Intent.putExtras(android.content.Intent)", "android.content.Intent.getParcelableArrayExtra(java.lang.String)", "android.content.Intent.setClass(java.lang.Class,android.content.Context)", "android.content.Intent.toString()", "android.content.Intent.parseUri(long,java.lang.String)", "android.content.Intent.filterEquals(android.content.Intent)", "android.content.Intent.getIntArrayExtra(java.lang.String)", "android.content.Intent.createChooser(java.lang.CharSequence,android.content.Intent)", "android.content.Intent.getClipData()", "android.content.Intent.setClipData(android.content.ClipData)", "android.content.Intent.clone()", "android.content.Intent.setDataAndType(java.lang.String,android.net.Uri)", "android.content.Intent.replaceExtras(android.os.Bundle)", "android.content.Intent.resolveActivityInfo(long,android.content.pm.PackageManager)", "android.content.Intent.getSourceBounds()", "android.content.Intent.getFloatExtra(long,java.lang.String)", "java.util.concurrent.ThreadPoolExecutor.execute(java.lang.Runnable)", "java.util.concurrent.ThreadPoolExecutor.setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)", "java.util.concurrent.ThreadPoolExecutor.<init>(java.util.concurrent.ThreadFactory,java.util.concurrent.BlockingQueue,java.util.concurrent.TimeUnit,long,long,long)", "java.util.concurrent.ThreadPoolExecutor.shutdown()", "java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(long)", "java.util.concurrent.ThreadPoolExecutor.submit(java.util.concurrent.Callable)", "java.util.concurrent.ThreadPoolExecutor.<init>(java.util.concurrent.BlockingQueue,java.util.concurrent.TimeUnit,long,long,long)", "java.util.concurrent.ThreadPoolExecutor.<init>(java.util.concurrent.RejectedExecutionHandler,java.util.concurrent.BlockingQueue,java.util.concurrent.TimeUnit,long,long,long)", "java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut()", "java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime(java.util.concurrent.TimeUnit)", "java.util.concurrent.ThreadPoolExecutor.getThreadFactory()", "java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads()", "java.util.concurrent.ThreadPoolExecutor.prestartCoreThread()", "java.util.concurrent.ThreadPoolExecutor.getTaskCount()", "java.util.concurrent.ThreadPoolExecutor.isShutdown()", "java.util.concurrent.ThreadPoolExecutor.remove(java.lang.Runnable)", "java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()", "java.util.concurrent.locks.ReentrantLock.lock()", "java.util.concurrent.locks.ReentrantLock.unlock()", "java.util.concurrent.locks.ReentrantLock.<init>()", "java.util.concurrent.locks.ReentrantLock.newCondition()", "java.util.concurrent.locks.ReentrantLock.isLocked()", "java.util.concurrent.locks.ReentrantLock.tryLock(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.locks.ReentrantLock.<init>(long)", "android.util.SparseArray.size()", "android.util.SparseArray.append(java.lang.Object,long)", "android.util.SparseArray.<init>()", "android.util.SparseArray.put(java.lang.Object,long)", "android.util.SparseArray.get(long)", "android.util.SparseArray.remove(long)", "android.util.SparseArray.clear()", "android.util.SparseArray.keyAt(long)", "android.util.SparseArray.indexOfKey(long)", "android.util.SparseArray.<init>(long)", "android.util.SparseArray.valueAt(long)", "android.util.SparseArray.setValueAt(java.lang.Object,long)", "android.util.SparseArray.removeAt(long)", "android.util.SparseArray.delete(long)", "android.util.SparseArray.get(java.lang.Object,long)", "android.util.SparseArray.clone()", "android.util.SparseArray.toString()", "android.content.ComponentName.<init>(java.lang.Class,android.content.Context)", "android.content.ComponentName.getClassName()", "android.content.ComponentName.flattenToShortString()", "android.content.ComponentName.flattenToString()", "android.content.ComponentName.getPackageName()", "android.content.ComponentName.<init>(java.lang.String,java.lang.String)", "android.content.ComponentName.<init>(java.lang.String,android.content.Context)", "android.content.ComponentName.unflattenFromString(java.lang.String)", "android.content.ComponentName.toShortString()", "android.content.ComponentName.getShortClassName()", "android.content.ComponentName.equals(java.lang.Object)", "android.content.ComponentName.toString()", "java.util.Scanner.<init>(java.io.InputStream)", "java.util.Scanner.useDelimiter(java.lang.String)", "java.util.Scanner.next()", "java.util.Scanner.<init>(java.lang.String)", "java.util.Scanner.nextLong()", "java.util.Scanner.hasNextLong()", "java.util.Scanner.hasNext()", "java.util.Scanner.close()", "java.util.Scanner.hasNextInt()", "java.util.Scanner.nextInt()", "java.util.Scanner.<init>(java.lang.String,java.io.InputStream)", "android.os.Bundle.<init>()", "android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.os.Bundle.putBoolean(long,java.lang.String)", "android.os.Bundle.putByteArray(long,java.lang.String)", "android.os.Bundle.putStringArrayList(java.util.ArrayList,java.lang.String)", "android.os.Bundle.getBinder(java.lang.String)", "android.os.Bundle.putBinder(android.os.IBinder,java.lang.String)", "android.os.Bundle.putCharSequence(java.lang.CharSequence,java.lang.String)", "android.os.Bundle.putFloat(long,java.lang.String)", "android.os.Bundle.putInt(long,java.lang.String)", "android.os.Bundle.getInt(long,java.lang.String)", "android.os.Bundle.putCharSequenceArray([Ljava.lang.CharSequence,java.lang.String)", "android.os.Bundle.getByteArray(java.lang.String)", "android.os.Bundle.get(java.lang.String)", "android.os.Bundle.getBoolean(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getBoolean(long,java.lang.String)", "android.os.Bundle.setClassLoader(java.lang.ClassLoader)", "android.os.Bundle.getParcelable(java.lang.String)", "android.os.Bundle.putParcelable(android.os.Parcelable,java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getBundle(java.lang.String)", "android.os.Bundle.getSerializable(java.lang.String)", "android.os.Bundle.getFloat(long,java.lang.String)", "android.os.Bundle.getLong(long,java.lang.String)", "android.os.Bundle.getStringArray(java.lang.String)", "android.os.Bundle.isEmpty()", "android.os.Bundle.putBundle(android.os.Bundle,java.lang.String)", "android.os.Bundle.clear()", "android.os.Bundle.putLong(long,java.lang.String)", "android.os.Bundle.putStringArray([Ljava.lang.String,java.lang.String)", "android.os.Bundle.remove(java.lang.String)", "android.os.Bundle.getStringArrayList(java.lang.String)", "android.os.Bundle.getLong(java.lang.String)", "android.os.Bundle.<init>(android.os.Bundle)", "android.os.Bundle.putAll(android.os.Bundle)", "android.os.Bundle.putSparseParcelableArray(android.util.SparseArray,java.lang.String)", "android.os.Bundle.putParcelableArray([Landroid.os.Parcelable,java.lang.String)", "android.os.Bundle.keySet()", "android.os.Bundle.getParcelableArray(java.lang.String)", "android.os.Bundle.getSparseParcelableArray(java.lang.String)", "android.os.Bundle.readFromParcel(android.os.Parcel)", "android.os.Bundle.containsKey(java.lang.String)", "android.os.Bundle.getIntArray(java.lang.String)", "android.os.Bundle.putIntArray(long,java.lang.String)", "android.os.Bundle.getParcelableArrayList(java.lang.String)", "android.os.Bundle.putParcelableArrayList(java.util.ArrayList,java.lang.String)", "android.os.Bundle.size()", "android.os.Bundle.getCharSequence(java.lang.String)", "android.os.Bundle.putIntegerArrayList(java.util.ArrayList,java.lang.String)", "android.os.Bundle.getCharSequenceArray(java.lang.String)", "android.os.Bundle.<init>(long)", "android.os.Bundle.getString(java.lang.String,java.lang.String)", "android.os.Bundle.toString()", "android.os.Bundle.getBooleanArray(java.lang.String)", "android.os.Bundle.putBooleanArray(long,java.lang.String)", "android.os.Bundle.getLongArray(java.lang.String)", "android.os.Bundle.putLongArray(long,java.lang.String)", "android.os.Bundle.putByte(long,java.lang.String)", "android.os.Bundle.getFloat(java.lang.String)", "android.os.Bundle.putSerializable(java.io.Serializable,java.lang.String)", "android.os.Bundle.clone()", "android.os.Bundle.writeToParcel(long,android.os.Parcel)", "android.os.Bundle.putDouble(long,java.lang.String)", "android.os.Bundle.putDoubleArray(long,java.lang.String)", "android.os.Bundle.putFloatArray(long,java.lang.String)", "android.os.Bundle.getFloatArray(java.lang.String)", "android.os.Bundle.putShort(long,java.lang.String)", "android.os.Bundle.getDouble(java.lang.String)", "android.os.Bundle.<init>(java.lang.ClassLoader)", "android.os.Bundle.getIntegerArrayList(java.lang.String)", "android.os.Bundle.getDoubleArray(java.lang.String)", "java.util.Comparator.compare(java.lang.Object,java.lang.Object)", "java.util.Comparator.equals(java.lang.Object)", "android.os.RemoteException.<init>(java.lang.String)", "android.os.RemoteException.getMessage()", "android.os.RemoteException.<init>()", "android.os.RemoteException.initCause(java.lang.Throwable)", "android.os.RemoteException.getLocalizedMessage()", "android.os.RemoteException.toString()", "android.util.SparseIntArray.<init>(long)", "android.util.SparseIntArray.size()", "android.util.SparseIntArray.append(long,long)", "android.util.SparseIntArray.get(long,long)", "android.util.SparseIntArray.<init>()", "android.util.SparseIntArray.keyAt(long)", "android.util.SparseIntArray.get(long)", "android.util.SparseIntArray.put(long,long)", "android.util.SparseIntArray.clear()", "android.util.SparseIntArray.valueAt(long)", "android.util.SparseIntArray.indexOfKey(long)", "android.util.SparseIntArray.delete(long)", "java.lang.NoSuchMethodError.<init>(java.lang.String)", "java.lang.NoSuchMethodError.<init>()", "android.util.AttributeSet.getPositionDescription()", "android.util.AttributeSet.getAttributeValue(java.lang.String,java.lang.String)", "android.util.AttributeSet.getAttributeCount()", "android.util.AttributeSet.getAttributeNameResource(long)", "android.util.AttributeSet.getAttributeBooleanValue(long,long)", "android.util.AttributeSet.getAttributeResourceValue(long,long)", "android.util.AttributeSet.getAttributeName(long)", "android.util.AttributeSet.getAttributeIntValue(long,long)", "android.util.AttributeSet.getAttributeValue(long)", "android.view.LayoutInflater.from(android.content.Context)", "android.view.LayoutInflater.cloneInContext(android.content.Context)", "android.view.LayoutInflater.inflate(android.view.ViewGroup,long)", "android.view.LayoutInflater.inflate(android.view.ViewGroup,org.xmlpull.v1.XmlPullParser)", "android.view.LayoutInflater.setFactory2(android.view.LayoutInflater.Factory2)", "android.view.LayoutInflater.getFactory()", "android.view.LayoutInflater.inflate(long,android.view.ViewGroup,long)", "android.view.LayoutInflater.getFactory2()", "android.view.LayoutInflater.getContext()", "android.view.ViewStub.setLayoutInflater(android.view.LayoutInflater)", "android.view.ViewStub.inflate()", "android.view.ViewStub.setLayoutResource(long)", "android.view.InflateException.<init>(java.lang.String)", "android.view.InflateException.initCause(java.lang.Throwable)", "android.view.InflateException.<init>(java.lang.Throwable,java.lang.String)", "java.nio.BufferUnderflowException.<init>()", "java.lang.SecurityException.<init>(java.lang.String)", "java.lang.SecurityException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.SecurityException.<init>()", "java.lang.SecurityException.getMessage()", "java.lang.SecurityException.getCause()", "java.lang.SecurityException.toString()", "android.util.Pair.create(java.lang.Object,java.lang.Object)", "android.util.Pair.<init>(java.lang.Object,java.lang.Object)", "java.security.KeyFactory.getInstance(java.lang.String)", "java.security.KeyFactory.generatePublic(java.security.spec.KeySpec)", "java.security.KeyFactory.generatePrivate(java.security.spec.KeySpec)", "java.security.KeyFactory.getInstance(java.lang.String,java.lang.String)", "java.security.KeyFactory.getInstance(java.security.Provider,java.lang.String)", "java.security.spec.X509EncodedKeySpec.<init>(long)", "java.security.spec.X509EncodedKeySpec.getEncoded()", "java.security.Signature.getInstance(java.lang.String)", "java.security.Signature.initVerify(java.security.PublicKey)", "java.security.Signature.setParameter(java.security.spec.AlgorithmParameterSpec)", "java.security.Signature.update(java.nio.ByteBuffer)", "java.security.Signature.verify(long)", "java.security.Signature.initSign(java.security.PrivateKey)", "java.security.Signature.getProvider()", "java.security.Signature.getInstance(java.security.Provider,java.lang.String)", "java.security.Signature.update(long)", "java.security.Signature.sign()", "java.security.Signature.getInstance(java.lang.String,java.lang.String)", "java.security.Signature.update(long,long,long)", "java.security.Signature.initSign(java.security.SecureRandom,java.security.PrivateKey)", "java.security.MessageDigest.isEqual(long,long)", "java.security.MessageDigest.getInstance(java.lang.String)", "java.security.MessageDigest.update(long)", "java.security.MessageDigest.digest(long,long,long)", "java.security.MessageDigest.getAlgorithm()", "java.security.MessageDigest.digest(long)", "java.security.MessageDigest.<init>(java.lang.String)", "java.security.MessageDigest.reset()", "java.security.MessageDigest.digest()", "java.security.MessageDigest.getDigestLength()", "java.security.MessageDigest.toString()", "java.security.MessageDigest.update(long)", "java.security.MessageDigest.update(long,long,long)", "java.security.MessageDigest.update(java.nio.ByteBuffer)", "java.security.MessageDigest.clone()", "java.security.MessageDigest.getInstance(java.security.Provider,java.lang.String)", "java.io.ByteArrayInputStream.<init>(long)", "java.io.ByteArrayInputStream.close()", "java.io.ByteArrayInputStream.<init>(long,long,long)", "java.io.ByteArrayInputStream.available()", "java.io.ByteArrayInputStream.read()", "java.io.ByteArrayInputStream.read(long,long,long)", "java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)", "java.security.cert.CertificateFactory.getInstance(java.lang.String)", "java.security.PublicKey.getEncoded()", "java.security.PublicKey.getAlgorithm()", "java.security.PublicKey.getFormat()", "java.security.spec.PSSParameterSpec.<init>(long,long,java.security.spec.AlgorithmParameterSpec,java.lang.String,java.lang.String)", "java.security.spec.PSSParameterSpec.getDigestAlgorithm()", "java.security.spec.PSSParameterSpec.getMGFParameters()", "java.security.spec.PSSParameterSpec.getSaltLength()", "java.security.spec.PSSParameterSpec.getMGFAlgorithm()", "java.security.spec.PSSParameterSpec.getTrailerField()", "java.security.DigestException.<init>(java.lang.String)", "java.security.DigestException.<init>(java.lang.Throwable,java.lang.String)", "java.io.RandomAccessFile.<init>(java.lang.String,java.lang.String)", "java.io.RandomAccessFile.length()", "java.io.RandomAccessFile.close()", "java.io.RandomAccessFile.seek(long)", "java.io.RandomAccessFile.readInt()", "java.io.RandomAccessFile.readFully(long,long,long)", "java.io.RandomAccessFile.getChannel()", "java.io.RandomAccessFile.<init>(java.lang.String,java.io.File)", "java.io.RandomAccessFile.readFully(long)", "java.io.RandomAccessFile.write(long)", "java.io.RandomAccessFile.skipBytes(long)", "java.io.RandomAccessFile.read(long,long,long)", "java.io.RandomAccessFile.read()", "java.io.RandomAccessFile.readLong()", "java.io.RandomAccessFile.getFilePointer()", "java.io.RandomAccessFile.write(long,long,long)", "java.io.RandomAccessFile.getFD()", "java.io.RandomAccessFile.setLength(long)", "java.io.RandomAccessFile.writeLong(long)", "android.content.pm.Signature.<init>(long)", "android.content.pm.Signature.toByteArray()", "android.content.pm.Signature.toCharsString()", "android.content.pm.Signature.<init>(java.lang.String)", "java.security.GeneralSecurityException.<init>(java.lang.Throwable,java.lang.String)", "java.security.GeneralSecurityException.<init>()", "java.security.GeneralSecurityException.<init>(java.lang.String)", "java.security.GeneralSecurityException.<init>(java.lang.Throwable)", "java.security.GeneralSecurityException.getMessage()", "java.util.concurrent.PriorityBlockingQueue.<init>()", "java.util.concurrent.PriorityBlockingQueue.add(java.lang.Object)", "java.util.concurrent.PriorityBlockingQueue.isEmpty()", "android.content.ContentProviderClient.getLocalContentProvider()", "android.content.ContentProviderClient.call(android.os.Bundle,java.lang.String,java.lang.String)", "android.content.ContentProviderClient.close()", "android.content.ContentProviderClient.release()", "android.content.ContentProviderClient.query(java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.net.Uri)", "android.content.ContentProviderClient.applyBatch(java.util.ArrayList)", "android.content.ContentProviderClient.delete([Ljava.lang.String,java.lang.String,android.net.Uri)", "android.content.ContentProvider.getCallingPackage()", "android.content.ContentProvider.getPathPermissions()", "android.content.ContentProvider.getReadPermission()", "android.content.ContentProvider.getWritePermission()", "android.content.ContentProvider.openPipeHelper(android.content.ContentProvider.PipeDataWriter,java.lang.Object,android.os.Bundle,java.lang.String,android.net.Uri)", "android.content.ContentProvider.<init>()", "android.content.ContentProvider.attachInfo(android.content.pm.ProviderInfo,android.content.Context)", "android.content.ContentProvider.isTemporary()", "android.content.ContentProvider.applyBatch(java.util.ArrayList)", "android.content.ContentProvider.bulkInsert([Landroid.content.ContentValues,android.net.Uri)", "android.content.ContentProvider.call(android.os.Bundle,java.lang.String,java.lang.String)", "android.content.ContentProvider.canonicalize(android.net.Uri)", "android.content.ContentProvider.dump([Ljava.lang.String,java.io.PrintWriter,java.io.FileDescriptor)", "android.content.ContentProvider.getStreamTypes(java.lang.String,android.net.Uri)", "android.content.ContentProvider.onConfigurationChanged(android.content.res.Configuration)", "android.content.ContentProvider.openAssetFile(java.lang.String,android.net.Uri)", "android.content.ContentProvider.openAssetFile(android.os.CancellationSignal,java.lang.String,android.net.Uri)", "android.content.ContentProvider.openFile(java.lang.String,android.net.Uri)", "android.content.ContentProvider.openFile(android.os.CancellationSignal,java.lang.String,android.net.Uri)", "android.content.ContentProvider.openFileHelper(java.lang.String,android.net.Uri)", "android.content.ContentProvider.openTypedAssetFile(android.os.Bundle,java.lang.String,android.net.Uri)", "android.content.ContentProvider.openTypedAssetFile(android.os.CancellationSignal,android.os.Bundle,java.lang.String,android.net.Uri)", "android.content.ContentProvider.query(android.os.CancellationSignal,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.net.Uri)", "android.content.ContentProvider.setPathPermissions([Landroid.content.pm.PathPermission)", "android.content.ContentProvider.setReadPermission(java.lang.String)", "android.content.ContentProvider.setWritePermission(java.lang.String)", "android.content.ContentProvider.shutdown()", "android.content.ContentProvider.uncanonicalize(android.net.Uri)", "android.content.res.Resources.Theme.setTo(android.content.res.Resources.Theme)", "android.content.res.Resources.Theme.applyStyle(long,long)", "android.content.res.Resources.Theme.resolveAttribute(long,android.util.TypedValue,long)", "android.content.res.Resources.Theme.obtainStyledAttributes(long)", "android.content.res.Resources.Theme.obtainStyledAttributes(long,long,long,android.util.AttributeSet)", "android.content.res.Resources.Theme.obtainStyledAttributes(long,long)", "java.util.WeakHashMap.<init>()", "java.util.WeakHashMap.get(java.lang.Object)", "java.util.WeakHashMap.put(java.lang.Object,java.lang.Object)", "java.util.WeakHashMap.isEmpty()", "java.util.WeakHashMap.keySet()", "java.util.WeakHashMap.remove(java.lang.Object)", "java.util.WeakHashMap.<init>(long)", "java.util.WeakHashMap.containsKey(java.lang.Object)", "android.net.Uri.Builder.<init>()", "android.net.Uri.Builder.scheme(java.lang.String)", "android.net.Uri.Builder.appendPath(java.lang.String)", "android.net.Uri.Builder.build()", "android.net.Uri.Builder.authority(java.lang.String)", "android.net.Uri.Builder.path(java.lang.String)", "android.net.Uri.Builder.appendQueryParameter(java.lang.String,java.lang.String)", "android.net.Uri.Builder.encodedPath(java.lang.String)", "android.net.Uri.Builder.query(java.lang.String)", "android.net.Uri.Builder.fragment(java.lang.String)", "android.net.Uri.Builder.appendEncodedPath(java.lang.String)", "android.net.Uri.Builder.clearQuery()", "android.net.Uri.Builder.toString()", "android.net.Uri.Builder.encodedQuery(java.lang.String)", "android.net.Uri.Builder.encodedFragment(java.lang.String)", "android.net.Uri.Builder.encodedAuthority(java.lang.String)", "android.app.PendingIntent.getBroadcast(long,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.getService(long,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.getIntentSender()", "android.app.PendingIntent.getActivity(long,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.cancel()", "android.app.PendingIntent.send(android.os.Handler,android.app.PendingIntent.OnFinished,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.equals(java.lang.Object)", "android.app.PendingIntent.getCreatorPackage()", "android.app.PendingIntent.getCreatorUid()", "android.app.PendingIntent.send()", "android.app.PendingIntent.send(android.os.Bundle,java.lang.String,android.os.Handler,android.app.PendingIntent.OnFinished,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.send(java.lang.String,android.os.Handler,android.app.PendingIntent.OnFinished,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.getActivity(android.os.Bundle,long,android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.getTargetPackage()", "android.app.PendingIntent.send(android.content.Intent,long,android.content.Context)", "android.app.PendingIntent.getActivities(android.os.Bundle,long,[Landroid.content.Intent,long,android.content.Context)", "android.app.PendingIntent.hashCode()", "android.app.Service.getApplication()", "android.app.Service.startForeground(android.app.Notification,long)", "android.app.Service.stopForeground(long)", "android.app.Service.stopSelf()", "android.app.Service.<init>()", "android.app.Service.attachBaseContext(android.content.Context)", "android.app.Service.onCreate()", "android.app.Service.stopSelf(long)", "android.app.Service.onStartCommand(long,long,android.content.Intent)", "android.app.Service.onDestroy()", "android.app.Service.stopSelfResult(long)", "android.app.Service.onRebind(android.content.Intent)", "android.app.Service.onUnbind(android.content.Intent)", "android.content.res.Resources.NotFoundException.<init>(java.lang.String)", "android.content.res.Resources.NotFoundException.toString()", "android.content.res.Resources.NotFoundException.initCause(java.lang.Throwable)", "android.content.res.Resources.NotFoundException.getMessage()", "android.os.HandlerThread.<init>(java.lang.String)", "android.os.HandlerThread.start()", "android.os.HandlerThread.getLooper()", "android.os.HandlerThread.quit()", "android.os.HandlerThread.<init>(long,java.lang.String)", "android.os.HandlerThread.quitSafely()", "android.os.HandlerThread.interrupt()", "android.os.HandlerThread.run()", "java.util.concurrent.ArrayBlockingQueue.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.ArrayBlockingQueue.<init>(long)", "java.util.concurrent.ArrayBlockingQueue.add(java.lang.Object)", "java.util.concurrent.ArrayBlockingQueue.size()", "java.util.concurrent.ArrayBlockingQueue.<init>(long,long)", "java.util.concurrent.ArrayBlockingQueue.put(java.lang.Object)", "java.util.concurrent.ArrayBlockingQueue.take()", "java.util.concurrent.ArrayBlockingQueue.iterator()", "java.util.concurrent.ArrayBlockingQueue.poll()", "java.util.concurrent.ArrayBlockingQueue.remainingCapacity()", "java.util.Random.<init>()", "java.util.Random.nextFloat()", "java.util.Random.nextInt()", "java.util.Random.nextDouble()", "java.util.Random.nextInt(long)", "java.util.Random.nextBytes(long)", "java.util.Random.nextLong()", "java.util.Random.<init>(long)", "java.util.Random.nextGaussian()", "java.nio.channels.FileLock.release()", "java.nio.channels.FileLock.isValid()", "android.app.NotificationManager.cancel(long,java.lang.String)", "android.app.NotificationManager.cancel(long)", "android.app.NotificationManager.getNotificationChannel(java.lang.String)", "android.app.NotificationManager.createNotificationChannel(android.app.NotificationChannel)", "android.app.NotificationManager.notify(android.app.Notification,long)", "android.app.NotificationManager.notify(android.app.Notification,long,java.lang.String)", "android.app.NotificationManager.areNotificationsEnabled()", "android.app.NotificationManager.getCurrentInterruptionFilter()", "android.app.NotificationManager.getNotificationChannels()", "android.app.NotificationManager.addAutomaticZenRule(android.app.AutomaticZenRule)", "android.app.NotificationManager.getAutomaticZenRules()", "android.app.NotificationManager.createNotificationChannelGroup(android.app.NotificationChannelGroup)", "android.app.NotificationManager.deleteNotificationChannel(java.lang.String)", "android.app.NotificationManager.updateAutomaticZenRule(android.app.AutomaticZenRule,java.lang.String)", "android.app.NotificationManager.isNotificationPolicyAccessGranted()", "android.app.NotificationManager.getAutomaticZenRule(java.lang.String)", "android.app.NotificationManager.removeAutomaticZenRule(java.lang.String)", "android.os.StrictMode.VmPolicy.Builder.<init>()", "android.os.StrictMode.VmPolicy.Builder.penaltyDropBox()", "android.os.StrictMode.VmPolicy.Builder.build()", "android.os.StrictMode.VmPolicy.Builder.<init>(android.os.StrictMode.VmPolicy)", "android.os.StrictMode.VmPolicy.Builder.detectLeakedClosableObjects()", "android.os.StrictMode.VmPolicy.Builder.detectLeakedSqlLiteObjects()", "android.os.StrictMode.VmPolicy.Builder.detectLeakedRegistrationObjects()", "android.os.StrictMode.VmPolicy.Builder.detectFileUriExposure()", "android.os.StrictMode.VmPolicy.Builder.detectActivityLeaks()", "android.os.StrictMode.VmPolicy.Builder.setClassInstanceLimit(long,java.lang.Class)", "android.os.StrictMode.VmPolicy.Builder.detectContentUriWithoutPermission()", "android.database.sqlite.SQLiteDatabase.releaseMemory()", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.beginTransaction()", "android.database.sqlite.SQLiteDatabase.insertWithOnConflict(long,android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.endTransaction()", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()", "android.database.sqlite.SQLiteDatabase.delete([Ljava.lang.String,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.update([Ljava.lang.String,java.lang.String,android.content.ContentValues,java.lang.String)", "android.database.sqlite.SQLiteDatabase.deleteDatabase(java.io.File)", "android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(java.lang.String,[Ljava.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)", "android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)", "android.database.sqlite.SQLiteDatabase.getAttachedDbs()", "android.database.sqlite.SQLiteDatabase.close()", "android.database.sqlite.SQLiteDatabase.getPath()", "android.database.sqlite.SQLiteDatabase.inTransaction()", "android.database.sqlite.SQLiteDatabase.isOpen()", "android.database.sqlite.SQLiteDatabase.insertOrThrow(android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.insert(android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.rawQuery([Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.replace(android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL([Ljava.lang.Object,java.lang.String)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,long)", "android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging()", "android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging()", "android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled(long)", "android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive()", "android.database.sqlite.SQLiteDatabase.beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)", "android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely()", "android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely(long)", "android.database.sqlite.SQLiteDatabase.isReadOnly()", "android.database.sqlite.SQLiteDatabase.replaceOrThrow(android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.getVersion()", "android.database.sqlite.SQLiteDatabase.getMaximumSize()", "android.database.sqlite.SQLiteDatabase.rawQuery(android.os.CancellationSignal,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.setLocale(java.util.Locale)", "android.database.sqlite.SQLiteDatabase.updateWithOnConflict(long,[Ljava.lang.String,java.lang.String,android.content.ContentValues,java.lang.String)", "android.database.sqlite.SQLiteDatabase.setVersion(long)", "java.security.Security.insertProviderAt(long,java.security.Provider)", "java.security.Security.setProperty(java.lang.String,java.lang.String)", "java.security.Security.getProviders(java.lang.String)", "java.security.Security.getProperty(java.lang.String)", "java.security.Security.getProvider(java.lang.String)", "java.security.Security.getProviders()", "javax.net.ssl.SSLContext.getInstance(java.lang.String)", "javax.net.ssl.SSLContext.getSocketFactory()", "javax.net.ssl.SSLContext.getServerSocketFactory()", "javax.net.ssl.SSLContext.setDefault(javax.net.ssl.SSLContext)", "javax.net.ssl.SSLContext.getProvider()", "javax.net.ssl.SSLContext.getClientSessionContext()", "javax.net.ssl.SSLContext.getServerSessionContext()", "javax.net.ssl.SSLContext.init(java.security.SecureRandom,[Ljavax.net.ssl.TrustManager,[Ljavax.net.ssl.KeyManager)", "javax.net.ssl.SSLContext.getInstance(java.security.Provider,java.lang.String)", "javax.net.ssl.SSLContext.getDefault()", "javax.net.ssl.SSLContext.createSSLEngine()", "javax.net.ssl.SSLSocketFactory.<init>()", "javax.net.ssl.SSLSocketFactory.getDefault()", "javax.net.ssl.SSLSocketFactory.createSocket()", "javax.net.ssl.SSLSocketFactory.createSocket(long,java.lang.String)", "javax.net.ssl.SSLSocketFactory.createSocket(long,java.net.InetAddress,long,java.lang.String)", "javax.net.ssl.SSLSocketFactory.createSocket(long,java.net.InetAddress)", "javax.net.ssl.SSLSocketFactory.createSocket(long,java.net.InetAddress,long,java.net.InetAddress)", "javax.net.ssl.SSLSocketFactory.createSocket(long,long,java.lang.String,java.net.Socket)", "javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites()", "javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites()", "javax.net.ssl.SSLServerSocketFactory.<init>()", "javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)", "javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)", "javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)", "javax.net.ssl.HttpsURLConnection.setConnectTimeout(long)", "javax.net.ssl.HttpsURLConnection.setReadTimeout(long)", "javax.net.ssl.HttpsURLConnection.setRequestMethod(java.lang.String)", "javax.net.ssl.HttpsURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "javax.net.ssl.HttpsURLConnection.setDoInput(long)", "javax.net.ssl.HttpsURLConnection.setDoOutput(long)", "javax.net.ssl.HttpsURLConnection.getOutputStream()", "javax.net.ssl.HttpsURLConnection.getResponseCode()", "javax.net.ssl.HttpsURLConnection.disconnect()", "javax.net.ssl.HttpsURLConnection.getInputStream()", "javax.net.ssl.HttpsURLConnection.setInstanceFollowRedirects(long)", "javax.net.ssl.HttpsURLConnection.setUseCaches(long)", "javax.net.ssl.HttpsURLConnection.getServerCertificates()", "javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory()", "javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier()", "javax.net.ssl.HttpsURLConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)", "javax.net.ssl.HttpsURLConnection.<init>(java.net.URL)", "android.database.sqlite.SQLiteOpenHelper.<init>(long,android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,android.content.Context)", "android.database.sqlite.SQLiteOpenHelper.close()", "android.database.sqlite.SQLiteOpenHelper.getWritableDatabase()", "android.database.sqlite.SQLiteOpenHelper.<init>(android.database.DatabaseErrorHandler,long,android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,android.content.Context)", "android.database.sqlite.SQLiteOpenHelper.getReadableDatabase()", "android.database.sqlite.SQLiteOpenHelper.onConfigure(android.database.sqlite.SQLiteDatabase)", "android.view.ViewGroup.<init>(android.util.AttributeSet,android.content.Context)", "android.view.ViewGroup.getChildCount()", "android.view.ViewGroup.getChildAt(long)", "android.view.ViewGroup.removeAllViews()", "android.view.ViewGroup.addView(android.view.View)", "android.view.ViewGroup.setVisibility(long)", "android.view.ViewGroup.endViewTransition(android.view.View)", "android.view.ViewGroup.indexOfChild(android.view.View)", "android.view.ViewGroup.isTransitionGroup()", "android.view.ViewGroup.getTag(long)", "android.view.ViewGroup.getBackground()", "android.view.ViewGroup.<init>(long,android.util.AttributeSet,android.content.Context)", "android.view.ViewGroup.setBackground(android.graphics.drawable.Drawable)", "android.view.ViewGroup.getContext()", "android.view.ViewGroup.requestLayout()", "android.view.ViewGroup.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.ViewGroup.invalidate()", "android.view.ViewGroup.setOnClickListener(android.view.View.OnClickListener)", "android.view.ViewGroup.dispatchDraw(android.graphics.Canvas)", "android.view.ViewGroup.onAttachedToWindow()", "android.view.ViewGroup.onDetachedFromWindow()", "android.view.ViewGroup.removeView(android.view.View)", "android.view.ViewGroup.startViewTransition(android.view.View)", "android.view.ViewGroup.removeViewAt(long)", "android.view.ViewGroup.addView(long,android.view.View)", "android.view.ViewGroup.post(java.lang.Runnable)", "android.view.ViewGroup.<init>(android.content.Context)", "android.view.ViewGroup.getId()", "android.view.ViewGroup.getLayoutParams()", "android.view.ViewGroup.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.view.ViewGroup.getChildMeasureSpec(long,long,long)", "android.view.ViewGroup.onViewAdded(android.view.View)", "android.view.ViewGroup.onViewRemoved(android.view.View)", "android.view.ViewGroup.setId(long)", "android.view.ViewGroup.getHeight()", "android.view.ViewGroup.getWidth()", "android.view.ViewGroup.addView(long,long,android.view.View)", "android.view.ViewGroup.getSuggestedMinimumHeight()", "android.view.ViewGroup.getSuggestedMinimumWidth()", "android.view.ViewGroup.draw(android.graphics.Canvas)", "android.view.ViewGroup.getRight()", "android.view.ViewGroup.getLeft()", "android.view.ViewGroup.getBottom()", "android.view.ViewGroup.getTop()", "android.view.ViewGroup.drawableStateChanged()", "android.view.ViewGroup.onSizeChanged(long,long,long,long)", "android.view.ViewGroup.verifyDrawable(android.graphics.drawable.Drawable)", "android.view.ViewGroup.findViewById(long)", "android.view.ViewGroup.setEnabled(long)", "android.view.ViewGroup.setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)", "android.view.ViewGroup.checkLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.ViewGroup.drawChild(long,android.view.View,android.graphics.Canvas)", "android.view.ViewGroup.getViewTreeObserver()", "android.view.ViewGroup.onDraw(android.graphics.Canvas)", "android.view.ViewGroup.onRestoreInstanceState(android.os.Parcelable)", "android.view.ViewGroup.onSaveInstanceState()", "android.view.ViewGroup.onTouchEvent(android.view.MotionEvent)", "android.view.ViewGroup.requestChildRectangleOnScreen(long,android.graphics.Rect,android.view.View)", "android.view.ViewGroup.requestDisallowInterceptTouchEvent(long)", "android.view.ViewGroup.setFitsSystemWindows(long)", "android.view.ViewGroup.addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)", "android.view.ViewGroup.removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)", "android.view.ViewGroup.isAttachedToWindow()", "android.view.ViewGroup.getOverlay()", "android.view.ViewGroup.getLocationOnScreen(long)", "android.view.ViewGroup.setDescendantFocusability(long)", "android.view.ViewGroup.dispatchKeyEvent(android.view.KeyEvent)", "android.view.ViewGroup.hasFocus()", "android.view.ViewGroup.getParent()", "android.view.ViewGroup.offsetDescendantRectToMyCoords(android.graphics.Rect,android.view.View)", "android.view.ViewGroup.requestFocus()", "android.view.ViewGroup.scrollTo(long,long)", "android.view.ViewGroup.addView(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.view.ViewGroup.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.view.ViewGroup.removeCallbacks(java.lang.Runnable)", "android.view.ViewGroup.removeViewInLayout(android.view.View)", "android.view.ViewGroup.onMeasure(long,long)", "android.view.ViewGroup.getVisibility()", "android.view.ViewGroup.setBackgroundResource(long)", "android.view.ViewGroup.setAlpha(long)", "android.view.ViewGroup.sendAccessibilityEvent(long)", "android.view.ViewGroup.onConfigurationChanged(android.content.res.Configuration)", "android.view.ViewGroup.onHoverEvent(android.view.MotionEvent)", "android.view.ViewGroup.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.view.ViewGroup.onWindowSystemUiVisibilityChanged(long)", "android.view.ViewGroup.onWindowVisibilityChanged(long)", "android.view.ViewGroup.getBaseline()", "android.view.ViewGroup.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.view.ViewGroup.offsetRectIntoDescendantCoords(android.graphics.Rect,android.view.View)", "android.view.ViewGroup.getFocusedChild()", "android.view.ViewGroup.addFocusables(long,long,java.util.ArrayList)", "android.view.ViewGroup.focusSearch(long,android.view.View)", "android.view.ViewGroup.toString()", "android.view.ViewGroup.onRequestFocusInDescendants(android.graphics.Rect,long)", "android.view.ViewGroup.removeDetachedView(long,android.view.View)", "android.view.ViewGroup.requestChildFocus(android.view.View,android.view.View)", "android.view.ViewGroup.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)", "android.view.ViewGroup.setClipToPadding(long)", "android.view.ViewGroup.onRtlPropertiesChanged(long)", "android.view.ViewGroup.setClickable(long)", "android.view.ViewGroup.setBackgroundColor(long)", "android.view.ViewGroup.shouldDelayChildPressedState()", "android.view.ViewGroup.dispatchApplyWindowInsets(android.view.WindowInsets)", "android.view.ViewGroup.animate()", "android.view.ViewGroup.requestApplyInsets()", "android.view.ViewGroup.addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.view.ViewGroup.onFinishInflate()", "android.view.ViewGroup.setPadding(long,long,long,long)", "android.view.ViewGroup.removeViews(long,long)", "android.view.ViewGroup.getTranslationY()", "android.view.ViewGroup.setTranslationY(long)", "android.view.ViewGroup.setOnLongClickListener(android.view.View.OnLongClickListener)", "android.view.ViewGroup.setLayoutTransition(android.animation.LayoutTransition)", "android.view.ViewGroup.setTag(java.lang.Object,long)", "android.view.ViewGroup.setPivotY(long)", "android.view.ViewGroup.setPivotX(long)", "android.view.ViewGroup.setOutlineProvider(android.view.ViewOutlineProvider)", "android.view.ViewGroup.setX(long)", "android.view.ViewGroup.setY(long)", "android.view.ViewGroup.setScaleX(long)", "android.view.ViewGroup.setScaleY(long)", "android.view.ViewGroup.setTranslationZ(long)", "android.view.ViewGroup.setPaddingRelative(long,long,long,long)", "android.view.ViewGroup.bringToFront()", "android.view.ViewGroup.showContextMenuForChild(android.view.View)", "javax.net.ssl.SSLEngine.<init>()", "javax.net.ssl.SSLSocket.<init>()", "javax.net.ssl.SSLSocket.<init>(long,java.lang.String)", "javax.net.ssl.SSLSocket.<init>(long,java.net.InetAddress,long,java.lang.String)", "javax.net.ssl.SSLSocket.<init>(long,java.net.InetAddress)", "javax.net.ssl.SSLSocket.<init>(long,java.net.InetAddress,long,java.net.InetAddress)", "javax.net.ssl.SSLSocket.close()", "javax.net.ssl.SSLSocket.connect(long,java.net.SocketAddress)", "javax.net.ssl.SSLSocket.getEnabledCipherSuites()", "javax.net.ssl.SSLSocket.getEnabledProtocols()", "javax.net.ssl.SSLSocket.getSSLParameters()", "javax.net.ssl.SSLSocket.getSession()", "javax.net.ssl.SSLSocket.getSupportedCipherSuites()", "javax.net.ssl.SSLSocket.setEnabledCipherSuites([Ljava.lang.String)", "javax.net.ssl.SSLSocket.setEnabledProtocols([Ljava.lang.String)", "javax.net.ssl.SSLSocket.setSSLParameters(javax.net.ssl.SSLParameters)", "javax.net.ssl.SSLSocket.setSoTimeout(long)", "javax.net.ssl.SSLSocket.startHandshake()", "javax.net.ssl.SSLEngineResult.Status.values()", "javax.net.ssl.SSLEngineResult.Status.ordinal()", "javax.net.ssl.SSLEngineResult.HandshakeStatus.values()", "javax.net.ssl.SSLEngineResult.HandshakeStatus.ordinal()", "javax.net.ssl.SSLEngineResult.getStatus()", "javax.net.ssl.SSLEngineResult.bytesProduced()", "javax.net.ssl.SSLEngineResult.getHandshakeStatus()", "javax.net.ssl.SSLEngineResult.bytesConsumed()", "javax.net.ssl.SSLEngineResult.<init>(long,long,javax.net.ssl.SSLEngineResult.HandshakeStatus,javax.net.ssl.SSLEngineResult.Status)", "javax.net.ssl.SSLException.<init>(java.lang.String)", "javax.net.ssl.SSLException.<init>(java.lang.Throwable,java.lang.String)", "javax.net.ssl.SSLException.<init>(java.lang.Throwable)", "javax.net.ssl.SSLException.getMessage()", "java.net.SocketException.<init>(java.lang.String)", "javax.net.ssl.SSLServerSocket.<init>(long,long)", "javax.net.ssl.SSLServerSocket.<init>(java.net.InetAddress,long,long)", "javax.net.ssl.SSLServerSocket.<init>(long)", "javax.net.ssl.SSLServerSocket.<init>()", "java.security.PrivateKey.getAlgorithm()", "java.security.PrivateKey.getFormat()", "java.security.PrivateKey.getEncoded()", "javax.crypto.Cipher.getInstance(java.lang.String)", "javax.crypto.Cipher.init(java.security.Key,long)", "javax.crypto.Cipher.getProvider()", "javax.crypto.Cipher.getInstance(java.security.Provider,java.lang.String)", "javax.crypto.Cipher.doFinal(long)", "javax.crypto.Cipher.init(java.security.SecureRandom,java.security.Key,long)", "javax.crypto.Cipher.getIV()", "javax.crypto.Cipher.init(java.security.spec.AlgorithmParameterSpec,java.security.Key,long)", "javax.crypto.Cipher.doFinal(long,long,long)", "javax.crypto.Cipher.wrap(java.security.Key)", "javax.crypto.Cipher.unwrap(long,java.lang.String,long)", "javax.crypto.Cipher.doFinal(long,long,long,long)", "javax.crypto.Cipher.doFinal(long,long,long,long,long)", "javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)", "javax.crypto.Cipher.update(long,long,long)", "javax.crypto.Cipher.doFinal()", "javax.crypto.Cipher.init(java.security.SecureRandom,java.security.spec.AlgorithmParameterSpec,java.security.Key,long)", "javax.crypto.Cipher.getBlockSize()", "javax.crypto.Cipher.updateAAD(long)", "javax.crypto.SecretKeyFactorySpi.<init>()", "java.security.spec.InvalidKeySpecException.<init>(java.lang.String)", "java.security.spec.InvalidKeySpecException.<init>(java.lang.Throwable)", "java.security.spec.InvalidKeySpecException.<init>(java.lang.Throwable,java.lang.String)", "java.security.spec.InvalidKeySpecException.<init>()", "javax.crypto.spec.SecretKeySpec.getEncoded()", "javax.crypto.spec.SecretKeySpec.<init>(java.lang.String,long)", "javax.crypto.spec.DESedeKeySpec.isParityAdjusted(long,long)", "javax.crypto.spec.DESedeKeySpec.getKey()", "javax.crypto.spec.DESedeKeySpec.<init>(long)", "javax.crypto.SecretKey.getEncoded()", "javax.crypto.SecretKey.getAlgorithm()", "java.security.InvalidKeyException.<init>(java.lang.String)", "java.security.InvalidKeyException.<init>(java.lang.Throwable)", "java.security.InvalidKeyException.<init>(java.lang.Throwable,java.lang.String)", "java.security.AlgorithmParametersSpi.<init>()", "java.security.spec.ECParameterSpec.getCurve()", "java.security.spec.ECParameterSpec.getGenerator()", "java.security.spec.ECParameterSpec.getOrder()", "java.security.spec.ECParameterSpec.getCofactor()", "java.security.spec.ECParameterSpec.<init>(long,java.math.BigInteger,java.security.spec.ECPoint,java.security.spec.EllipticCurve)", "java.security.spec.ECGenParameterSpec.<init>(java.lang.String)", "java.security.spec.ECGenParameterSpec.getName()", "java.security.spec.InvalidParameterSpecException.<init>(java.lang.String)", "java.security.InvalidAlgorithmParameterException.getMessage()", "java.security.InvalidAlgorithmParameterException.<init>(java.lang.String)", "java.security.InvalidAlgorithmParameterException.<init>(java.lang.Throwable,java.lang.String)", "java.security.InvalidAlgorithmParameterException.<init>(java.lang.Throwable)", "java.security.NoSuchAlgorithmException.<init>(java.lang.String)", "java.security.NoSuchAlgorithmException.initCause(java.lang.Throwable)", "java.security.NoSuchAlgorithmException.toString()", "java.security.NoSuchAlgorithmException.<init>(java.lang.Throwable)", "javax.crypto.spec.IvParameterSpec.<init>(long)", "javax.crypto.spec.IvParameterSpec.getIV()", "javax.crypto.spec.IvParameterSpec.<init>(long,long,long)", "javax.crypto.KeyGeneratorSpi.<init>()", "java.security.InvalidParameterException.<init>(java.lang.String)", "java.security.SecureRandom.nextBytes(long)", "java.security.SecureRandom.<init>()", "java.security.SecureRandom.nextLong()", "java.security.SecureRandom.nextInt(long)", "java.security.SecureRandom.nextInt()", "java.security.SecureRandom.nextDouble()", "java.security.SecureRandom.nextFloat()", "java.security.SecureRandom.nextGaussian()", "java.security.SecureRandom.getInstance(java.security.Provider,java.lang.String)", "javax.net.ssl.KeyManagerFactorySpi.<init>()", "java.security.KeyStore.getDefaultType()", "java.security.KeyStore.getInstance(java.lang.String)", "java.security.KeyStore.load(long,java.io.InputStream)", "java.security.KeyStore.aliases()", "java.security.KeyStore.entryInstanceOf(java.lang.Class,java.lang.String)", "java.security.KeyStore.getEntry(java.security.KeyStore.ProtectionParameter,java.lang.String)", "java.security.KeyStore.load(java.security.KeyStore.LoadStoreParameter)", "java.security.KeyStore.containsAlias(java.lang.String)", "java.security.KeyStore.deleteEntry(java.lang.String)", "java.security.KeyStore.getKey(long,java.lang.String)", "java.security.KeyStoreException.<init>(java.lang.Throwable)", "javax.net.ssl.X509ExtendedKeyManager.<init>()", "javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(javax.net.ssl.SSLEngine,[Ljava.security.Principal,[Ljava.lang.String)", "javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(javax.net.ssl.SSLEngine,[Ljava.security.Principal,java.lang.String)", "java.security.KeyStore.PrivateKeyEntry.getCertificateChain()", "java.security.KeyStore.PrivateKeyEntry.getPrivateKey()", "java.security.KeyStore.PrivateKeyEntry.getCertificate()", "java.security.KeyStore.PasswordProtection.<init>(long)", "java.security.cert.Certificate.getPublicKey()", "java.security.cert.Certificate.getEncoded()", "javax.net.ssl.X509TrustManager.getAcceptedIssuers()", "javax.net.ssl.X509TrustManager.checkClientTrusted(java.lang.String,[Ljava.security.cert.X509Certificate)", "javax.net.ssl.X509TrustManager.checkServerTrusted(java.lang.String,[Ljava.security.cert.X509Certificate)", "javax.net.ssl.SSLHandshakeException.<init>(java.lang.String)", "javax.net.ssl.SSLHandshakeException.initCause(java.lang.Throwable)", "java.io.FileDescriptor.valid()", "java.io.FileDescriptor.sync()", "javax.net.ssl.X509KeyManager.getPrivateKey(java.lang.String)", "javax.net.ssl.X509KeyManager.getCertificateChain(java.lang.String)", "javax.net.ssl.X509KeyManager.chooseClientAlias(java.net.Socket,[Ljava.security.Principal,[Ljava.lang.String)", "javax.net.ssl.X509KeyManager.chooseServerAlias(java.net.Socket,[Ljava.security.Principal,java.lang.String)", "java.security.spec.MGF1ParameterSpec.getDigestAlgorithm()", "java.security.spec.MGF1ParameterSpec.<init>(java.lang.String)", "javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm()", "javax.crypto.spec.OAEPParameterSpec.getMGFParameters()", "javax.crypto.spec.OAEPParameterSpec.getPSource()", "javax.crypto.spec.OAEPParameterSpec.<init>(javax.crypto.spec.PSource,java.security.spec.AlgorithmParameterSpec,java.lang.String,java.lang.String)", "javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm()", "javax.crypto.spec.PSource.PSpecified.getValue()", "javax.crypto.spec.PSource.PSpecified.<init>(long)", "javax.crypto.CipherSpi.<init>()", "java.security.Key.getEncoded()", "java.security.Key.getAlgorithm()", "java.security.Key.getFormat()", "java.security.AlgorithmParameters.getInstance(java.lang.String)", "java.security.AlgorithmParameters.init(java.security.spec.AlgorithmParameterSpec)", "java.security.AlgorithmParameters.getParameterSpec(java.lang.Class)", "javax.crypto.NoSuchPaddingException.<init>(java.lang.String)", "javax.crypto.NoSuchPaddingException.initCause(java.lang.Throwable)", "java.security.spec.PKCS8EncodedKeySpec.<init>(long)", "java.security.spec.PKCS8EncodedKeySpec.getEncoded()", "javax.crypto.IllegalBlockSizeException.<init>()", "javax.crypto.IllegalBlockSizeException.initCause(java.lang.Throwable)", "javax.crypto.IllegalBlockSizeException.<init>(java.lang.String)", "javax.crypto.ShortBufferException.<init>(java.lang.String)", "java.math.BigInteger.bitLength()", "java.math.BigInteger.toByteArray()", "java.math.BigInteger.toString(long)", "java.math.BigInteger.<init>(long)", "java.math.BigInteger.intValue()", "java.math.BigInteger.<init>(java.lang.String)", "java.math.BigInteger.equals(java.lang.Object)", "java.math.BigInteger.hashCode()", "java.math.BigInteger.valueOf(long)", "java.math.BigInteger.<init>(long,long)", "java.math.BigInteger.toString()", "java.math.BigInteger.<init>(long,java.lang.String)", "java.math.BigInteger.subtract(java.math.BigInteger)", "java.math.BigInteger.testBit(long)", "java.math.BigInteger.signum()", "java.math.BigInteger.compareTo(java.math.BigInteger)", "java.math.BigInteger.multiply(java.math.BigInteger)", "java.math.BigInteger.mod(java.math.BigInteger)", "java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.shiftRight(long)", "java.math.BigInteger.modPow(java.math.BigInteger,java.math.BigInteger)", "java.math.BigInteger.isProbablePrime(long)", "java.math.BigInteger.<init>(java.util.Random,long)", "java.math.BigInteger.modInverse(java.math.BigInteger)", "java.math.BigInteger.pow(long)", "java.math.BigInteger.shiftLeft(long)", "java.math.BigInteger.negate()", "java.security.interfaces.RSAPrivateCrtKey.getModulus()", "java.security.interfaces.RSAPrivateCrtKey.getPublicExponent()", "java.security.interfaces.RSAPrivateCrtKey.getPrivateExponent()", "java.security.interfaces.RSAPrivateCrtKey.getPrimeP()", "java.security.interfaces.RSAPrivateCrtKey.getPrimeQ()", "java.security.interfaces.RSAPrivateCrtKey.getPrimeExponentP()", "java.security.interfaces.RSAPrivateCrtKey.getPrimeExponentQ()", "java.security.interfaces.RSAPrivateCrtKey.getCrtCoefficient()", "java.security.interfaces.RSAPrivateCrtKey.getFormat()", "java.security.interfaces.RSAPrivateKey.getModulus()", "java.security.interfaces.RSAPrivateKey.getPrivateExponent()", "java.security.interfaces.RSAPrivateKey.getFormat()", "java.security.interfaces.RSAPublicKey.getModulus()", "java.security.interfaces.RSAPublicKey.getPublicExponent()", "javax.net.ssl.SSLContextSpi.<init>()", "javax.crypto.KeyAgreementSpi.<init>()", "java.security.spec.EllipticCurve.getField()", "java.security.spec.EllipticCurve.getB()", "java.security.spec.EllipticCurve.getA()", "java.security.spec.EllipticCurve.<init>(java.math.BigInteger,java.math.BigInteger,java.security.spec.ECField)", "java.security.spec.EllipticCurve.equals(java.lang.Object)", "java.security.spec.ECFieldFp.getP()", "java.security.spec.ECFieldFp.<init>(java.math.BigInteger)", "java.security.spec.ECPoint.getAffineX()", "java.security.spec.ECPoint.getAffineY()", "java.security.spec.ECPoint.<init>(java.math.BigInteger,java.math.BigInteger)", "java.security.spec.ECPoint.equals(java.lang.Object)", "java.security.KeyFactorySpi.<init>()", "java.security.spec.ECPublicKeySpec.<init>(java.security.spec.ECParameterSpec,java.security.spec.ECPoint)", "java.security.spec.ECPublicKeySpec.getParams()", "java.security.spec.ECPublicKeySpec.getW()", "java.security.interfaces.ECPublicKey.getW()", "java.security.interfaces.ECPublicKey.getParams()", "java.security.spec.ECPrivateKeySpec.<init>(java.security.spec.ECParameterSpec,java.math.BigInteger)", "java.security.spec.ECPrivateKeySpec.getParams()", "java.security.spec.ECPrivateKeySpec.getS()", "java.security.interfaces.ECPrivateKey.getS()", "java.security.interfaces.ECPrivateKey.getParams()", "java.security.interfaces.ECPrivateKey.getFormat()", "java.security.KeyPairGenerator.<init>(java.lang.String)", "java.security.KeyPairGenerator.getInstance(java.lang.String)", "java.security.KeyPairGenerator.initialize(java.security.SecureRandom,java.security.spec.AlgorithmParameterSpec)", "java.security.KeyPairGenerator.generateKeyPair()", "java.security.KeyPairGenerator.getInstance(java.lang.String,java.lang.String)", "java.security.KeyPairGenerator.initialize(java.security.spec.AlgorithmParameterSpec)", "java.security.KeyPairGenerator.initialize(long)", "java.security.KeyPairGenerator.getInstance(java.security.Provider,java.lang.String)", "java.security.KeyPair.<init>(java.security.PrivateKey,java.security.PublicKey)", "java.security.KeyPair.getPrivate()", "java.security.KeyPair.getPublic()", "javax.crypto.MacSpi.<init>()", "javax.crypto.MacSpi.engineUpdate(java.nio.ByteBuffer)", "java.security.MessageDigestSpi.<init>()", "java.security.MessageDigestSpi.engineUpdate(java.nio.ByteBuffer)", "java.security.Provider.<init>(java.lang.String,long,java.lang.String)", "java.security.Provider.getName()", "java.security.spec.RSAPublicKeySpec.<init>(java.math.BigInteger,java.math.BigInteger)", "java.security.spec.RSAPublicKeySpec.getModulus()", "java.security.spec.RSAPublicKeySpec.getPublicExponent()", "java.security.spec.RSAPrivateCrtKeySpec.<init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)", "java.security.spec.RSAPrivateCrtKeySpec.getModulus()", "java.security.spec.RSAPrivateCrtKeySpec.getPrivateExponent()", "java.security.spec.RSAPrivateCrtKeySpec.getPublicExponent()", "java.security.spec.RSAPrivateCrtKeySpec.getPrimeP()", "java.security.spec.RSAPrivateCrtKeySpec.getPrimeQ()", "java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentP()", "java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentQ()", "java.security.spec.RSAPrivateCrtKeySpec.getCrtCoefficient()", "java.security.spec.RSAPrivateKeySpec.<init>(java.math.BigInteger,java.math.BigInteger)", "java.security.spec.RSAPrivateKeySpec.getModulus()", "java.security.spec.RSAPrivateKeySpec.getPrivateExponent()", "java.security.KeyPairGeneratorSpi.<init>()", "java.security.spec.RSAKeyGenParameterSpec.getPublicExponent()", "java.security.spec.RSAKeyGenParameterSpec.getKeysize()", "java.security.SecureRandomSpi.<init>()", "java.security.SignatureSpi.<init>()", "java.security.SignatureSpi.engineUpdate(java.nio.ByteBuffer)", "java.security.SignatureException.<init>(java.lang.Throwable)", "java.security.SignatureException.<init>(java.lang.String)", "java.security.SignatureException.<init>()", "java.security.SignatureException.getCause()", "java.security.SignatureException.getMessage()", "java.net.Socket.isConnected()", "java.net.Socket.bind(java.net.SocketAddress)", "java.net.Socket.isClosed()", "java.net.Socket.close()", "java.net.Socket.connect(long,java.net.SocketAddress)", "java.net.Socket.getInetAddress()", "java.net.Socket.getInputStream()", "java.net.Socket.getKeepAlive()", "java.net.Socket.getLocalAddress()", "java.net.Socket.getLocalPort()", "java.net.Socket.getLocalSocketAddress()", "java.net.Socket.getOutputStream()", "java.net.Socket.getPort()", "java.net.Socket.getReceiveBufferSize()", "java.net.Socket.getRemoteSocketAddress()", "java.net.Socket.getReuseAddress()", "java.net.Socket.getSendBufferSize()", "java.net.Socket.getSoLinger()", "java.net.Socket.getSoTimeout()", "java.net.Socket.getTcpNoDelay()", "java.net.Socket.getTrafficClass()", "java.net.Socket.isBound()", "java.net.Socket.isInputShutdown()", "java.net.Socket.isOutputShutdown()", "java.net.Socket.setKeepAlive(long)", "java.net.Socket.setPerformancePreferences(long,long,long)", "java.net.Socket.setReceiveBufferSize(long)", "java.net.Socket.setReuseAddress(long)", "java.net.Socket.setSendBufferSize(long)", "java.net.Socket.setSoLinger(long,long)", "java.net.Socket.setSoTimeout(long)", "java.net.Socket.setTcpNoDelay(long)", "java.net.Socket.setTrafficClass(long)", "java.net.Socket.shutdownInput()", "java.net.Socket.shutdownOutput()", "java.net.Socket.toString()", "java.net.Socket.<init>()", "java.net.Socket.connect(java.net.SocketAddress)", "java.net.Socket.<init>(long,java.net.InetAddress)", "java.net.Socket.<init>(java.net.Proxy)", "java.net.Socket.<init>(long,java.lang.String)", "java.security.cert.X509CRL.<init>()", "java.util.TimeZone.getTimeZone(java.lang.String)", "java.util.TimeZone.getDefault()", "java.util.TimeZone.getOffset(long)", "java.util.TimeZone.getID()", "java.util.TimeZone.getRawOffset()", "java.util.TimeZone.getDSTSavings()", "java.util.TimeZone.getDisplayName()", "java.util.Calendar.getInstance(java.util.TimeZone)", "java.util.Calendar.set(long,long)", "java.util.Calendar.getTime()", "java.util.Calendar.clear()", "java.util.Calendar.set(long,long,long)", "java.util.Calendar.getTimeInMillis()", "java.util.Calendar.setTimeInMillis(long)", "java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.add(long,long)", "java.util.Calendar.get(long)", "java.util.Calendar.before(java.lang.Object)", "java.util.Calendar.after(java.lang.Object)", "java.util.Calendar.getActualMaximum(long)", "java.util.Calendar.getActualMinimum(long)", "java.util.Calendar.getInstance(java.util.Locale)", "java.util.Calendar.getMinimum(long)", "java.util.Calendar.getMaximum(long)", "java.util.Calendar.getInstance()", "java.util.Calendar.setTimeZone(java.util.TimeZone)", "java.util.Calendar.setLenient(long)", "java.util.Calendar.set(long,long,long,long,long,long)", "java.util.Calendar.clone()", "java.util.Calendar.getDisplayNames(java.util.Locale,long,long)", "java.util.Calendar.isSet(long)", "java.util.Calendar.getInstance(java.util.Locale,java.util.TimeZone)", "java.util.Calendar.getTimeZone()", "java.util.Date.clone()", "java.util.Date.<init>()", "java.util.Date.compareTo(java.util.Date)", "java.util.Date.toString()", "java.util.Date.<init>(long)", "java.util.Date.getTime()", "java.util.Date.setTime(long)", "java.util.Date.before(java.util.Date)", "java.util.Date.equals(java.lang.Object)", "java.util.Date.hashCode()", "java.security.cert.X509CRLEntry.<init>()", "java.security.cert.CertPath.<init>(java.lang.String)", "java.security.cert.CertificateException.<init>(java.lang.String)", "java.security.cert.CertificateException.<init>(java.lang.Throwable)", "java.security.cert.CertificateException.<init>(java.lang.Throwable,java.lang.String)", "java.security.cert.CertificateException.getMessage()", "java.security.cert.CertificateEncodingException.<init>(java.lang.String)", "java.security.cert.CertificateEncodingException.<init>(java.lang.Throwable)", "java.security.cert.CertificateEncodingException.getMessage()", "java.io.PushbackInputStream.<init>(long,java.io.InputStream)", "java.io.PushbackInputStream.read(long)", "java.io.PushbackInputStream.unread(long,long,long)", "java.security.cert.CertificateParsingException.<init>(java.lang.Throwable)", "java.security.cert.CertificateNotYetValidException.<init>(java.lang.String)", "java.security.cert.CertificateExpiredException.<init>(java.lang.String)", "java.security.cert.CertificateFactorySpi.<init>()", "java.security.cert.CRLException.<init>(java.lang.Throwable)", "java.net.InetSocketAddress.<init>(long,java.net.InetAddress)", "java.net.InetSocketAddress.equals(java.lang.Object)", "java.net.InetSocketAddress.hashCode()", "java.net.InetSocketAddress.getAddress()", "java.net.InetSocketAddress.getHostName()", "java.net.InetSocketAddress.getPort()", "java.net.InetSocketAddress.createUnresolved(long,java.lang.String)", "java.net.InetSocketAddress.<init>(long,java.lang.String)", "java.net.InetSocketAddress.isUnresolved()", "java.net.InetAddress.getHostAddress()", "java.net.InetAddress.getAddress()", "java.net.InetAddress.getAllByName(java.lang.String)", "java.net.InetAddress.isAnyLocalAddress()", "java.net.InetAddress.isLoopbackAddress()", "java.net.InetAddress.isSiteLocalAddress()", "java.net.InetAddress.getByAddress(long)", "java.net.InetAddress.toString()", "java.net.InetAddress.equals(java.lang.Object)", "java.net.InetAddress.hashCode()", "java.net.InetAddress.getByName(java.lang.String)", "java.net.InetAddress.getLocalHost()", "java.net.InetAddress.getHostName()", "javax.net.ssl.SNIServerName.getType()", "javax.net.ssl.SNIHostName.getAsciiName()", "javax.net.ssl.SNIHostName.<init>(java.lang.String)", "java.lang.StackTraceElement.toString()", "java.lang.StackTraceElement.getClassName()", "java.lang.StackTraceElement.getMethodName()", "java.lang.StackTraceElement.getLineNumber()", "java.lang.StackTraceElement.<init>(long,java.lang.String,java.lang.String,java.lang.String)", "java.lang.StackTraceElement.getFileName()", "java.lang.StackTraceElement.isNativeMethod()", "java.lang.StackTraceElement.equals(java.lang.Object)", "java.lang.StackTraceElement.hashCode()", "javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm()", "javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.KeyManagerFactory.init(long,java.security.KeyStore)", "javax.net.ssl.KeyManagerFactory.getKeyManagers()", "java.security.KeyManagementException.<init>(java.lang.String)", "java.security.KeyManagementException.<init>(java.lang.Throwable)", "javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()", "javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)", "javax.net.ssl.TrustManagerFactory.getTrustManagers()", "javax.security.cert.X509Certificate.getInstance(long)", "javax.net.ssl.SSLPeerUnverifiedException.<init>(java.lang.String)", "javax.net.ssl.SSLPeerUnverifiedException.initCause(java.lang.Throwable)", "javax.security.cert.CertificateException.getMessage()", "android.widget.FrameLayout.<init>(android.content.Context)", "android.widget.FrameLayout.setOnClickListener(android.view.View.OnClickListener)", "android.widget.FrameLayout.onAttachedToWindow()", "android.widget.FrameLayout.onDetachedFromWindow()", "android.widget.FrameLayout.onRestoreInstanceState(android.os.Parcelable)", "android.widget.FrameLayout.onSaveInstanceState()", "android.widget.FrameLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.FrameLayout.onMeasure(long,long)", "android.widget.FrameLayout.setFocusable(long)", "android.widget.FrameLayout.setVisibility(long)", "android.widget.FrameLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.FrameLayout.measure(long,long)", "android.widget.FrameLayout.getLocationOnScreen(long)", "android.widget.FrameLayout.getMeasuredHeight()", "android.widget.FrameLayout.getPaddingBottom()", "android.widget.FrameLayout.getMeasuredWidth()", "android.widget.FrameLayout.getPaddingTop()", "android.widget.FrameLayout.addView(long,android.view.View)", "android.widget.FrameLayout.getChildAt(long)", "android.widget.FrameLayout.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.FrameLayout.getVisibility()", "android.widget.FrameLayout.findViewById(long)", "android.widget.FrameLayout.getContext()", "android.widget.FrameLayout.draw(android.graphics.Canvas)", "android.widget.FrameLayout.drawChild(long,android.view.View,android.graphics.Canvas)", "android.widget.FrameLayout.drawableStateChanged()", "android.widget.FrameLayout.getParent()", "android.widget.FrameLayout.onLayout(long,long,long,long,long)", "android.widget.FrameLayout.setMinimumHeight(long)", "android.widget.FrameLayout.onSizeChanged(long,long,long,long)", "android.widget.FrameLayout.verifyDrawable(android.graphics.drawable.Drawable)", "android.widget.FrameLayout.requestLayout()", "android.widget.FrameLayout.setId(long)", "android.widget.FrameLayout.onCreateDrawableState(long)", "android.widget.FrameLayout.setEnabled(long)", "android.widget.FrameLayout.addView(android.view.View)", "android.widget.FrameLayout.removeAllViews()", "android.widget.FrameLayout.getLayoutParams()", "android.widget.FrameLayout.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.FrameLayout.removeView(android.view.View)", "android.widget.FrameLayout.setAddStatesFromChildren(long)", "android.widget.FrameLayout.addView(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.widget.FrameLayout.addViewInLayout(long,android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.widget.FrameLayout.onFocusChanged(android.graphics.Rect,long,long)", "android.widget.FrameLayout.post(java.lang.Runnable)", "android.widget.FrameLayout.dispatchKeyEvent(android.view.KeyEvent)", "android.widget.FrameLayout.requestChildFocus(android.view.View,android.view.View)", "android.widget.FrameLayout.setActivated(long)", "android.widget.FrameLayout.computeVerticalScrollOffset()", "android.widget.FrameLayout.scrollTo(long,long)", "android.widget.FrameLayout.onScrollChanged(long,long,long,long)", "android.widget.FrameLayout.requestDisallowInterceptTouchEvent(long)", "android.widget.FrameLayout.setForeground(android.graphics.drawable.Drawable)", "android.widget.FrameLayout.onInterceptTouchEvent(android.view.MotionEvent)", "android.widget.FrameLayout.jumpDrawablesToCurrentState()", "android.widget.FrameLayout.onFinishInflate()", "android.widget.FrameLayout.onHoverEvent(android.view.MotionEvent)", "android.widget.FrameLayout.onTouchEvent(android.view.MotionEvent)", "android.widget.FrameLayout.startActionModeForChild(long,android.view.ActionMode.Callback,android.view.View)", "android.widget.FrameLayout.setMinimumWidth(long)", "android.widget.FrameLayout.setPadding(long,long,long,long)", "android.widget.FrameLayout.fitSystemWindows(android.graphics.Rect)", "android.widget.FrameLayout.onDraw(android.graphics.Canvas)", "android.widget.FrameLayout.onApplyWindowInsets(android.view.WindowInsets)", "android.widget.FrameLayout.addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.widget.FrameLayout.removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.widget.FrameLayout.onInterceptHoverEvent(android.view.MotionEvent)", "android.widget.FrameLayout.setForegroundGravity(long)", "android.widget.FrameLayout.setLeft(long)", "android.widget.FrameLayout.setRight(long)", "android.widget.FrameLayout.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.FrameLayout.layout(long,long,long,long)", "android.widget.FrameLayout.onViewAdded(android.view.View)", "android.widget.ImageView.setVisibility(long)", "android.widget.ImageView.setAlpha(long)", "android.widget.ImageView.setImageResource(long)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.widget.ImageView.setPadding(long,long,long,long)", "android.widget.ImageView.<init>(android.content.Context)", "android.widget.ImageView.setImageURI(android.net.Uri)", "android.widget.ImageView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ImageView.getVisibility()", "android.widget.ImageView.getLayoutParams()", "android.widget.ImageView.getDrawable()", "android.widget.ImageView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ImageView.onAttachedToWindow()", "android.widget.ImageView.onDetachedFromWindow()", "android.widget.ImageView.getImageMatrix()", "android.widget.ImageView.setImageMatrix(android.graphics.Matrix)", "android.widget.ImageView.setImageDrawable(android.graphics.drawable.Drawable)", "android.widget.ImageView.setEnabled(long)", "android.widget.ImageView.requestLayout()", "android.widget.ImageView.setSelected(long)", "android.widget.ImageView.setScaleType(android.widget.ImageView.ScaleType)", "android.widget.ImageView.measure(long,long)", "android.widget.ImageView.layout(long,long,long,long)", "android.widget.ImageView.onCreateDrawableState(long)", "android.widget.ImageView.getParent()", "android.widget.ImageView.getMeasuredHeight()", "android.widget.ImageView.offsetTopAndBottom(long)", "android.widget.ImageView.setPivotY(long)", "android.widget.ImageView.setColorFilter(long)", "android.widget.ImageView.getContext()", "android.widget.ImageView.onAnimationEnd()", "android.widget.ImageView.onAnimationStart()", "android.widget.ImageView.onMeasure(long,long)", "android.widget.ImageView.getMeasuredWidth()", "android.widget.ImageView.getBackground()", "android.widget.ImageView.getWidth()", "android.widget.ImageView.getHeight()", "android.widget.ImageView.setImageTintList(android.content.res.ColorStateList)", "android.widget.ImageView.getImageTintList()", "android.widget.ImageView.getImageTintMode()", "android.widget.ImageView.getDrawableState()", "android.widget.ImageView.getTop()", "android.widget.ImageView.getPaddingLeft()", "android.widget.ImageView.getPaddingTop()", "android.widget.ImageView.getPaddingRight()", "android.widget.ImageView.getPaddingBottom()", "android.widget.ImageView.setMaxHeight(long)", "android.widget.ImageView.setMaxWidth(long)", "android.widget.ImageView.setClickable(long)", "android.widget.ImageView.performClick()", "android.widget.ImageView.setImageTintMode(android.graphics.PorterDuff.Mode)", "android.widget.ImageView.drawableStateChanged()", "android.widget.ImageView.hasOverlappingRendering()", "android.widget.ImageView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.ImageView.setBackgroundResource(long)", "android.widget.ImageView.setOnClickListener(android.view.View.OnClickListener)", "android.widget.ImageView.setTag(java.lang.Object)", "android.widget.ImageView.setContentDescription(java.lang.CharSequence)", "android.widget.ImageView.getMeasuredState()", "android.widget.ImageView.setImageState(long,long)", "android.widget.ImageView.setImageLevel(long)", "android.widget.ImageView.onLayout(long,long,long,long,long)", "android.widget.ImageView.setX(long)", "android.widget.ImageView.setY(long)", "android.widget.ImageView.setMinimumWidth(long)", "android.widget.ImageView.setMinimumHeight(long)", "android.widget.ImageView.getTranslationX()", "android.widget.ImageView.getLeft()", "android.widget.ImageView.getRight()", "android.widget.ImageView.getTranslationY()", "android.widget.ImageView.getBottom()", "android.widget.ImageView.setPressed(long)", "android.widget.ImageView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.ImageView.onDraw(android.graphics.Canvas)", "android.widget.ImageView.clearColorFilter()", "android.widget.ImageView.setAlpha(long)", "android.widget.ImageView.postInvalidate()", "android.widget.ImageView.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.ImageView.onRestoreInstanceState(android.os.Parcelable)", "android.widget.ImageView.onSaveInstanceState()", "android.widget.ImageView.isClickable()", "android.widget.ImageView.getTag()", "android.widget.ImageView.setTranslationY(long)", "android.widget.ImageView.getMaxHeight()", "android.widget.ImageView.setBackgroundColor(long)", "android.widget.ImageView.getTag(long)", "android.widget.TextView.setText(java.lang.CharSequence)", "android.widget.TextView.setText(long)", "android.widget.TextView.setVisibility(long)", "android.widget.TextView.<init>(android.content.Context)", "android.widget.TextView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.TextView.setSingleLine()", "android.widget.TextView.setEllipsize(android.text.TextUtils.TruncateAt)", "android.widget.TextView.setGravity(long)", "android.widget.TextView.getText()", "android.widget.TextView.getMeasuredHeight()", "android.widget.TextView.getVisibility()", "android.widget.TextView.getMeasuredWidth()", "android.widget.TextView.layout(long,long,long,long)", "android.widget.TextView.measure(long,long)", "android.widget.TextView.setTextSize(long,long)", "android.widget.TextView.setTextColor(long)", "android.widget.TextView.setTypeface(android.graphics.Typeface)", "android.widget.TextView.getTextSize()", "android.widget.TextView.getTypeface()", "android.widget.TextView.getWidth()", "android.widget.TextView.setPivotX(long)", "android.widget.TextView.getBaseline()", "android.widget.TextView.setPivotY(long)", "android.widget.TextView.setTextColor(android.content.res.ColorStateList)", "android.widget.TextView.setEnabled(long)", "android.widget.TextView.getScaleX()", "android.widget.TextView.setScaleX(long)", "android.widget.TextView.setScaleY(long)", "android.widget.TextView.getPaddingTop()", "android.widget.TextView.getPaddingBottom()", "android.widget.TextView.setAlpha(long)", "android.widget.TextView.animate()", "android.widget.TextView.getLayout()", "android.widget.TextView.getMaxLines()", "android.widget.TextView.getLineCount()", "android.widget.TextView.setMaxLines(long)", "android.widget.TextView.setSelected(long)", "android.widget.TextView.getCurrentTextColor()", "android.widget.TextView.setId(long)", "android.widget.TextView.getCompoundDrawablesRelative()", "android.widget.TextView.setContentDescription(java.lang.CharSequence)", "android.widget.TextView.getTextColors()", "android.widget.TextView.setOnClickListener(android.view.View.OnClickListener)", "android.widget.TextView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.TextView.getPaddingLeft()", "android.widget.TextView.getPaddingRight()", "android.widget.TextView.setPadding(long,long,long,long)", "android.widget.TextView.getLineSpacingExtra()", "android.widget.TextView.getLineSpacingMultiplier()", "android.widget.TextView.setLineSpacing(long,long)", "android.widget.TextView.onMeasure(long,long)", "android.widget.TextView.setTypeface(long,android.graphics.Typeface)", "android.widget.TextView.setFirstBaselineToTopHeight(long)", "android.widget.TextView.getPaint()", "android.widget.TextView.getIncludeFontPadding()", "android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.TextView.setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.TextView.setTextAppearance(long)", "android.widget.TextView.getContext()", "android.widget.TextView.setTextAppearance(long,android.content.Context)", "android.widget.TextView.setSingleLine(long)", "android.widget.TextView.setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.TextView.getDrawableState()", "android.widget.TextView.setAllCaps(long)", "android.widget.TextView.getCompoundDrawables()", "android.widget.TextView.getTransformationMethod()", "android.widget.TextView.setHintTextColor(android.content.res.ColorStateList)", "android.widget.TextView.setLinkTextColor(android.content.res.ColorStateList)", "android.widget.TextView.getAutoSizeStepGranularity()", "android.widget.TextView.setAutoSizeTextTypeUniformWithConfiguration(long,long,long,long)", "android.widget.TextView.setAutoSizeTextTypeUniformWithPresetSizes(long,long)", "android.widget.TextView.drawableStateChanged()", "android.widget.TextView.getAutoSizeMaxTextSize()", "android.widget.TextView.getAutoSizeMinTextSize()", "android.widget.TextView.getAutoSizeTextAvailableSizes()", "android.widget.TextView.getAutoSizeTextType()", "android.widget.TextView.onCreateInputConnection(android.view.inputmethod.EditorInfo)", "android.widget.TextView.onLayout(long,long,long,long,long)", "android.widget.TextView.onTextChanged(long,long,long,java.lang.CharSequence)", "android.widget.TextView.setAutoSizeTextTypeWithDefaults(long)", "android.widget.TextView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.TextView.setBackgroundResource(long)", "android.widget.TextView.setLastBaselineToBottomHeight(long)", "android.widget.TextView.getTotalPaddingLeft()", "android.widget.TextView.getTotalPaddingRight()", "android.widget.TextView.getHeight()", "android.widget.TextView.getCompoundPaddingBottom()", "android.widget.TextView.getCompoundPaddingTop()", "android.widget.TextView.getBreakStrategy()", "android.widget.TextView.getHyphenationFrequency()", "android.widget.TextView.isInLayout()", "android.widget.TextView.requestLayout()", "android.widget.TextView.invalidate()", "android.widget.TextView.forceLayout()", "android.widget.TextView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.TextView.getLayoutParams()", "android.widget.TextView.getMeasuredState()", "android.widget.TextView.getTotalPaddingTop()", "android.widget.TextView.getTotalPaddingBottom()", "android.widget.TextView.getScrollY()", "android.widget.TextView.getScrollX()", "android.widget.TextView.dispatchHoverEvent(android.view.MotionEvent)", "android.widget.TextView.getMovementMethod()", "android.widget.TextView.setText(android.widget.TextView.BufferType,java.lang.CharSequence)", "android.widget.TextView.setMovementMethod(android.text.method.MovementMethod)", "android.widget.TextView.setFocusable(long)", "android.widget.TextView.setFocusableInTouchMode(long)", "android.widget.TextView.setClickable(long)", "android.widget.TextView.setMinHeight(long)", "android.widget.TextView.setOnTouchListener(android.view.View.OnTouchListener)", "android.widget.TextView.getResources()", "android.widget.TextView.setMinimumWidth(long)", "android.widget.TextView.setMinimumHeight(long)", "android.widget.TextView.setIncludeFontPadding(long)", "android.widget.TextView.setLayoutDirection(long)", "android.widget.TextView.setTranslationY(long)", "android.widget.TextView.setCompoundDrawablesRelativeWithIntrinsicBounds(long,long,long,long)", "android.widget.TextView.setTextDirection(long)", "android.widget.TextView.getPaintFlags()", "android.widget.TextView.setPaintFlags(long)", "android.widget.TextView.setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)", "android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(long,long,long,long)", "android.widget.TextView.requestFocus()", "android.widget.TextView.clearFocus()", "android.widget.TextView.setHint(java.lang.CharSequence)", "android.widget.TextView.setLinksClickable(long)", "android.widget.TextView.setMinLines(long)", "android.widget.TextView.setTextSize(long)", "android.widget.TextView.setFilters([Landroid.text.InputFilter)", "android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.TextView.setBackgroundColor(long)", "android.widget.TextView.setAutoLinkMask(long)", "android.widget.TextView.getWindowToken()", "android.widget.TextView.sendAccessibilityEvent(long)", "android.widget.TextView.getId()", "android.widget.TextView.getCompoundPaddingLeft()", "android.widget.TextView.getCompoundPaddingRight()", "android.widget.TextView.setOnLongClickListener(android.view.View.OnLongClickListener)", "android.widget.TextView.findViewById(long)", "android.widget.TextView.getLineHeight()", "android.widget.TextView.getContentDescription()", "android.widget.TextView.setCompoundDrawablePadding(long)", "android.widget.TextView.setLongClickable(long)", "android.widget.TextView.getUrls()", "android.widget.TextView.setMaxHeight(long)", "android.widget.TextView.getLeft()", "android.widget.TextView.getBottom()", "android.widget.TextView.setTranslationX(long)", "java.util.concurrent.locks.Lock.lock()", "java.util.concurrent.locks.Lock.unlock()", "java.util.concurrent.locks.Lock.newCondition()", "android.content.SharedPreferences.Editor.remove(java.lang.String)", "android.content.SharedPreferences.Editor.apply()", "android.content.SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.Editor.putInt(long,java.lang.String)", "android.content.SharedPreferences.Editor.commit()", "android.content.SharedPreferences.Editor.clear()", "android.content.SharedPreferences.Editor.putBoolean(long,java.lang.String)", "android.content.SharedPreferences.Editor.putFloat(long,java.lang.String)", "android.content.SharedPreferences.Editor.putLong(long,java.lang.String)", "android.content.SharedPreferences.Editor.putStringSet(java.util.Set,java.lang.String)", "android.content.pm.PackageManager.NameNotFoundException.getMessage()", "android.content.pm.PackageManager.NameNotFoundException.toString()", "android.content.pm.PackageManager.NameNotFoundException.<init>(java.lang.String)", "android.content.pm.PackageManager.NameNotFoundException.<init>()", "android.os.ResultReceiver.<init>(android.os.Handler)", "android.os.ResultReceiver.send(android.os.Bundle,long)", "android.os.ResultReceiver.onReceiveResult(android.os.Bundle,long)", "android.database.MatrixCursor.<init>([Ljava.lang.String)", "android.database.MatrixCursor.addRow([Ljava.lang.Object)", "android.database.MatrixCursor.<init>(long,[Ljava.lang.String)", "android.database.MatrixCursor.newRow()", "java.util.concurrent.BlockingQueue.take()", "java.util.concurrent.BlockingQueue.add(java.lang.Object)", "java.util.concurrent.BlockingQueue.put(java.lang.Object)", "java.util.concurrent.BlockingQueue.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.BlockingQueue.peek()", "java.util.concurrent.BlockingQueue.offer(java.lang.Object)", "java.util.concurrent.BlockingQueue.offer(java.util.concurrent.TimeUnit,long,java.lang.Object)", "java.util.concurrent.BlockingQueue.poll()", "java.util.concurrent.BlockingQueue.size()", "java.util.concurrent.BlockingQueue.isEmpty()", "java.util.concurrent.BlockingQueue.remove(java.lang.Object)", "java.util.concurrent.BlockingQueue.drainTo(java.util.Collection)", "java.util.concurrent.BlockingQueue.addAll(java.util.Collection)", "java.util.concurrent.BlockingQueue.clear()", "android.app.DialogFragment.<init>()", "android.app.DialogFragment.show(java.lang.String,android.app.FragmentManager)", "android.content.DialogInterface.OnCancelListener.onCancel(android.content.DialogInterface)", "android.content.pm.PackageInstaller.getAllSessions()", "android.content.pm.PackageInstaller.unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback)", "android.content.pm.PackageInstaller.registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)", "android.content.pm.PackageInstaller.getSessionInfo(long)", "android.content.pm.PackageInstaller.createSession(android.content.pm.PackageInstaller.SessionParams)", "android.content.pm.PackageInstaller.openSession(long)", "android.content.pm.PackageInstaller.abandonSession(long)", "android.content.pm.PackageInstaller.SessionInfo.getAppPackageName()", "android.accounts.Account.<init>(java.lang.String,java.lang.String)", "android.accounts.Account.equals(java.lang.Object)", "android.accounts.Account.hashCode()", "android.accounts.Account.toString()", "java.util.concurrent.atomic.AtomicReference.get()", "java.util.concurrent.atomic.AtomicReference.<init>(java.lang.Object)", "java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object,java.lang.Object)", "java.util.concurrent.atomic.AtomicReference.<init>()", "java.util.concurrent.atomic.AtomicReference.set(java.lang.Object)", "java.util.concurrent.atomic.AtomicReference.getAndSet(java.lang.Object)", "android.app.ActivityManager.RunningAppProcessInfo.<init>()", "android.app.ActivityManager.getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)", "android.app.ActivityManager.isLowRamDevice()", "android.app.ActivityManager.getCurrentUser()", "android.app.ActivityManager.getRunningAppProcesses()", "android.app.ActivityManager.getRecentTasks(long,long)", "android.app.ActivityManager.clearApplicationUserData()", "android.app.ActivityManager.getMemoryInfo(android.app.ActivityManager.MemoryInfo)", "android.app.ActivityManager.addOnUidImportanceListener(long,android.app.ActivityManager.OnUidImportanceListener)", "android.app.ActivityManager.getPackageImportance(java.lang.String)", "android.app.ActivityManager.removeOnUidImportanceListener(android.app.ActivityManager.OnUidImportanceListener)", "android.app.ActivityManager.getDeviceConfigurationInfo()", "android.app.ActivityManager.getRunningServices(long)", "android.app.ActivityManager.isRunningInTestHarness()", "android.app.ActivityManager.getRunningTasks(long)", "android.app.ActivityManager.getMemoryClass()", "android.app.ActivityManager.getProcessMemoryInfo(long)", "android.content.ContentValues.size()", "android.content.ContentValues.valueSet()", "android.content.ContentValues.containsKey(java.lang.String)", "android.content.ContentValues.get(java.lang.String)", "android.content.ContentValues.<init>(long)", "android.content.ContentValues.put(java.lang.String,java.lang.String)", "android.content.ContentValues.put(java.lang.Long,java.lang.String)", "android.content.ContentValues.put(java.lang.Integer,java.lang.String)", "android.content.ContentValues.<init>()", "android.content.ContentValues.getAsString(java.lang.String)", "android.content.ContentValues.getAsLong(java.lang.String)", "android.content.ContentValues.put(long,java.lang.String)", "android.content.ContentValues.put(java.lang.Boolean,java.lang.String)", "android.content.ContentValues.getAsInteger(java.lang.String)", "android.content.ContentValues.getAsBoolean(java.lang.String)", "android.content.ContentValues.getAsByteArray(java.lang.String)", "android.content.ContentValues.put(java.lang.Float,java.lang.String)", "android.content.ContentValues.putNull(java.lang.String)", "android.content.ContentValues.clear()", "android.content.ContentValues.<init>(android.content.ContentValues)", "android.content.ContentValues.put(java.lang.Double,java.lang.String)", "android.content.ContentValues.remove(java.lang.String)", "android.content.ContentValues.toString()", "android.content.ContentValues.put(java.lang.Byte,java.lang.String)", "android.content.ContentValues.equals(java.lang.Object)", "android.content.ContentValues.hashCode()", "android.content.ContentValues.put(java.lang.Short,java.lang.String)", "java.util.concurrent.FutureTask.<init>(java.util.concurrent.Callable)", "java.util.concurrent.FutureTask.cancel(long)", "java.util.concurrent.FutureTask.get()", "java.util.concurrent.FutureTask.<init>(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.FutureTask.run()", "java.util.concurrent.FutureTask.setException(java.lang.Throwable)", "java.util.concurrent.FutureTask.get(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.FutureTask.isDone()", "java.util.concurrent.Future.get(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.Future.cancel(long)", "java.util.concurrent.Future.isDone()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.isCancelled()", "java.io.PrintWriter.append(java.lang.CharSequence)", "java.io.PrintWriter.print(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.print(long)", "java.io.PrintWriter.println(java.lang.Object)", "java.io.PrintWriter.print(long)", "java.io.PrintWriter.println(long)", "java.io.PrintWriter.println()", "java.io.PrintWriter.println(long)", "java.io.PrintWriter.<init>(java.io.Writer)", "java.io.PrintWriter.print(java.lang.Object)", "java.io.PrintWriter.write(java.lang.String)", "java.io.PrintWriter.close()", "java.io.PrintWriter.printf([Ljava.lang.Object,java.lang.String)", "java.io.PrintWriter.write(long,long,long)", "java.io.PrintWriter.write(long)", "java.io.PrintWriter.format([Ljava.lang.Object,java.lang.String)", "java.io.PrintWriter.print(long)", "java.io.PrintWriter.print(long)", "java.io.PrintWriter.flush()", "java.io.PrintWriter.print(long)", "java.io.PrintWriter.<init>(java.io.File)", "java.io.PrintWriter.<init>(java.io.OutputStream)", "java.text.SimpleDateFormat.<init>(java.util.Locale,java.lang.String)", "java.text.SimpleDateFormat.format(java.util.Date)", "java.text.SimpleDateFormat.<init>(java.lang.String)", "java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone)", "java.text.SimpleDateFormat.toLocalizedPattern()", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.format(java.lang.Object)", "java.text.SimpleDateFormat.equals(java.lang.Object)", "java.text.SimpleDateFormat.hashCode()", "java.text.SimpleDateFormat.getDateTimeInstance(java.util.Locale,long,long)", "java.text.SimpleDateFormat.setLenient(long)", "java.text.SimpleDateFormat.getDateInstance(long)", "java.text.SimpleDateFormat.toPattern()", "java.text.SimpleDateFormat.parse(java.text.ParsePosition,java.lang.String)", "android.os.DeadObjectException.<init>()", "android.content.DialogInterface.dismiss()", "android.content.DialogInterface.cancel()", "java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Throwable,java.lang.Thread)", "android.content.ServiceConnection.onServiceConnected(android.os.IBinder,android.content.ComponentName)", "android.content.ServiceConnection.onServiceDisconnected(android.content.ComponentName)", "android.util.TypedValue.<init>()", "android.util.TypedValue.applyDimension(android.util.DisplayMetrics,long,long)", "android.util.TypedValue.getDimension(android.util.DisplayMetrics)", "android.util.TypedValue.complexToDimensionPixelSize(android.util.DisplayMetrics,long)", "android.util.TypedValue.getFloat()", "android.util.TypedValue.getFraction(long,long)", "java.math.BigDecimal.<init>(long,java.math.BigInteger)", "java.math.BigDecimal.<init>(java.lang.String)", "java.math.BigDecimal.unscaledValue()", "java.math.BigDecimal.scale()", "java.math.BigDecimal.<init>(long)", "java.math.BigDecimal.<init>(long)", "java.math.BigDecimal.divide(java.math.BigDecimal)", "java.math.BigDecimal.intValue()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.<init>(long)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.math.BigDecimal.round(java.math.MathContext)", "javax.net.ssl.HostnameVerifier.verify(javax.net.ssl.SSLSession,java.lang.String)", "java.util.zip.GZIPInputStream.<init>(java.io.InputStream)", "java.util.zip.GZIPInputStream.<init>(long,java.io.InputStream)", "java.util.zip.GZIPInputStream.read(long)", "java.util.zip.GZIPInputStream.close()", "java.util.Stack.<init>()", "java.util.Stack.push(java.lang.Object)", "java.util.Stack.isEmpty()", "java.util.Stack.pop()", "java.util.Stack.peek()", "java.util.Stack.size()", "java.util.Stack.add(java.lang.Object)", "java.util.Stack.empty()", "android.util.Base64.decode(long,java.lang.String)", "android.util.Base64.encodeToString(long,long)", "android.util.Base64.encode(long,long)", "android.util.Base64.decode(long,long)", "android.util.Base64.encodeToString(long,long,long,long)", "android.database.CursorWrapper.<init>(android.database.Cursor)", "android.database.CursorWrapper.getWrappedCursor()", "android.database.CursorWrapper.getCount()", "android.database.AbstractWindowedCursor.setWindow(android.database.CursorWindow)", "android.database.AbstractWindowedCursor.fillWindow(android.database.CursorWindow,long)", "android.database.AbstractWindowedCursor.getWindow()", "android.database.AbstractWindowedCursor.onMove(long,long)", "android.database.AbstractWindowedCursor.<init>()", "android.os.Debug.getNativeHeapAllocatedSize()", "android.os.Debug.isDebuggerConnected()", "android.os.Debug.dumpService([Ljava.lang.String,java.io.FileDescriptor,java.lang.String)", "android.os.Debug.stopMethodTracing()", "android.os.Debug.startMethodTracingSampling(long,long,java.lang.String)", "android.os.Debug.startMethodTracing(long,java.lang.String)", "android.os.Debug.threadCpuTimeNanos()", "android.os.Debug.dumpHprofData(java.lang.String)", "android.os.Debug.getMemoryInfo(android.os.Debug.MemoryInfo)", "android.os.Message.getCallback()", "android.os.Message.obtain(java.lang.Object,long,android.os.Handler)", "android.os.Message.sendToTarget()", "android.os.Message.obtain(android.os.Message)", "android.os.Message.<init>()", "android.os.Message.getData()", "android.os.Message.obtain()", "android.os.Message.setData(android.os.Bundle)", "android.os.Message.obtain(long,android.os.Handler)", "android.os.Message.recycle()", "android.os.Message.getWhen()", "android.os.Message.obtain(long,long,long,android.os.Handler)", "android.os.Message.copyFrom(android.os.Message)", "android.os.Message.obtain(java.lang.Object,long,long,long,android.os.Handler)", "android.os.Message.setTarget(android.os.Handler)", "android.telephony.TelephonyManager.getSimOperator()", "android.telephony.TelephonyManager.getNetworkOperator()", "android.telephony.TelephonyManager.getPhoneType()", "android.telephony.TelephonyManager.getCallState()", "android.telephony.TelephonyManager.getAllCellInfo()", "android.telephony.TelephonyManager.listen(long,android.telephony.PhoneStateListener)", "android.telephony.TelephonyManager.getNetworkCountryIso()", "android.telephony.TelephonyManager.getSimCountryIso()", "android.telephony.TelephonyManager.getLine1Number()", "android.telephony.TelephonyManager.getImei()", "android.telephony.TelephonyManager.getMeid()", "android.telephony.TelephonyManager.getDeviceId()", "android.telephony.TelephonyManager.getCarrierPackageNamesForIntent(android.content.Intent)", "android.telephony.TelephonyManager.getSubscriberId()", "android.telephony.TelephonyManager.getSimSerialNumber()", "android.telephony.TelephonyManager.getSimState()", "android.telephony.TelephonyManager.getSimOperatorName()", "android.telephony.TelephonyManager.isNetworkRoaming()", "android.telephony.TelephonyManager.getGroupIdLevel1()", "android.telephony.TelephonyManager.isVoiceCapable()", "android.telephony.TelephonyManager.getCurrentPhoneType()", "android.telephony.TelephonyManager.getNetworkOperatorName()", "android.telephony.TelephonyManager.getNetworkType()", "android.telephony.TelephonyManager.getDataActivity()", "android.telephony.TelephonyManager.getDataState()", "android.telephony.TelephonyManager.getVoiceNetworkType()", "android.telephony.TelephonyManager.getServiceState()", "android.telephony.TelephonyManager.isDataEnabled()", "android.telephony.TelephonyManager.isConcurrentVoiceAndDataSupported()", "android.telephony.TelephonyManager.getCellLocation()", "android.telephony.TelephonyManager.getNeighboringCellInfo()", "android.os.Build.getRadioVersion()", "android.os.Build.getSerial()", "android.os.AsyncTask.executeOnExecutor([Ljava.lang.Object,java.util.concurrent.Executor)", "android.os.AsyncTask.<init>()", "android.os.AsyncTask.execute([Ljava.lang.Object)", "android.os.AsyncTask.execute(java.lang.Runnable)", "android.os.AsyncTask.getStatus()", "android.os.AsyncTask.cancel(long)", "android.os.AsyncTask.onPostExecute(java.lang.Object)", "android.os.AsyncTask.get()", "android.os.AsyncTask.get(java.util.concurrent.TimeUnit,long)", "javax.crypto.Mac.getInstance(java.lang.String)", "javax.crypto.Mac.init(java.security.Key)", "javax.crypto.Mac.doFinal(long)", "javax.crypto.Mac.update(long,long,long)", "javax.crypto.Mac.doFinal(long,long)", "javax.crypto.Mac.doFinal()", "javax.crypto.Mac.reset()", "javax.crypto.Mac.update(long)", "javax.crypto.Mac.update(long)", "javax.crypto.Mac.update(java.nio.ByteBuffer)", "javax.crypto.Mac.getMacLength()", "javax.crypto.Mac.clone()", "javax.crypto.Mac.getAlgorithm()", "javax.crypto.Mac.getInstance(java.security.Provider,java.lang.String)", "android.os.UserHandle.isOwner()", "android.os.UserHandle.myUserId()", "android.os.UserHandle.getIdentifier()", "android.os.UserHandle.of(long)", "android.os.UserHandle.equals(java.lang.Object)", "android.provider.Settings.Global.getInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.getUriFor(java.lang.String)", "android.provider.Settings.Global.putInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.getInt(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.putLong(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.getLong(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.getString(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.putString(java.lang.String,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Global.getFloat(long,java.lang.String,android.content.ContentResolver)", "android.util.LruCache.<init>(long)", "android.util.LruCache.get(java.lang.Object)", "android.util.LruCache.put(java.lang.Object,java.lang.Object)", "android.util.LruCache.snapshot()", "android.util.LruCache.evictAll()", "android.util.LruCache.remove(java.lang.Object)", "android.os.DropBoxManager.isTagEnabled(java.lang.String)", "android.os.DropBoxManager.addText(java.lang.String,java.lang.String)", "android.os.DropBoxManager.getNextEntry(long,java.lang.String)", "android.os.DropBoxManager.addFile(long,java.io.File,java.lang.String)", "java.lang.ProcessBuilder.<init>([Ljava.lang.String)", "java.lang.ProcessBuilder.redirectErrorStream(long)", "java.lang.ProcessBuilder.start()", "java.lang.Process.getOutputStream()", "java.lang.Process.getErrorStream()", "java.lang.Process.getInputStream()", "java.lang.Process.destroy()", "android.provider.Settings.Secure.getInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.getString(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.getInt(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.putInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.getLong(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.putString(java.lang.String,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.isLocationProviderEnabled(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.Secure.getUriFor(java.lang.String)", "android.provider.Settings.Secure.setLocationProviderEnabled(long,java.lang.String,android.content.ContentResolver)", "android.os.ParcelFileDescriptor.close()", "android.os.ParcelFileDescriptor.getFileDescriptor()", "android.os.ParcelFileDescriptor.dup(java.io.FileDescriptor)", "android.os.ParcelFileDescriptor.open(long,java.io.File)", "android.os.ParcelFileDescriptor.getFd()", "android.os.ParcelFileDescriptor.getStatSize()", "android.os.ParcelFileDescriptor.createPipe()", "android.os.ParcelFileDescriptor.writeToParcel(long,android.os.Parcel)", "android.graphics.Paint.<init>(long)", "android.graphics.Paint.setColor(long)", "android.graphics.Paint.setXfermode(android.graphics.Xfermode)", "android.graphics.Paint.<init>()", "android.graphics.Paint.setTextSize(long)", "android.graphics.Paint.setTypeface(android.graphics.Typeface)", "android.graphics.Paint.measureText(java.lang.String)", "android.graphics.Paint.setStyle(android.graphics.Paint.Style)", "android.graphics.Paint.setStrokeWidth(long)", "android.graphics.Paint.setColorFilter(android.graphics.ColorFilter)", "android.graphics.Paint.setShader(android.graphics.Shader)", "android.graphics.Paint.getStrokeWidth()", "android.graphics.Paint.setAlpha(long)", "android.graphics.Paint.<init>(android.graphics.Paint)", "android.graphics.Paint.setAntiAlias(long)", "android.graphics.Paint.getColor()", "android.graphics.Paint.setFilterBitmap(long)", "android.graphics.Paint.setStrokeJoin(android.graphics.Paint.Join)", "android.graphics.Paint.setStrokeCap(android.graphics.Paint.Cap)", "android.graphics.Paint.setStrokeMiter(long)", "android.graphics.Paint.setShadowLayer(long,long,long,long)", "android.graphics.Paint.getColorFilter()", "android.graphics.Paint.reset()", "android.graphics.Paint.setTextAlign(android.graphics.Paint.Align)", "android.graphics.Paint.descent()", "android.graphics.Paint.setDither(long)", "android.graphics.Paint.ascent()", "android.graphics.Paint.getTextBounds(android.graphics.Rect,long,long,java.lang.String)", "android.graphics.Paint.getAlpha()", "android.graphics.Paint.getTextBounds(android.graphics.Rect,long,long,long)", "android.graphics.Paint.getStyle()", "android.graphics.Paint.getFontMetrics()", "android.graphics.BitmapFactory.Options.<init>()", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap.Config,long,long)", "android.graphics.Bitmap.createBitmap(long,android.graphics.Matrix,long,long,long,long,android.graphics.Bitmap)", "android.graphics.Bitmap.recycle()", "android.graphics.Bitmap.createScaledBitmap(long,long,long,android.graphics.Bitmap)", "android.graphics.Bitmap.getRowBytes()", "android.graphics.Bitmap.eraseColor(long)", "android.graphics.Bitmap.createBitmap(android.graphics.Picture)", "android.graphics.Bitmap.compress(java.io.OutputStream,long,android.graphics.Bitmap.CompressFormat)", "android.graphics.Bitmap.getAllocationByteCount()", "android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)", "android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)", "android.graphics.Bitmap.getConfig()", "android.graphics.Bitmap.copy(long,android.graphics.Bitmap.Config)", "android.graphics.Bitmap.isRecycled()", "android.graphics.Bitmap.createBitmap(long,long,long,long,android.graphics.Bitmap)", "android.graphics.Bitmap.sameAs(android.graphics.Bitmap)", "android.graphics.Bitmap.getPixels(long,long,long,long,long,long,long)", "android.graphics.Bitmap.getByteCount()", "android.graphics.Canvas.<init>(android.graphics.Bitmap)", "android.graphics.Canvas.drawARGB(long,long,long,long)", "android.graphics.Canvas.drawCircle(android.graphics.Paint,long,long,long)", "android.graphics.Canvas.drawBitmap(android.graphics.Paint,android.graphics.Rect,android.graphics.Rect,android.graphics.Bitmap)", "android.graphics.Canvas.drawRoundRect(android.graphics.Paint,long,long,android.graphics.RectF)", "android.graphics.Canvas.saveLayerAlpha(long,long,long,long,long)", "android.graphics.Canvas.translate(long,long)", "android.graphics.Canvas.save()", "android.graphics.Canvas.clipRect(android.graphics.RectF)", "android.graphics.Canvas.drawText(android.graphics.Paint,long,long,long,long,java.lang.CharSequence)", "android.graphics.Canvas.restoreToCount(long)", "android.graphics.Canvas.saveLayerAlpha(long,long,long,long,long,long)", "android.graphics.Canvas.rotate(long,long,long)", "android.graphics.Canvas.drawOval(android.graphics.Paint,android.graphics.RectF)", "android.graphics.Canvas.restore()", "android.graphics.Canvas.scale(long,long,long,long)", "android.graphics.Canvas.scale(long,long)", "android.graphics.Canvas.drawPath(android.graphics.Paint,android.graphics.Path)", "android.graphics.Canvas.drawRect(android.graphics.Paint,long,long,long,long)", "android.graphics.Canvas.rotate(long)", "android.graphics.Canvas.drawRect(android.graphics.Paint,android.graphics.RectF)", "android.graphics.Canvas.getWidth()", "android.graphics.Canvas.getHeight()", "android.graphics.Canvas.saveLayer(android.graphics.Paint,long,long,long,long)", "android.graphics.Canvas.saveLayer(long,android.graphics.Paint,long,long,long,long)", "android.graphics.Canvas.getMatrix(android.graphics.Matrix)", "android.graphics.Canvas.clipPath(android.graphics.Path)", "android.graphics.Canvas.concat(android.graphics.Matrix)", "android.graphics.Canvas.setBitmap(android.graphics.Bitmap)", "android.graphics.Canvas.drawArc(android.graphics.Paint,long,long,long,android.graphics.RectF)", "android.graphics.Canvas.clipRect(android.graphics.Region.Op,android.graphics.Rect)", "android.graphics.Canvas.clipRect(android.graphics.Rect)", "android.graphics.Canvas.drawColor(long)", "android.graphics.Canvas.drawBitmap(android.graphics.Paint,long,long,android.graphics.Bitmap)", "android.graphics.Canvas.clipRect(long,long,long,long)", "android.graphics.Canvas.drawText(android.graphics.Paint,long,long,java.lang.String)", "android.graphics.Canvas.quickReject(android.graphics.Canvas.EdgeType,android.graphics.Path)", "android.graphics.Canvas.getSaveCount()", "android.graphics.Canvas.drawRect(android.graphics.Paint,android.graphics.Rect)", "android.graphics.Canvas.drawText(android.graphics.Paint,long,long,long,long,long)", "android.graphics.Canvas.getClipBounds(android.graphics.Rect)", "android.graphics.Canvas.clipRect(long,long,long,long)", "android.graphics.Canvas.clipRect(android.graphics.Region.Op,android.graphics.RectF)", "android.graphics.PorterDuffXfermode.<init>(android.graphics.PorterDuff.Mode)", "android.graphics.Matrix.<init>()", "android.graphics.Matrix.setRotate(long,long,long)", "android.graphics.Matrix.set(android.graphics.Matrix)", "android.graphics.Matrix.getValues(long)", "android.graphics.Matrix.setValues(long)", "android.graphics.Matrix.reset()", "android.graphics.Matrix.setRectToRect(android.graphics.Matrix.ScaleToFit,android.graphics.RectF,android.graphics.RectF)", "android.graphics.Matrix.postScale(long,long,long,long)", "android.graphics.Matrix.<init>(android.graphics.Matrix)", "android.graphics.Matrix.mapRect(android.graphics.RectF)", "android.graphics.Matrix.preTranslate(long,long)", "android.graphics.Matrix.isIdentity()", "android.graphics.Matrix.preConcat(android.graphics.Matrix)", "android.graphics.Matrix.postTranslate(long,long)", "android.graphics.Matrix.postScale(long,long)", "android.graphics.Matrix.postRotate(long,long,long)", "android.graphics.Matrix.mapVectors(long)", "android.graphics.Matrix.setTranslate(long,long)", "android.graphics.Matrix.invert(android.graphics.Matrix)", "android.graphics.Matrix.postConcat(android.graphics.Matrix)", "android.graphics.Matrix.preScale(long,long)", "android.graphics.Matrix.postRotate(long)", "android.graphics.Matrix.mapPoints(long)", "android.graphics.BitmapFactory.decodeStream(android.graphics.BitmapFactory.Options,android.graphics.Rect,java.io.InputStream)", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor)", "android.graphics.BitmapFactory.decodeResource(long,android.content.res.Resources)", "android.graphics.BitmapFactory.decodeByteArray(long,long,long)", "android.graphics.BitmapFactory.decodeByteArray(android.graphics.BitmapFactory.Options,long,long,long)", "android.graphics.BitmapFactory.decodeFile(java.lang.String)", "android.graphics.BitmapFactory.decodeFile(android.graphics.BitmapFactory.Options,java.lang.String)", "android.graphics.BitmapFactory.decodeFileDescriptor(android.graphics.BitmapFactory.Options,android.graphics.Rect,java.io.FileDescriptor)", "android.webkit.MimeTypeMap.getSingleton()", "android.webkit.MimeTypeMap.getFileExtensionFromUrl(java.lang.String)", "android.webkit.MimeTypeMap.getMimeTypeFromExtension(java.lang.String)", "android.graphics.Point.<init>(long,long)", "android.graphics.Point.<init>()", "android.graphics.Point.set(long,long)", "android.provider.MediaStore.Images.Media.getContentUri(java.lang.String)", "android.provider.MediaStore.Images.Media.getBitmap(android.net.Uri,android.content.ContentResolver)", "android.content.ContentUris.parseId(android.net.Uri)", "android.content.ContentUris.withAppendedId(long,android.net.Uri)", "android.content.ContentUris.appendId(long,android.net.Uri.Builder)", "android.provider.MediaStore.Images.Thumbnails.getThumbnail(android.graphics.BitmapFactory.Options,long,long,android.content.ContentResolver)", "android.provider.MediaStore.Video.Thumbnails.getThumbnail(android.graphics.BitmapFactory.Options,long,long,android.content.ContentResolver)", "java.lang.NoSuchFieldException.<init>(java.lang.String)", "java.io.FileReader.<init>(java.lang.String)", "java.io.FileReader.<init>(java.io.File)", "java.io.FileReader.close()", "java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)", "android.app.AppOpsManager.checkPackage(java.lang.String,long)", "android.app.AppOpsManager.permissionToOp(java.lang.String)", "android.app.AppOpsManager.noteProxyOpNoThrow(java.lang.String,java.lang.String)", "android.app.AppOpsManager.checkOpNoThrow(java.lang.String,long,java.lang.String)", "android.app.AppOpsManager.startWatchingMode(android.app.AppOpsManager.OnOpChangedListener,java.lang.String,java.lang.String)", "android.app.AppOpsManager.stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)", "android.app.AppOpsManager.finishOp(java.lang.String,long,java.lang.String)", "android.app.AppOpsManager.noteOpNoThrow(java.lang.String,long,java.lang.String)", "android.app.AppOpsManager.startOpNoThrow(java.lang.String,long,java.lang.String)", "java.lang.NumberFormatException.<init>(java.lang.String)", "java.lang.NumberFormatException.toString()", "java.lang.NumberFormatException.getMessage()", "java.lang.NumberFormatException.<init>()", "java.util.zip.ZipException.<init>(java.lang.String)", "java.util.concurrent.Callable.call()", "android.animation.AnimatorListenerAdapter.<init>()", "android.animation.AnimatorListenerAdapter.onAnimationEnd(android.animation.Animator)", "android.animation.Animator.removeListener(android.animation.Animator.AnimatorListener)", "android.animation.Animator.addListener(android.animation.Animator.AnimatorListener)", "android.animation.Animator.cancel()", "android.animation.Animator.setTarget(java.lang.Object)", "android.animation.Animator.start()", "android.animation.Animator.end()", "android.animation.Animator.getStartDelay()", "android.animation.Animator.getDuration()", "android.animation.Animator.setDuration(long)", "android.animation.Animator.setStartDelay(long)", "android.animation.Animator.setInterpolator(android.animation.TimeInterpolator)", "android.animation.Animator.pause()", "android.animation.Animator.resume()", "android.animation.Animator.isRunning()", "android.animation.Animator.isStarted()", "android.animation.Animator.addPauseListener(android.animation.Animator.AnimatorPauseListener)", "android.animation.Animator.clone()", "android.view.animation.Animation.AnimationListener.onAnimationEnd(android.view.animation.Animation)", "android.view.animation.Animation.AnimationListener.onAnimationRepeat(android.view.animation.Animation)", "android.view.animation.Animation.AnimationListener.onAnimationStart(android.view.animation.Animation)", "android.view.animation.AnimationSet.<init>(long)", "android.view.animation.AnimationSet.addAnimation(android.view.animation.Animation)", "android.view.animation.AnimationSet.getTransformation(android.view.animation.Transformation,long)", "android.view.animation.AnimationSet.getTransformation(long,android.view.animation.Transformation,long)", "android.view.animation.AnimationSet.getAnimations()", "android.transition.Transition.EpicenterCallback.<init>()", "android.transition.Transition.removeListener(android.transition.Transition.TransitionListener)", "android.transition.Transition.getTargetIds()", "android.transition.Transition.getTargetNames()", "android.transition.Transition.getTargetTypes()", "android.transition.Transition.setEpicenterCallback(android.transition.Transition.EpicenterCallback)", "android.transition.Transition.addTarget(android.view.View)", "android.transition.Transition.addListener(android.transition.Transition.TransitionListener)", "android.transition.Transition.getTargets()", "android.transition.Transition.removeTarget(android.view.View)", "android.transition.Transition.clone()", "android.app.Notification.Builder.<init>(java.lang.String,android.content.Context)", "android.app.Notification.Builder.setWhen(long)", "android.app.Notification.Builder.setSmallIcon(long,long)", "android.app.Notification.Builder.setContent(android.widget.RemoteViews)", "android.app.Notification.Builder.setTicker(android.widget.RemoteViews,java.lang.CharSequence)", "android.app.Notification.Builder.setVibrate(long)", "android.app.Notification.Builder.setLights(long,long,long)", "android.app.Notification.Builder.setOngoing(long)", "android.app.Notification.Builder.setOnlyAlertOnce(long)", "android.app.Notification.Builder.setAutoCancel(long)", "android.app.Notification.Builder.setDefaults(long)", "android.app.Notification.Builder.setContentTitle(java.lang.CharSequence)", "android.app.Notification.Builder.setContentText(java.lang.CharSequence)", "android.app.Notification.Builder.setContentInfo(java.lang.CharSequence)", "android.app.Notification.Builder.setContentIntent(android.app.PendingIntent)", "android.app.Notification.Builder.setDeleteIntent(android.app.PendingIntent)", "android.app.Notification.Builder.setFullScreenIntent(long,android.app.PendingIntent)", "android.app.Notification.Builder.setLargeIcon(android.graphics.Bitmap)", "android.app.Notification.Builder.setNumber(long)", "android.app.Notification.Builder.setProgress(long,long,long)", "android.app.Notification.Builder.setSound(long,android.net.Uri)", "android.app.Notification.Builder.setSubText(java.lang.CharSequence)", "android.app.Notification.Builder.setUsesChronometer(long)", "android.app.Notification.Builder.setPriority(long)", "android.app.Notification.Builder.addAction(android.app.Notification.Action)", "android.app.Notification.Builder.setShowWhen(long)", "android.app.Notification.Builder.setLocalOnly(long)", "android.app.Notification.Builder.setGroup(java.lang.String)", "android.app.Notification.Builder.setGroupSummary(long)", "android.app.Notification.Builder.setSortKey(java.lang.String)", "android.app.Notification.Builder.setCategory(java.lang.String)", "android.app.Notification.Builder.setColor(long)", "android.app.Notification.Builder.setVisibility(long)", "android.app.Notification.Builder.setPublicVersion(android.app.Notification)", "android.app.Notification.Builder.setSound(android.media.AudioAttributes,android.net.Uri)", "android.app.Notification.Builder.addPerson(java.lang.String)", "android.app.Notification.Builder.setExtras(android.os.Bundle)", "android.app.Notification.Builder.setRemoteInputHistory([Ljava.lang.CharSequence)", "android.app.Notification.Builder.setBadgeIconType(long)", "android.app.Notification.Builder.setShortcutId(java.lang.String)", "android.app.Notification.Builder.setTimeoutAfter(long)", "android.app.Notification.Builder.setGroupAlertBehavior(long)", "android.app.Notification.Builder.setSound(android.net.Uri)", "android.app.Notification.Builder.<init>(android.content.Context)", "android.app.Notification.Builder.build()", "android.app.Notification.Builder.addAction(android.app.PendingIntent,java.lang.CharSequence,long)", "android.app.Notification.Builder.setSmallIcon(long)", "android.app.Notification.Builder.setStyle(android.app.Notification.Style)", "android.app.Notification.Builder.setChannelId(java.lang.String)", "android.app.Notification.Builder.addExtras(android.os.Bundle)", "android.app.Notification.Builder.recoverBuilder(android.app.Notification,android.content.Context)", "android.app.Notification.Builder.setSmallIcon(android.graphics.drawable.Icon)", "android.app.Notification.Action.Builder.<init>(android.app.PendingIntent,java.lang.CharSequence,long)", "android.app.Notification.Action.Builder.addRemoteInput(android.app.RemoteInput)", "android.app.Notification.Action.Builder.addExtras(android.os.Bundle)", "android.app.Notification.Action.Builder.build()", "android.app.Notification.Action.Builder.setSemanticAction(long)", "android.app.Notification.Action.Builder.setAllowGeneratedReplies(long)", "android.app.Notification.<init>()", "android.app.Notification.writeToParcel(long,android.os.Parcel)", "android.app.Notification.getChannelId()", "android.media.AudioAttributes.Builder.<init>()", "android.media.AudioAttributes.Builder.setContentType(long)", "android.media.AudioAttributes.Builder.setUsage(long)", "android.media.AudioAttributes.Builder.build()", "android.app.RemoteInput.Builder.<init>(java.lang.String)", "android.app.RemoteInput.Builder.setLabel(java.lang.CharSequence)", "android.app.RemoteInput.Builder.setChoices([Ljava.lang.CharSequence)", "android.app.RemoteInput.Builder.setAllowFreeFormInput(long)", "android.app.RemoteInput.Builder.addExtras(android.os.Bundle)", "android.app.RemoteInput.Builder.build()", "android.util.AndroidRuntimeException.<init>(java.lang.String)", "android.util.AndroidRuntimeException.<init>()", "android.provider.ContactsContract.CommonDataKinds.StructuredPostal.getTypeLabel(java.lang.CharSequence,long,android.content.res.Resources)", "android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabel(java.lang.CharSequence,long,android.content.res.Resources)", "android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabelResource(long)", "android.provider.ContactsContract.CommonDataKinds.Event.getTypeResource(java.lang.Integer)", "android.provider.ContactsContract.CommonDataKinds.Im.getProtocolLabel(java.lang.CharSequence,long,android.content.res.Resources)", "android.provider.ContactsContract.CommonDataKinds.Im.getTypeLabel(java.lang.CharSequence,long,android.content.res.Resources)", "android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabel(java.lang.CharSequence,long,android.content.res.Resources)", "android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabelResource(long)", "android.provider.ContactsContract.CommonDataKinds.Relation.getTypeLabel(java.lang.CharSequence,long,android.content.res.Resources)", "java.text.Collator.getInstance()", "java.text.Collator.compare(java.lang.String,java.lang.String)", "java.text.Collator.setStrength(long)", "java.text.Collator.getInstance(java.util.Locale)", "android.widget.FrameLayout.LayoutParams.<init>(long,long)", "android.widget.FrameLayout.LayoutParams.<init>(long,long,long)", "android.widget.FrameLayout.LayoutParams.setMargins(long,long,long,long)", "android.widget.FrameLayout.LayoutParams.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.FrameLayout.LayoutParams.<init>(android.view.ViewGroup.LayoutParams)", "android.graphics.drawable.Drawable.setFilterBitmap(long)", "android.graphics.drawable.Drawable.setBounds(android.graphics.Rect)", "android.graphics.drawable.Drawable.draw(android.graphics.Canvas)", "android.graphics.drawable.Drawable.getIntrinsicWidth()", "android.graphics.drawable.Drawable.getIntrinsicHeight()", "android.graphics.drawable.Drawable.getMinimumWidth()", "android.graphics.drawable.Drawable.getMinimumHeight()", "android.graphics.drawable.Drawable.getPadding(android.graphics.Rect)", "android.graphics.drawable.Drawable.isStateful()", "android.graphics.drawable.Drawable.setState(long)", "android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable.Callback)", "android.graphics.drawable.Drawable.mutate()", "android.graphics.drawable.Drawable.setBounds(long,long,long,long)", "android.graphics.drawable.Drawable.setAlpha(long)", "android.graphics.drawable.Drawable.setVisible(long,long)", "android.graphics.drawable.Drawable.isVisible()", "android.graphics.drawable.Drawable.getConstantState()", "android.graphics.drawable.Drawable.getBounds()", "android.graphics.drawable.Drawable.getState()", "android.graphics.drawable.Drawable.invalidateSelf()", "android.graphics.drawable.Drawable.<init>()", "android.graphics.drawable.Drawable.onStateChange(long)", "android.graphics.drawable.Drawable.getLevel()", "android.graphics.drawable.Drawable.setLevel(long)", "android.graphics.drawable.Drawable.onLayoutDirectionChanged(long)", "android.graphics.drawable.Drawable.setLayoutDirection(long)", "android.graphics.drawable.Drawable.onLevelChange(long)", "android.graphics.drawable.Drawable.setColorFilter(android.graphics.ColorFilter)", "android.graphics.drawable.Drawable.copyBounds(android.graphics.Rect)", "android.graphics.drawable.Drawable.setHotspot(long,long)", "android.graphics.drawable.Drawable.jumpToCurrentState()", "android.graphics.drawable.Drawable.setColorFilter(android.graphics.PorterDuff.Mode,long)", "android.graphics.drawable.Drawable.getAlpha()", "android.graphics.drawable.Drawable.getChangingConfigurations()", "android.graphics.drawable.Drawable.getOpacity()", "android.graphics.drawable.Drawable.isAutoMirrored()", "android.graphics.drawable.Drawable.setAutoMirrored(long)", "android.graphics.drawable.Drawable.scheduleSelf(long,java.lang.Runnable)", "android.graphics.drawable.Drawable.unscheduleSelf(java.lang.Runnable)", "android.graphics.drawable.Drawable.clearColorFilter()", "android.graphics.drawable.Drawable.getColorFilter()", "android.graphics.drawable.Drawable.getCurrent()", "android.graphics.drawable.Drawable.getTransparentRegion()", "android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect)", "android.graphics.drawable.Drawable.setChangingConfigurations(long)", "android.graphics.drawable.Drawable.inflate(android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.content.res.Resources)", "android.graphics.drawable.Drawable.setHotspotBounds(long,long,long,long)", "android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList)", "android.graphics.drawable.Drawable.applyTheme(android.content.res.Resources.Theme)", "android.graphics.drawable.Drawable.inflate(android.content.res.Resources.Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.content.res.Resources)", "android.graphics.drawable.Drawable.setTintMode(android.graphics.PorterDuff.Mode)", "android.graphics.drawable.Drawable.canApplyTheme()", "android.graphics.drawable.Drawable.setTint(long)", "android.graphics.drawable.Drawable.getLayoutDirection()", "android.graphics.drawable.Drawable.setDither(long)", "android.graphics.drawable.Drawable.getDirtyBounds()", "android.graphics.drawable.Drawable.getOutline(android.graphics.Outline)", "android.graphics.drawable.Drawable.createFromStream(java.lang.String,java.io.InputStream)", "android.view.ViewGroup.LayoutParams.<init>(long,long)", "android.view.ViewGroup.LayoutParams.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.ProgressBar.<init>(android.content.Context)", "android.widget.ProgressBar.setIndeterminate(long)", "android.widget.ProgressBar.setVisibility(long)", "android.widget.ProgressBar.getMeasuredWidth()", "android.widget.ProgressBar.getMeasuredHeight()", "android.widget.ProgressBar.layout(long,long,long,long)", "android.widget.ProgressBar.measure(long,long)", "android.widget.ProgressBar.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ProgressBar.setFocusable(long)", "android.widget.ProgressBar.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ProgressBar.getContext()", "android.widget.ProgressBar.setIndeterminateDrawable(android.graphics.drawable.Drawable)", "android.widget.ProgressBar.setProgressDrawable(android.graphics.drawable.Drawable)", "android.widget.ProgressBar.setIndeterminateTintList(android.content.res.ColorStateList)", "android.widget.ProgressBar.setProgressBackgroundTintList(android.content.res.ColorStateList)", "android.widget.ProgressBar.setProgress(long)", "android.widget.ProgressBar.getProgressDrawable()", "android.widget.ProgressBar.setMax(long)", "android.widget.ProgressBar.setProgress(long,long)", "android.widget.ProgressBar.getVisibility()", "android.widget.ProgressBar.getProgress()", "android.widget.ProgressBar.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.ProgressBar.onAttachedToWindow()", "android.widget.ProgressBar.onDetachedFromWindow()", "android.widget.ProgressBar.onMeasure(long,long)", "android.widget.ProgressBar.onSizeChanged(long,long,long,long)", "android.widget.ProgressBar.onVisibilityChanged(long,android.view.View)", "android.widget.ProgressBar.onWindowVisibilityChanged(long)", "android.view.View.MeasureSpec.getMode(long)", "android.view.View.MeasureSpec.getSize(long)", "android.view.View.MeasureSpec.makeMeasureSpec(long,long)", "android.graphics.Color.parseColor(java.lang.String)", "android.graphics.Color.alpha(long)", "android.graphics.Color.red(long)", "android.graphics.Color.green(long)", "android.graphics.Color.blue(long)", "android.graphics.Color.argb(long,long,long,long)", "android.graphics.Color.colorToHSV(long,long)", "android.graphics.Color.rgb(long,long,long)", "android.graphics.Color.HSVToColor(long)", "android.widget.LinearLayout.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.LinearLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.LinearLayout.<init>(android.content.Context)", "android.widget.LinearLayout.setGravity(long)", "android.widget.LinearLayout.setOrientation(long)", "android.widget.LinearLayout.addView(android.view.View)", "android.widget.LinearLayout.getContext()", "android.widget.LinearLayout.getResources()", "android.widget.LinearLayout.removeAllViews()", "android.widget.LinearLayout.setOnClickListener(android.view.View.OnClickListener)", "android.widget.LinearLayout.onAttachedToWindow()", "android.widget.LinearLayout.onDetachedFromWindow()", "android.widget.LinearLayout.performClick()", "android.widget.LinearLayout.getChildCount()", "android.widget.LinearLayout.getChildAt(long)", "android.widget.LinearLayout.onCreateDrawableState(long)", "android.widget.LinearLayout.onLayout(long,long,long,long,long)", "android.widget.LinearLayout.onMeasure(long,long)", "android.widget.LinearLayout.getHeight()", "android.widget.LinearLayout.jumpDrawablesToCurrentState()", "android.widget.LinearLayout.getLayoutParams()", "android.widget.LinearLayout.onFinishInflate()", "android.widget.LinearLayout.findViewById(long)", "android.widget.LinearLayout.getMeasuredWidth()", "android.widget.LinearLayout.addView(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.widget.LinearLayout.setContentDescription(java.lang.CharSequence)", "android.widget.LinearLayout.removeViewAt(long)", "android.widget.LinearLayout.getWidth()", "android.widget.LinearLayout.draw(android.graphics.Canvas)", "android.widget.LinearLayout.onRtlPropertiesChanged(long)", "android.widget.LinearLayout.setClickable(long)", "android.widget.LinearLayout.addView(long,android.view.View)", "android.widget.LinearLayout.setVisibility(long)", "android.widget.LinearLayout.drawableStateChanged()", "android.widget.LinearLayout.invalidate()", "android.widget.LinearLayout.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.widget.LinearLayout.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.widget.LinearLayout.setSelected(long)", "android.widget.LinearLayout.removeView(android.view.View)", "android.widget.LinearLayout.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.LinearLayout.dispatchProvideAutofillStructure(long,android.view.ViewStructure)", "android.widget.LinearLayout.dispatchRestoreInstanceState(android.util.SparseArray)", "android.widget.LinearLayout.onRestoreInstanceState(android.os.Parcelable)", "android.widget.LinearLayout.onSaveInstanceState()", "android.widget.LinearLayout.setEnabled(long)", "android.widget.LinearLayout.focusSearch(long,android.view.View)", "android.widget.LinearLayout.addFocusables(long,long,java.util.ArrayList)", "android.widget.LinearLayout.onRequestFocusInDescendants(android.graphics.Rect,long)", "android.widget.LinearLayout.requestChildFocus(android.view.View,android.view.View)", "android.widget.LinearLayout.getVisibility()", "android.widget.LinearLayout.verifyDrawable(android.graphics.drawable.Drawable)", "android.widget.LinearLayout.dispatchKeyEvent(android.view.KeyEvent)", "android.widget.LinearLayout.setId(long)", "android.widget.LinearLayout.getParent()", "android.widget.LinearLayout.measure(long,long)", "android.widget.LinearLayout.getMinimumHeight()", "android.widget.LinearLayout.fitSystemWindows(android.graphics.Rect)", "android.widget.LinearLayout.dispatchFinishTemporaryDetach()", "android.widget.LinearLayout.dispatchStartTemporaryDetach()", "android.widget.LinearLayout.onRequestSendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.widget.LinearLayout.onTouchEvent(android.view.MotionEvent)", "android.widget.LinearLayout.setPadding(long,long,long,long)", "android.widget.LinearLayout.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.LinearLayout.setLayoutTransition(android.animation.LayoutTransition)", "android.widget.LinearLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.LinearLayout.setClipToPadding(long)", "android.widget.LinearLayout.setClipChildren(long)", "android.widget.LinearLayout.findViewWithTag(java.lang.Object)", "android.widget.LinearLayout.onInterceptTouchEvent(android.view.MotionEvent)", "android.widget.LinearLayout.setOnTouchListener(android.view.View.OnTouchListener)", "android.widget.LinearLayout.setBackgroundColor(long)", "android.widget.LinearLayout.getBackground()", "android.widget.LinearLayout.removeViews(long,long)", "android.widget.LinearLayout.getViewTreeObserver()", "android.widget.LinearLayout.computeScroll()", "android.widget.LinearLayout.dispatchTouchEvent(android.view.MotionEvent)", "android.widget.LinearLayout.setDividerDrawable(android.graphics.drawable.Drawable)", "android.widget.LinearLayout.setShowDividers(long)", "android.widget.LinearLayout.removeAllViewsInLayout()", "android.widget.LinearLayout.LayoutParams.<init>(long,long)", "android.widget.LinearLayout.LayoutParams.<init>(android.view.ViewGroup.LayoutParams)", "android.widget.LinearLayout.LayoutParams.setMargins(long,long,long,long)", "android.widget.LinearLayout.LayoutParams.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.LinearLayout.LayoutParams.<init>(android.view.ViewGroup.MarginLayoutParams)", "android.widget.LinearLayout.LayoutParams.<init>(android.widget.LinearLayout.LayoutParams)", "android.widget.LinearLayout.LayoutParams.<init>(long,long,long)", "android.widget.LinearLayout.LayoutParams.setMarginEnd(long)", "android.widget.LinearLayout.LayoutParams.setMarginStart(long)", "android.widget.CompoundButton.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.CompoundButton.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.CompoundButton.setButtonDrawable(android.graphics.drawable.Drawable)", "android.widget.CompoundButton.setEnabled(long)", "android.widget.CompoundButton.setChecked(long)", "android.widget.CompoundButton.setContentDescription(java.lang.CharSequence)", "android.widget.CompoundButton.performClick()", "android.widget.CompoundButton.<init>(android.content.Context)", "android.widget.CompoundButton.toggle()", "android.widget.CompoundButton.refreshDrawableState()", "android.widget.CompoundButton.getButtonDrawable()", "android.widget.CompoundButton.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)", "android.widget.CompoundButton.getVisibility()", "android.widget.CompoundButton.setVisibility(long)", "android.widget.CompoundButton.getDrawableState()", "android.widget.CompoundButton.getContext()", "android.widget.CompoundButton.setButtonTintList(android.content.res.ColorStateList)", "android.widget.CompoundButton.setButtonTintMode(android.graphics.PorterDuff.Mode)", "android.widget.CompoundButton.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.CompoundButton.isChecked()", "android.widget.CompoundButton.draw(android.graphics.Canvas)", "android.widget.CompoundButton.drawableHotspotChanged(long,long)", "android.widget.CompoundButton.drawableStateChanged()", "android.widget.CompoundButton.getCompoundPaddingLeft()", "android.widget.CompoundButton.getText()", "android.widget.CompoundButton.getCompoundPaddingRight()", "android.widget.CompoundButton.jumpDrawablesToCurrentState()", "android.widget.CompoundButton.onCreateDrawableState(long)", "android.widget.CompoundButton.onDraw(android.graphics.Canvas)", "android.widget.CompoundButton.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.widget.CompoundButton.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.widget.CompoundButton.onLayout(long,long,long,long,long)", "android.widget.CompoundButton.onMeasure(long,long)", "android.widget.CompoundButton.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.widget.CompoundButton.onTouchEvent(android.view.MotionEvent)", "android.widget.CompoundButton.isEnabled()", "android.widget.CompoundButton.verifyDrawable(android.graphics.drawable.Drawable)", "android.widget.CompoundButton.getId()", "android.widget.CompoundButton.getTag()", "android.widget.CompoundButton.setClickable(long)", "android.widget.CompoundButton.sendAccessibilityEvent(long)", "android.widget.CompoundButton.setTag(java.lang.Object,long)", "android.widget.CompoundButton.getTag(long)", "android.widget.CompoundButton.setOnClickListener(android.view.View.OnClickListener)", "android.view.View.OnClickListener.onClick(android.view.View)", "android.widget.PopupWindow.dismiss()", "android.widget.PopupWindow.<init>(long,long,android.view.View)", "android.widget.PopupWindow.setOutsideTouchable(long)", "android.widget.PopupWindow.showAtLocation(long,long,long,android.view.View)", "android.widget.PopupWindow.setWindowLayoutType(long)", "android.widget.PopupWindow.setOverlapAnchor(long)", "android.widget.PopupWindow.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.PopupWindow.setContentView(android.view.View)", "android.widget.PopupWindow.setWidth(long)", "android.widget.PopupWindow.setHeight(long)", "android.widget.PopupWindow.setEnterTransition(android.transition.Transition)", "android.widget.PopupWindow.setExitTransition(android.transition.Transition)", "android.widget.PopupWindow.setAnimationStyle(long)", "android.widget.PopupWindow.isShowing()", "android.widget.PopupWindow.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.PopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.PopupWindow.showAsDropDown(long,long,android.view.View)", "android.widget.PopupWindow.showAsDropDown(long,long,long,android.view.View)", "android.widget.PopupWindow.update(long,long,long,long,android.view.View)", "android.widget.PopupWindow.getBackground()", "android.widget.PopupWindow.setInputMethodMode(long)", "android.widget.PopupWindow.getMaxAvailableHeight(long,android.view.View)", "android.widget.PopupWindow.setOnDismissListener(android.widget.PopupWindow.OnDismissListener)", "android.widget.PopupWindow.getInputMethodMode()", "android.widget.PopupWindow.setTouchInterceptor(android.view.View.OnTouchListener)", "android.widget.PopupWindow.getContentView()", "android.widget.PopupWindow.setFocusable(long)", "android.widget.PopupWindow.getWidth()", "android.widget.PopupWindow.getHeight()", "android.view.Display.getHeight()", "android.view.Display.getWidth()", "android.view.Display.getRealSize(android.graphics.Point)", "android.view.Display.getRefreshRate()", "android.view.Display.getMetrics(android.util.DisplayMetrics)", "android.view.Display.getRealMetrics(android.util.DisplayMetrics)", "android.view.Display.getSize(android.graphics.Point)", "android.view.Display.getDisplayId()", "android.view.Display.getState()", "android.view.Display.getRotation()", "java.io.Writer.<init>()", "java.io.Writer.close()", "java.io.Writer.flush()", "java.io.Writer.write(long)", "java.io.Writer.write(long,long,java.lang.String)", "java.io.Writer.write(long,long,long)", "java.io.Writer.append(java.lang.CharSequence)", "java.io.Writer.append(long)", "android.graphics.PorterDuff.Mode.hashCode()", "android.graphics.PorterDuff.Mode.valueOf(java.lang.String)", "java.util.Objects.equals(java.lang.Object,java.lang.Object)", "java.util.Objects.hash([Ljava.lang.Object)", "java.util.Objects.hashCode(java.lang.Object)", "java.util.ConcurrentModificationException.<init>()", "android.view.View.AccessibilityDelegate.<init>()", "android.view.View.AccessibilityDelegate.getAccessibilityNodeProvider(android.view.View)", "android.view.View.AccessibilityDelegate.sendAccessibilityEvent(long,android.view.View)", "android.view.View.AccessibilityDelegate.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,android.view.View)", "android.view.View.AccessibilityDelegate.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.view.View.AccessibilityDelegate.performAccessibilityAction(android.os.Bundle,long,android.view.View)", "android.view.View.AccessibilityDelegate.onRequestSendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View,android.view.ViewGroup)", "android.view.View.AccessibilityDelegate.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.view.View.AccessibilityDelegate.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.view.View.AccessibilityDelegate.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.view.PointerIcon.getSystemIcon(long,android.content.Context)", "java.util.concurrent.ScheduledThreadPoolExecutor.<init>(java.util.concurrent.RejectedExecutionHandler,java.util.concurrent.ThreadFactory,long)", "java.util.concurrent.ScheduledThreadPoolExecutor.setMaximumPoolSize(long)", "java.util.concurrent.ScheduledThreadPoolExecutor.<init>(java.util.concurrent.ThreadFactory,long)", "java.util.concurrent.ScheduledThreadPoolExecutor.execute(java.lang.Runnable)", "java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledThreadPoolExecutor.<init>(long)", "java.io.InvalidObjectException.<init>(java.lang.String)", "java.io.InvalidObjectException.initCause(java.lang.Throwable)", "android.content.OperationApplicationException.<init>(java.lang.String)", "android.content.OperationApplicationException.<init>(long,java.lang.String)", "android.content.OperationApplicationException.<init>(java.lang.Throwable)", "android.content.OperationApplicationException.getNumSuccessfulYieldPoints()", "android.content.OperationApplicationException.getMessage()", "java.io.FileNotFoundException.<init>(java.lang.String)", "java.io.FileNotFoundException.getMessage()", "java.io.FileNotFoundException.<init>()", "java.io.FileNotFoundException.getLocalizedMessage()", "android.content.pm.ApplicationInfo.<init>()", "android.content.pm.ApplicationInfo.loadXmlMetaData(java.lang.String,android.content.pm.PackageManager)", "android.content.pm.ApplicationInfo.loadLabel(android.content.pm.PackageManager)", "android.content.pm.ApplicationInfo.loadIcon(android.content.pm.PackageManager)", "java.util.concurrent.locks.ReentrantReadWriteLock.<init>(long)", "java.util.concurrent.locks.ReentrantReadWriteLock.<init>()", "java.util.concurrent.locks.ReentrantReadWriteLock.writeLock()", "java.util.concurrent.locks.ReentrantReadWriteLock.readLock()", "java.util.concurrent.locks.ReadWriteLock.readLock()", "java.util.concurrent.locks.ReadWriteLock.writeLock()", "java.util.concurrent.ConcurrentLinkedQueue.<init>()", "java.util.concurrent.ConcurrentLinkedQueue.poll()", "java.util.concurrent.ConcurrentLinkedQueue.add(java.lang.Object)", "java.util.concurrent.ConcurrentLinkedQueue.contains(java.lang.Object)", "java.util.concurrent.ConcurrentLinkedQueue.offer(java.lang.Object)", "java.util.concurrent.ConcurrentLinkedQueue.clear()", "java.util.concurrent.ConcurrentLinkedQueue.addAll(java.util.Collection)", "java.util.concurrent.ConcurrentLinkedQueue.peek()", "java.util.concurrent.ConcurrentLinkedQueue.size()", "java.util.concurrent.SynchronousQueue.<init>()", "java.util.concurrent.ThreadPoolExecutor.DiscardPolicy.<init>()", "android.app.AlarmManager.setInexactRepeating(android.app.PendingIntent,long,long,long)", "android.app.AlarmManager.cancel(android.app.PendingIntent)", "android.app.AlarmManager.getNextAlarmClock()", "android.app.AlarmManager.setTime(long)", "android.app.AlarmManager.cancel(android.app.AlarmManager.OnAlarmListener)", "android.app.AlarmManager.set(android.os.WorkSource,android.app.PendingIntent,long,long,long,long)", "android.app.AlarmManager.set(android.os.WorkSource,android.os.Handler,android.app.AlarmManager.OnAlarmListener,long,long,long,long)", "android.app.AlarmManager.setExactAndAllowWhileIdle(android.app.PendingIntent,long,long)", "android.app.AlarmManager.setAndAllowWhileIdle(android.app.PendingIntent,long,long)", "android.app.AlarmManager.setTimeZone(java.lang.String)", "android.app.AlarmManager.set(android.app.PendingIntent,long,long)", "android.app.AlarmManager.setWindow(android.app.PendingIntent,long,long,long)", "javax.net.ssl.SSLSessionBindingEvent.<init>(java.lang.String,javax.net.ssl.SSLSession)", "javax.net.ssl.SSLSessionBindingListener.valueUnbound(javax.net.ssl.SSLSessionBindingEvent)", "javax.net.ssl.SSLSessionBindingListener.valueBound(javax.net.ssl.SSLSessionBindingEvent)", "java.security.interfaces.ECKey.getParams()", "javax.net.ssl.HandshakeCompletedEvent.<init>(javax.net.ssl.SSLSession,javax.net.ssl.SSLSocket)", "javax.net.ssl.HandshakeCompletedListener.handshakeCompleted(javax.net.ssl.HandshakeCompletedEvent)", "java.util.function.BiFunction.apply(java.lang.Object,java.lang.Object)", "javax.crypto.BadPaddingException.initCause(java.lang.Throwable)", "javax.crypto.BadPaddingException.<init>()", "javax.crypto.BadPaddingException.getMessage()", "javax.crypto.BadPaddingException.getCause()", "javax.crypto.spec.PSource.getAlgorithm()", "java.io.ObjectInputStream.defaultReadObject()", "java.io.ObjectInputStream.readObject()", "java.io.ObjectInputStream.<init>(java.io.InputStream)", "java.io.ObjectInputStream.close()", "java.io.ObjectInputStream.readLong()", "java.io.ObjectInputStream.readInt()", "java.io.ObjectInputStream.readDouble()", "java.io.ObjectOutputStream.defaultWriteObject()", "java.io.ObjectOutputStream.writeObject(java.lang.Object)", "java.io.ObjectOutputStream.<init>(java.io.OutputStream)", "java.io.ObjectOutputStream.close()", "java.io.ObjectOutputStream.flush()", "java.io.ObjectOutputStream.writeLong(long)", "java.io.ObjectOutputStream.writeInt(long)", "java.io.ObjectOutputStream.writeDouble(long)", "java.io.ObjectOutputStream.write(long)", "java.security.interfaces.RSAKey.getModulus()", "java.security.ProviderException.<init>(java.lang.Throwable,java.lang.String)", "android.content.pm.PackageInfo.<init>()", "android.app.AlertDialog.Builder.<init>(android.content.Context)", "android.app.AlertDialog.Builder.setView(android.view.View)", "android.app.AlertDialog.Builder.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.create()", "android.app.AlertDialog.Builder.<init>(long,android.content.Context)", "android.app.AlertDialog.Builder.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.AlertDialog.Builder.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setTitle(long)", "android.app.AlertDialog.Builder.setMessage(long)", "android.app.AlertDialog.Builder.setNeutralButton(android.content.DialogInterface.OnClickListener,long)", "android.app.AlertDialog.Builder.setCancelable(long)", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,long)", "android.app.AlertDialog.Builder.setNegativeButton(android.content.DialogInterface.OnClickListener,long)", "android.app.AlertDialog.Builder.getContext()", "android.app.AlertDialog.Builder.setIconAttribute(long)", "android.app.AlertDialog.Builder.setInverseBackgroundForced(long)", "android.app.AlertDialog.Builder.setAdapter(android.content.DialogInterface.OnClickListener,android.widget.ListAdapter)", "android.app.AlertDialog.Builder.show()", "android.app.AlertDialog.Builder.setIcon(android.graphics.drawable.Drawable)", "android.app.AlertDialog.Builder.setNegativeButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setOnDismissListener(android.content.DialogInterface.OnDismissListener)", "android.app.AlertDialog.Builder.setNeutralButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "android.app.AlertDialog.Builder.setSingleChoiceItems(android.content.DialogInterface.OnClickListener,long,[Ljava.lang.CharSequence)", "android.app.AlertDialog.Builder.setItems(android.content.DialogInterface.OnClickListener,[Ljava.lang.CharSequence)", "android.app.AlertDialog.Builder.setIcon(long)", "android.app.NotificationChannel.<init>(long,java.lang.CharSequence,java.lang.String)", "android.app.NotificationChannel.getName()", "android.app.NotificationChannel.setName(java.lang.CharSequence)", "android.app.NotificationChannel.getGroup()", "android.app.NotificationChannel.getId()", "android.app.NotificationChannel.setGroup(java.lang.String)", "android.app.NotificationChannel.getImportance()", "android.app.NotificationChannel.setSound(android.media.AudioAttributes,android.net.Uri)", "android.app.NotificationChannel.enableVibration(long)", "android.app.NotificationChannel.setImportance(long)", "android.app.Dialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.Dialog.setOnDismissListener(android.content.DialogInterface.OnDismissListener)", "android.app.Dialog.isShowing()", "android.app.Dialog.dismiss()", "android.app.Dialog.setContentView(android.view.View)", "android.app.Dialog.setOwnerActivity(android.app.Activity)", "android.app.Dialog.setCancelable(long)", "android.app.Dialog.onRestoreInstanceState(android.os.Bundle)", "android.app.Dialog.<init>(long,android.content.Context)", "android.app.Dialog.getContext()", "android.app.Dialog.onSaveInstanceState()", "android.app.Dialog.show()", "android.app.Dialog.hide()", "android.app.Dialog.getWindow()", "android.app.Dialog.requestWindowFeature(long)", "android.app.Dialog.setCanceledOnTouchOutside(long)", "android.app.Dialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "android.app.Dialog.onCreate(android.os.Bundle)", "android.app.Dialog.onStop()", "android.app.Dialog.setTitle(long)", "android.app.Dialog.setTitle(java.lang.CharSequence)", "android.app.Dialog.setOnShowListener(android.content.DialogInterface.OnShowListener)", "android.app.Dialog.findViewById(long)", "android.app.Dialog.setDismissMessage(android.os.Message)", "android.app.Notification.BigTextStyle.<init>()", "android.app.Notification.BigTextStyle.bigText(java.lang.CharSequence)", "android.app.Notification.BigTextStyle.<init>(android.app.Notification.Builder)", "android.app.Notification.BigTextStyle.setBigContentTitle(java.lang.CharSequence)", "java.util.concurrent.locks.Condition.signalAll()", "java.util.concurrent.locks.Condition.await()", "java.util.concurrent.locks.Condition.awaitNanos(long)", "java.util.concurrent.locks.Condition.signal()", "java.util.concurrent.locks.Condition.await(java.util.concurrent.TimeUnit,long)", "java.io.StringWriter.<init>()", "java.io.StringWriter.toString()", "java.io.StringWriter.append(java.lang.CharSequence)", "java.io.StringWriter.append(long)", "java.io.StringWriter.write(java.lang.String)", "java.text.MessageFormat.format([Ljava.lang.Object,java.lang.String)", "android.net.ConnectivityManager.getActiveNetworkInfo()", "android.net.ConnectivityManager.isActiveNetworkMetered()", "android.net.ConnectivityManager.getNetworkInfo(long)", "android.net.ConnectivityManager.addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)", "android.net.ConnectivityManager.removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)", "android.net.ConnectivityManager.isDefaultNetworkActive()", "android.net.ConnectivityManager.registerNetworkCallback(android.net.ConnectivityManager.NetworkCallback,android.net.NetworkRequest)", "android.net.ConnectivityManager.getNetworkInfo(android.net.Network)", "android.net.ConnectivityManager.reportNetworkConnectivity(long,android.net.Network)", "android.net.ConnectivityManager.unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)", "android.net.ConnectivityManager.requestNetwork(android.net.ConnectivityManager.NetworkCallback,android.net.NetworkRequest)", "android.net.ConnectivityManager.getNetworkCapabilities(android.net.Network)", "android.net.ConnectivityManager.getLinkProperties(android.net.Network)", "android.net.ConnectivityManager.getActiveNetwork()", "android.net.ConnectivityManager.getAllNetworks()", "android.net.ConnectivityManager.getAllNetworkInfo()", "android.net.ConnectivityManager.startTethering(android.net.ConnectivityManager.OnStartTetheringCallback,long,long)", "android.net.ConnectivityManager.stopTethering(long)", "android.net.ConnectivityManager.requestNetwork(long,android.net.ConnectivityManager.NetworkCallback,android.net.NetworkRequest)", "android.net.ConnectivityManager.getBackgroundDataSetting()", "android.net.NetworkInfo.isConnectedOrConnecting()", "android.net.NetworkInfo.getType()", "android.net.NetworkInfo.isConnected()", "android.net.NetworkInfo.getState()", "android.net.NetworkInfo.getExtraInfo()", "android.net.NetworkInfo.getTypeName()", "android.net.NetworkInfo.getSubtypeName()", "android.net.NetworkInfo.isRoaming()", "android.net.NetworkInfo.getSubtype()", "android.net.NetworkInfo.isAvailable()", "android.net.NetworkInfo.getDetailedState()", "android.os.PatternMatcher.<init>(long,java.lang.String)", "android.os.PatternMatcher.match(java.lang.String)", "java.net.URL.<init>(java.lang.String)", "java.net.URL.getProtocol()", "java.net.URL.openConnection()", "java.net.URL.getHost()", "java.net.URL.openStream()", "java.net.URL.getPath()", "java.net.URL.toString()", "java.net.URL.getPort()", "java.net.URL.<init>(java.lang.String,long,java.lang.String,java.lang.String)", "java.net.URL.openConnection(java.net.Proxy)", "java.net.HttpURLConnection.setDoOutput(long)", "java.net.HttpURLConnection.setInstanceFollowRedirects(long)", "java.net.HttpURLConnection.setChunkedStreamingMode(long)", "java.net.HttpURLConnection.setConnectTimeout(long)", "java.net.HttpURLConnection.setReadTimeout(long)", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.getOutputStream()", "java.net.HttpURLConnection.getHeaderField(java.lang.String)", "java.net.HttpURLConnection.disconnect()", "java.net.HttpURLConnection.getResponseCode()", "java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.addRequestProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.getFollowRedirects()", "java.net.HttpURLConnection.setUseCaches(long)", "java.net.HttpURLConnection.setDoInput(long)", "java.net.HttpURLConnection.setRequestMethod(java.lang.String)", "java.net.HttpURLConnection.getHeaderFields()", "java.net.HttpURLConnection.getContentLength()", "java.net.HttpURLConnection.setDefaultUseCaches(long)", "java.net.HttpURLConnection.connect()", "java.net.HttpURLConnection.setFixedLengthStreamingMode(long)", "java.net.HttpURLConnection.getContentEncoding()", "java.net.HttpURLConnection.getURL()", "java.net.HttpURLConnection.getResponseMessage()", "java.net.HttpURLConnection.getContentType()", "java.net.HttpURLConnection.getRequestProperties()", "java.net.HttpURLConnection.getRequestProperty(java.lang.String)", "java.net.HttpURLConnection.setFixedLengthStreamingMode(long)", "java.net.HttpURLConnection.getHeaderFieldInt(long,java.lang.String)", "java.net.HttpURLConnection.getHeaderFieldKey(long)", "java.net.HttpURLConnection.getHeaderField(long)", "java.net.HttpURLConnection.getContentLengthLong()", "java.net.HttpURLConnection.getAllowUserInteraction()", "java.net.HttpURLConnection.getConnectTimeout()", "java.net.HttpURLConnection.getContent()", "java.net.HttpURLConnection.getContent([Ljava.lang.Class)", "java.net.HttpURLConnection.getDate()", "java.net.HttpURLConnection.getDefaultUseCaches()", "java.net.HttpURLConnection.getDoInput()", "java.net.HttpURLConnection.getDoOutput()", "java.net.HttpURLConnection.getExpiration()", "java.net.HttpURLConnection.getHeaderFieldDate(long,java.lang.String)", "java.net.HttpURLConnection.getIfModifiedSince()", "java.net.HttpURLConnection.getInstanceFollowRedirects()", "java.net.HttpURLConnection.getLastModified()", "java.net.HttpURLConnection.getPermission()", "java.net.HttpURLConnection.getReadTimeout()", "java.net.HttpURLConnection.getRequestMethod()", "java.net.HttpURLConnection.getUseCaches()", "java.net.HttpURLConnection.setAllowUserInteraction(long)", "java.net.HttpURLConnection.setIfModifiedSince(long)", "java.net.HttpURLConnection.toString()", "java.net.HttpURLConnection.usingProxy()", "java.net.HttpURLConnection.<init>(java.net.URL)", "java.util.zip.GZIPOutputStream.<init>(java.io.OutputStream)", "java.util.zip.GZIPOutputStream.write(long)", "java.util.zip.GZIPOutputStream.close()", "java.util.zip.GZIPOutputStream.write(long,long,long)", "java.util.zip.GZIPOutputStream.finish()", "java.util.zip.GZIPOutputStream.<init>(long,java.io.OutputStream)", "java.net.HttpCookie.parse(java.lang.String)", "java.net.HttpCookie.getName()", "java.net.HttpCookie.getValue()", "java.util.concurrent.ScheduledFuture.cancel(long)", "java.util.concurrent.ScheduledFuture.isDone()", "java.util.concurrent.ScheduledFuture.compareTo(java.lang.Object)", "java.util.concurrent.ScheduledFuture.getDelay(java.util.concurrent.TimeUnit)", "java.util.concurrent.ScheduledFuture.get()", "android.os.Trace.beginSection(java.lang.String)", "android.os.Trace.endSection()", "android.view.animation.DecelerateInterpolator.<init>(long)", "android.view.animation.DecelerateInterpolator.<init>()", "android.view.animation.DecelerateInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.view.animation.AccelerateInterpolator.<init>(long)", "android.view.animation.AccelerateInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.view.animation.AccelerateInterpolator.<init>()", "java.util.concurrent.CopyOnWriteArrayList.<init>()", "java.util.concurrent.CopyOnWriteArrayList.iterator()", "java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)", "java.util.concurrent.CopyOnWriteArrayList.isEmpty()", "java.util.concurrent.CopyOnWriteArrayList.remove(java.lang.Object)", "java.util.concurrent.CopyOnWriteArrayList.<init>([Ljava.lang.Object)", "java.util.concurrent.CopyOnWriteArrayList.size()", "java.util.concurrent.CopyOnWriteArrayList.get(long)", "java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(java.lang.Object)", "android.view.animation.Animation.setAnimationListener(android.view.animation.Animation.AnimationListener)", "android.view.animation.Animation.start()", "android.view.animation.Animation.cancel()", "android.view.animation.Animation.setDuration(long)", "android.view.animation.Animation.reset()", "android.view.animation.Animation.setInterpolator(android.view.animation.Interpolator)", "android.view.animation.Animation.hasStarted()", "android.view.animation.Animation.hasEnded()", "android.view.animation.Animation.<init>()", "android.view.animation.Animation.setRepeatCount(long)", "android.view.animation.Animation.setRepeatMode(long)", "android.view.animation.Animation.setFillAfter(long)", "android.view.animation.AlphaAnimation.<init>(long,long)", "android.view.animation.AlphaAnimation.setInterpolator(android.view.animation.Interpolator)", "android.view.animation.AlphaAnimation.setDuration(long)", "android.view.animation.AlphaAnimation.setFillAfter(long)", "android.view.animation.ScaleAnimation.<init>(long,long,long,long,long,long,long,long)", "android.view.animation.ScaleAnimation.setInterpolator(android.view.animation.Interpolator)", "android.view.animation.ScaleAnimation.setDuration(long)", "android.animation.AnimatorInflater.loadAnimator(long,android.content.Context)", "android.animation.AnimatorInflater.loadStateListAnimator(long,android.content.Context)", "android.view.animation.AnimationUtils.loadAnimation(long,android.content.Context)", "android.view.animation.AnimationUtils.loadInterpolator(long,android.content.Context)", "android.view.animation.AnimationUtils.currentAnimationTimeMillis()", "android.animation.ValueAnimator.getValues()", "android.animation.ValueAnimator.ofInt(long)", "android.animation.ValueAnimator.getStartDelay()", "android.animation.ValueAnimator.getDuration()", "android.animation.ValueAnimator.getInterpolator()", "android.animation.ValueAnimator.getRepeatCount()", "android.animation.ValueAnimator.getRepeatMode()", "android.animation.ValueAnimator.setRepeatCount(long)", "android.animation.ValueAnimator.setRepeatMode(long)", "android.animation.ValueAnimator.isRunning()", "android.animation.ValueAnimator.cancel()", "android.animation.ValueAnimator.<init>()", "android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator)", "android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)", "android.animation.ValueAnimator.setDuration(long)", "android.animation.ValueAnimator.setIntValues(long)", "android.animation.ValueAnimator.start()", "android.animation.ValueAnimator.getAnimatedValue()", "android.animation.ValueAnimator.addListener(android.animation.Animator.AnimatorListener)", "android.animation.ValueAnimator.setFloatValues(long)", "android.animation.ValueAnimator.end()", "android.animation.ValueAnimator.getAnimatedFraction()", "android.animation.ValueAnimator.ofFloat(long)", "android.animation.ValueAnimator.setValues([Landroid.animation.PropertyValuesHolder)", "android.animation.ValueAnimator.setStartDelay(long)", "android.animation.ValueAnimator.ofObject([Ljava.lang.Object,android.animation.TypeEvaluator)", "android.animation.ValueAnimator.reverse()", "android.animation.ValueAnimator.isStarted()", "android.animation.ValueAnimator.getCurrentPlayTime()", "android.animation.ValueAnimator.setCurrentPlayTime(long)", "android.animation.ValueAnimator.setTarget(java.lang.Object)", "android.animation.PropertyValuesHolder.getPropertyName()", "android.animation.PropertyValuesHolder.ofKeyframe([Landroid.animation.Keyframe,java.lang.String)", "android.animation.PropertyValuesHolder.setEvaluator(android.animation.TypeEvaluator)", "android.animation.PropertyValuesHolder.ofObject([Ljava.lang.Object,android.animation.TypeEvaluator,java.lang.String)", "android.animation.PropertyValuesHolder.ofFloat(long,java.lang.String)", "android.animation.PropertyValuesHolder.ofInt(long,java.lang.String)", "android.animation.PropertyValuesHolder.ofInt(long,android.util.Property)", "android.animation.PropertyValuesHolder.ofKeyframe([Landroid.animation.Keyframe,android.util.Property)", "android.animation.AnimatorSet.getChildAnimations()", "android.animation.AnimatorSet.playTogether(java.util.Collection)", "android.animation.AnimatorSet.addListener(android.animation.Animator.AnimatorListener)", "android.animation.AnimatorSet.start()", "android.animation.AnimatorSet.<init>()", "android.animation.AnimatorSet.play(android.animation.Animator)", "android.animation.AnimatorSet.setInterpolator(android.animation.TimeInterpolator)", "android.animation.AnimatorSet.playSequentially([Landroid.animation.Animator)", "android.animation.AnimatorSet.isStarted()", "android.animation.AnimatorSet.isRunning()", "android.animation.AnimatorSet.end()", "android.animation.AnimatorSet.playTogether([Landroid.animation.Animator)", "android.animation.AnimatorSet.cancel()", "android.animation.AnimatorSet.setDuration(long)", "android.animation.AnimatorSet.setStartDelay(long)", "android.content.res.TypedArray.getString(long)", "android.content.res.TypedArray.getResourceId(long,long)", "android.content.res.TypedArray.recycle()", "android.content.res.TypedArray.hasValue(long)", "android.content.res.TypedArray.getInt(long,long)", "android.content.res.TypedArray.getBoolean(long,long)", "android.content.res.TypedArray.getFloat(long,long)", "android.content.res.TypedArray.getIndexCount()", "android.content.res.TypedArray.getIndex(long)", "android.content.res.TypedArray.getDimensionPixelOffset(long,long)", "android.content.res.TypedArray.getDimensionPixelSize(long,long)", "android.content.res.TypedArray.getLayoutDimension(long,long)", "android.content.res.TypedArray.getDrawable(long)", "android.content.res.TypedArray.getText(long)", "android.content.res.TypedArray.peekValue(long)", "android.content.res.TypedArray.getDimension(long,long)", "android.content.res.TypedArray.getColorStateList(long)", "android.content.res.TypedArray.getColor(long,long)", "android.content.res.TypedArray.getInteger(long,long)", "android.content.res.TypedArray.getPositionDescription()", "android.content.res.TypedArray.getTextArray(long)", "android.content.res.TypedArray.length()", "android.content.res.TypedArray.getValue(android.util.TypedValue,long)", "android.content.res.TypedArray.getResources()", "android.location.Location.<init>(java.lang.String)", "android.location.Location.getTime()", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "android.location.Location.hasSpeed()", "android.location.Location.getSpeed()", "android.location.Location.hasBearing()", "android.location.Location.getBearing()", "android.location.Location.hasAltitude()", "android.location.Location.getAltitude()", "android.location.Location.hasAccuracy()", "android.location.Location.getAccuracy()", "android.location.Location.getProvider()", "android.location.Location.setAccuracy(long)", "android.location.Location.setAltitude(long)", "android.location.Location.setLatitude(long)", "android.location.Location.setLongitude(long)", "android.location.Location.setSpeed(long)", "android.location.Location.setTime(long)", "android.location.Location.setElapsedRealtimeNanos(long)", "android.location.Location.getElapsedRealtimeNanos()", "android.location.Location.getExtras()", "android.location.Location.setVerticalAccuracyMeters(long)", "android.location.Location.setExtras(android.os.Bundle)", "android.location.Location.hasVerticalAccuracy()", "android.location.Location.getVerticalAccuracyMeters()", "android.location.Location.isFromMockProvider()", "android.location.Location.setProvider(java.lang.String)", "android.location.Location.distanceTo(android.location.Location)", "android.location.Location.<init>(android.location.Location)", "android.location.Location.setBearing(long)", "android.location.Location.removeBearing()", "android.location.Location.removeSpeed()", "android.location.Location.distanceBetween(long,long,long,long,long)", "android.location.Location.removeAltitude()", "android.transition.TransitionSet.<init>()", "android.transition.TransitionSet.addTransition(android.transition.Transition)", "android.transition.TransitionSet.setOrdering(long)", "android.transition.TransitionSet.getTransitionCount()", "android.transition.TransitionSet.getTransitionAt(long)", "android.transition.TransitionSet.getTargets()", "android.transition.TransitionManager.beginDelayedTransition(android.transition.Transition,android.view.ViewGroup)", "android.database.DatabaseUtils.appendEscapedSQLString(java.lang.String,java.lang.StringBuilder)", "android.database.DatabaseUtils.longForQuery([Ljava.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.DatabaseUtils.sqlEscapeString(java.lang.String)", "android.database.DatabaseUtils.queryNumEntries(java.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.DatabaseUtils.queryNumEntries([Ljava.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.DatabaseUtils.stringForQuery([Ljava.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.DatabaseUtils.cursorRowToContentValues(android.content.ContentValues,android.database.Cursor)", "android.database.MergeCursor.<init>([Landroid.database.Cursor)", "android.view.WindowManager.getDefaultDisplay()", "android.view.WindowManager.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.view.WindowManager.removeView(android.view.View)", "android.view.WindowManager.updateViewLayout(android.view.ViewGroup.LayoutParams,android.view.View)", "java.util.SortedSet.comparator()", "java.util.SortedSet.headSet(java.lang.Object)", "java.util.SortedSet.last()", "java.util.SortedSet.subSet(java.lang.Object,java.lang.Object)", "java.util.SortedSet.tailSet(java.lang.Object)", "java.util.SortedSet.first()", "java.util.SortedSet.add(java.lang.Object)", "java.util.SortedSet.iterator()", "java.util.SortedSet.isEmpty()", "java.util.SortedSet.size()", "java.util.SortedSet.addAll(java.util.Collection)", "java.util.SortedSet.contains(java.lang.Object)", "java.util.SortedSet.retainAll(java.util.Collection)", "android.database.CursorWindow.<init>(long)", "android.database.CursorWindow.setNumColumns(long)", "android.database.CursorWindow.allocRow()", "android.database.CursorWindow.setStartPosition(long)", "android.database.CursorWindow.putNull(long,long)", "android.database.CursorWindow.putString(long,long,java.lang.String)", "android.database.CursorWindow.putLong(long,long,long)", "android.database.CursorWindow.putBlob(long,long,long)", "android.database.CursorWindow.putDouble(long,long,long)", "android.database.CursorWindow.close()", "android.database.CursorWindow.freeLastRow()", "android.database.CursorWindow.getStartPosition()", "android.database.CursorWindow.acquireReference()", "android.database.CursorWindow.getNumRows()", "android.database.CursorWindow.getLong(long,long)", "android.database.CursorWindow.getBlob(long,long)", "android.database.CursorWindow.getInt(long,long)", "android.database.CursorWindow.getString(long,long)", "android.database.CursorWindow.isNull(long,long)", "android.database.CursorWindow.getFloat(long,long)", "android.database.CursorWindow.clear()", "android.database.CursorIndexOutOfBoundsException.<init>(long,long)", "android.database.CursorIndexOutOfBoundsException.<init>(java.lang.String)", "javax.net.ssl.ExtendedSSLSession.<init>()", "android.net.TrafficStats.getThreadStatsTag()", "android.net.TrafficStats.setThreadStatsTag(long)", "android.net.TrafficStats.clearThreadStatsTag()", "android.net.TrafficStats.clearThreadStatsUid()", "android.net.TrafficStats.setThreadStatsTagBackup()", "android.net.TrafficStats.setThreadStatsUid(long)", "android.net.TrafficStats.setThreadStatsTagRestore()", "android.net.TrafficStats.tagSocket(java.net.Socket)", "android.view.Window.addFlags(long)", "android.view.Window.peekDecorView()", "android.view.Window.getAttributes()", "android.view.Window.findViewById(long)", "android.view.Window.setFlags(long,long)", "android.view.Window.getCallback()", "android.view.Window.setCallback(android.view.Window.Callback)", "android.view.Window.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.view.Window.getDecorView()", "android.view.Window.setContentView(android.view.View)", "android.view.Window.requestFeature(long)", "android.view.Window.clearFlags(long)", "android.view.Window.setNavigationBarColor(long)", "android.view.Window.setStatusBarColor(long)", "android.view.Window.setAttributes(android.view.WindowManager.LayoutParams)", "android.view.Window.setSoftInputMode(long)", "android.view.Window.hasFeature(long)", "android.view.Window.setBackgroundDrawableResource(long)", "android.view.Window.setLayout(long,long)", "android.view.Window.getStatusBarColor()", "android.view.Window.setType(long)", "android.view.Window.setDimAmount(long)", "android.database.sqlite.SQLiteException.<init>(java.lang.String)", "android.database.sqlite.SQLiteException.getMessage()", "android.database.sqlite.SQLiteException.<init>(java.lang.Throwable,java.lang.String)", "android.database.sqlite.SQLiteException.getCause()", "android.database.sqlite.SQLiteException.<init>()", "android.database.sqlite.SQLiteException.toString()", "android.database.sqlite.SQLiteCursor.<init>(android.database.sqlite.SQLiteQuery,java.lang.String,android.database.sqlite.SQLiteCursorDriver)", "android.database.sqlite.SQLiteProgram.bindNull(long)", "android.database.sqlite.SQLiteProgram.bindDouble(long,long)", "android.database.sqlite.SQLiteProgram.bindLong(long,long)", "android.database.sqlite.SQLiteProgram.bindString(java.lang.String,long)", "android.database.sqlite.SQLiteProgram.bindBlob(long,long)", "android.database.sqlite.SQLiteProgram.close()", "android.database.sqlite.SQLiteStatement.executeInsert()", "android.database.sqlite.SQLiteStatement.executeUpdateDelete()", "android.database.sqlite.SQLiteStatement.clearBindings()", "android.database.sqlite.SQLiteStatement.bindLong(long,long)", "android.database.sqlite.SQLiteStatement.bindString(java.lang.String,long)", "android.database.sqlite.SQLiteStatement.execute()", "android.database.sqlite.SQLiteStatement.bindBlob(long,long)", "android.database.sqlite.SQLiteStatement.close()", "android.database.sqlite.SQLiteStatement.bindNull(long)", "android.database.sqlite.SQLiteStatement.simpleQueryForLong()", "android.database.sqlite.SQLiteStatement.simpleQueryForString()", "android.database.sqlite.SQLiteStatement.bindDouble(long,long)", "android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser)", "android.util.Xml.newPullParser()", "android.util.Xml.newSerializer()", "android.view.ViewGroup.MarginLayoutParams.<init>(long,long)", "android.view.ViewGroup.MarginLayoutParams.<init>(android.util.AttributeSet,android.content.Context)", "android.view.ViewGroup.MarginLayoutParams.<init>(android.view.ViewGroup.LayoutParams)", "android.view.ViewGroup.MarginLayoutParams.resolveLayoutDirection(long)", "android.view.ViewGroup.MarginLayoutParams.setMarginEnd(long)", "android.view.ViewGroup.MarginLayoutParams.getMarginEnd()", "android.view.ViewGroup.MarginLayoutParams.<init>(android.view.ViewGroup.MarginLayoutParams)", "android.view.ViewGroup.MarginLayoutParams.getMarginStart()", "android.view.ViewGroup.MarginLayoutParams.setMargins(long,long,long,long)", "android.view.animation.LinearInterpolator.<init>()", "android.util.Property.<init>(java.lang.String,java.lang.Class)", "android.util.Property.getName()", "android.util.Property.set(java.lang.Object,java.lang.Object)", "android.animation.ObjectAnimator.getPropertyName()", "android.animation.ObjectAnimator.ofFloat(long,java.lang.String,java.lang.Object)", "android.animation.ObjectAnimator.setDuration(long)", "android.animation.ObjectAnimator.ofFloat(long,android.util.Property,java.lang.Object)", "android.animation.ObjectAnimator.ofObject([Ljava.lang.Object,android.animation.TypeEvaluator,android.util.Property,java.lang.Object)", "android.animation.ObjectAnimator.setInterpolator(android.animation.TimeInterpolator)", "android.animation.ObjectAnimator.setEvaluator(android.animation.TypeEvaluator)", "android.animation.ObjectAnimator.<init>()", "android.animation.ObjectAnimator.setValues([Landroid.animation.PropertyValuesHolder)", "android.animation.ObjectAnimator.setPropertyName(java.lang.String)", "android.animation.ObjectAnimator.addListener(android.animation.Animator.AnimatorListener)", "android.animation.ObjectAnimator.ofObject(android.graphics.Path,android.animation.TypeConverter,android.util.Property,java.lang.Object)", "android.animation.ObjectAnimator.setRepeatCount(long)", "android.animation.ObjectAnimator.isStarted()", "android.animation.ObjectAnimator.end()", "android.animation.ObjectAnimator.cancel()", "android.animation.ObjectAnimator.setAutoCancel(long)", "android.animation.ObjectAnimator.start()", "android.animation.ObjectAnimator.ofPropertyValuesHolder([Landroid.animation.PropertyValuesHolder,java.lang.Object)", "android.animation.ObjectAnimator.ofInt(long,java.lang.String,java.lang.Object)", "android.animation.ObjectAnimator.setStartDelay(long)", "android.animation.ObjectAnimator.setFloatValues(long)", "android.view.animation.Interpolator.getInterpolation(long)", "android.view.ViewParent.getParent()", "android.view.ViewParent.requestDisallowInterceptTouchEvent(long)", "android.view.ViewParent.focusSearch(long,android.view.View)", "android.view.ViewParent.onNestedScrollAccepted(long,android.view.View,android.view.View)", "android.view.ViewParent.onNestedScroll(long,long,long,long,android.view.View)", "android.view.ViewParent.onNestedPreScroll(long,long,long,android.view.View)", "android.view.ViewParent.onStopNestedScroll(android.view.View)", "android.view.ViewParent.onNestedPreFling(long,long,android.view.View)", "android.view.ViewParent.onNestedFling(long,long,long,android.view.View)", "android.view.ViewParent.onStartNestedScroll(long,android.view.View,android.view.View)", "android.view.ViewParent.requestSendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,android.view.View)", "android.view.VelocityTracker.obtain()", "android.view.VelocityTracker.addMovement(android.view.MotionEvent)", "android.view.VelocityTracker.recycle()", "android.view.VelocityTracker.computeCurrentVelocity(long)", "android.view.VelocityTracker.getYVelocity(long)", "android.view.VelocityTracker.computeCurrentVelocity(long,long)", "android.view.VelocityTracker.clear()", "android.view.VelocityTracker.getXVelocity(long)", "android.view.VelocityTracker.getXVelocity()", "android.view.VelocityTracker.getYVelocity()", "android.view.ViewConfiguration.get(android.content.Context)", "android.view.ViewConfiguration.getScaledTouchSlop()", "android.view.ViewConfiguration.getScaledMaximumFlingVelocity()", "android.view.ViewConfiguration.getScaledHorizontalScrollFactor()", "android.view.ViewConfiguration.getScaledHoverSlop()", "android.view.ViewConfiguration.getScaledVerticalScrollFactor()", "android.view.ViewConfiguration.shouldShowMenuShortcutsWhenKeyboardPresent()", "android.view.ViewConfiguration.getScaledPagingTouchSlop()", "android.view.ViewConfiguration.getTapTimeout()", "android.view.ViewConfiguration.getScaledMinimumFlingVelocity()", "android.view.ViewConfiguration.hasPermanentMenuKey()", "android.view.ViewConfiguration.getLongPressTimeout()", "android.view.MotionEvent.getAction()", "android.view.MotionEvent.getActionMasked()", "android.view.MotionEvent.findPointerIndex(long)", "android.view.MotionEvent.getY(long)", "android.view.MotionEvent.getX()", "android.view.MotionEvent.getY()", "android.view.MotionEvent.getPointerId(long)", "android.view.MotionEvent.getActionIndex()", "android.view.MotionEvent.obtain(long,long,long,long,long,long)", "android.view.MotionEvent.recycle()", "android.view.MotionEvent.getX(long)", "android.view.MotionEvent.getEdgeFlags()", "android.view.MotionEvent.getSource()", "android.view.MotionEvent.getAxisValue(long)", "android.view.MotionEvent.obtain(android.view.MotionEvent)", "android.view.MotionEvent.offsetLocation(long,long)", "android.view.MotionEvent.getPointerCount()", "android.view.MotionEvent.obtainNoHistory(android.view.MotionEvent)", "android.view.MotionEvent.setLocation(long,long)", "android.view.MotionEvent.setAction(long)", "android.view.MotionEvent.getRawX()", "android.view.MotionEvent.getRawY()", "android.view.MotionEvent.getEventTime()", "android.view.MotionEvent.obtain(long,long,long,long,long,long,long,long,long,long,long,long)", "android.view.MotionEvent.getDevice()", "android.view.MotionEvent.getDeviceId()", "android.view.MotionEvent.getHistorySize()", "android.view.MotionEvent.getHistoricalEventTime(long)", "android.view.MotionEvent.getHistoricalX(long)", "android.view.MotionEvent.getHistoricalY(long)", "android.view.MotionEvent.getDownTime()", "android.view.MotionEvent.getMetaState()", "android.widget.OverScroller.<init>(android.content.Context)", "android.widget.OverScroller.fling(long,long,long,long,long,long,long,long)", "android.widget.OverScroller.computeScrollOffset()", "android.widget.OverScroller.getCurrY()", "android.widget.OverScroller.startScroll(long,long,long,long)", "android.widget.OverScroller.isFinished()", "android.widget.OverScroller.abortAnimation()", "android.widget.OverScroller.springBack(long,long,long,long,long,long)", "android.widget.OverScroller.fling(long,long,long,long,long,long,long,long,long,long)", "android.widget.OverScroller.getCurrX()", "android.widget.OverScroller.getCurrVelocity()", "android.widget.OverScroller.<init>(android.view.animation.Interpolator,android.content.Context)", "android.widget.OverScroller.getFinalX()", "android.widget.OverScroller.getFinalY()", "android.widget.OverScroller.startScroll(long,long,long,long,long)", "android.animation.StateListAnimator.<init>()", "android.animation.StateListAnimator.addState(android.animation.Animator,long)", "android.graphics.drawable.Drawable.ConstantState.newDrawable()", "android.graphics.drawable.Drawable.ConstantState.<init>()", "android.graphics.drawable.Drawable.ConstantState.canApplyTheme()", "android.graphics.drawable.Drawable.ConstantState.getChangingConfigurations()", "android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources)", "android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources.Theme,android.content.res.Resources)", "android.view.MenuItem.setCheckable(long)", "android.view.MenuItem.setChecked(long)", "android.view.MenuItem.getItemId()", "android.view.MenuItem.isChecked()", "android.view.MenuItem.setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)", "android.view.MenuItem.setContentDescription(java.lang.CharSequence)", "android.view.MenuItem.setVisible(long)", "android.view.MenuItem.setEnabled(long)", "android.view.MenuItem.setTitleCondensed(java.lang.CharSequence)", "android.view.MenuItem.setIcon(long)", "android.view.MenuItem.setShowAsAction(long)", "android.view.MenuItem.setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)", "android.view.MenuItem.setActionView(android.view.View)", "android.view.MenuItem.setActionView(long)", "android.view.MenuItem.setIconTintList(android.content.res.ColorStateList)", "android.view.MenuItem.setIconTintMode(android.graphics.PorterDuff.Mode)", "android.view.MenuItem.setNumericShortcut(long,long)", "android.view.MenuItem.setAlphabeticShortcut(long,long)", "android.view.MenuItem.setTooltipText(java.lang.CharSequence)", "android.view.MenuItem.hasSubMenu()", "android.view.MenuItem.getSubMenu()", "android.view.MenuItem.isEnabled()", "android.view.MenuItem.getActionView()", "android.view.MenuItem.expandActionView()", "android.view.MenuItem.setIcon(android.graphics.drawable.Drawable)", "android.view.MenuItem.setIntent(android.content.Intent)", "android.view.MenuItem.isActionViewExpanded()", "android.view.MenuItem.getGroupId()", "android.view.MenuItem.isVisible()", "android.view.MenuItem.getIcon()", "android.view.MenuItem.setTitle(java.lang.CharSequence)", "android.view.MenuItem.setTitle(long)", "android.view.MenuItem.collapseActionView()", "android.view.MenuItem.getTitle()", "android.content.res.ColorStateList.getDefaultColor()", "android.content.res.ColorStateList.getColorForState(long,long)", "android.content.res.ColorStateList.<init>(long,[[I)", "android.content.res.ColorStateList.isStateful()", "android.content.res.ColorStateList.valueOf(long)", "android.view.MenuInflater.inflate(android.view.Menu,long)", "android.view.MenuInflater.<init>(android.content.Context)", "android.graphics.drawable.GradientDrawable.<init>()", "android.graphics.drawable.GradientDrawable.setCornerRadius(long)", "android.graphics.drawable.GradientDrawable.setColor(long)", "android.graphics.drawable.GradientDrawable.setStroke(android.content.res.ColorStateList,long)", "android.graphics.drawable.GradientDrawable.setBounds(long,long,long,long)", "android.graphics.drawable.GradientDrawable.setColorFilter(android.graphics.ColorFilter)", "android.graphics.drawable.GradientDrawable.setShape(long)", "android.graphics.drawable.GradientDrawable.draw(android.graphics.Canvas)", "android.graphics.drawable.GradientDrawable.setStroke(long,long)", "android.graphics.drawable.GradientDrawable.setCornerRadii(long)", "android.graphics.drawable.GradientDrawable.setSize(long,long)", "android.graphics.drawable.GradientDrawable.<init>(long,android.graphics.drawable.GradientDrawable.Orientation)", "android.graphics.drawable.LayerDrawable.<init>([Landroid.graphics.drawable.Drawable)", "android.graphics.drawable.LayerDrawable.getDrawable(long)", "android.graphics.drawable.LayerDrawable.findDrawableByLayerId(long)", "android.graphics.drawable.LayerDrawable.getNumberOfLayers()", "android.graphics.drawable.LayerDrawable.getId(long)", "android.graphics.drawable.LayerDrawable.setId(long,long)", "android.graphics.drawable.LayerDrawable.setAutoMirrored(long)", "android.graphics.drawable.LayerDrawable.getPadding(android.graphics.Rect)", "android.graphics.drawable.LayerDrawable.setState(long)", "android.graphics.drawable.LayerDrawable.setLayerInset(long,long,long,long,long)", "android.graphics.drawable.LayerDrawable.setDrawableByLayerId(android.graphics.drawable.Drawable,long)", "android.widget.Button.getBackground()", "android.widget.Button.getVisibility()", "android.widget.Button.setAlpha(long)", "android.widget.Button.animate()", "android.widget.Button.getMeasuredWidth()", "android.widget.Button.getLayoutParams()", "android.widget.Button.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.Button.setOnClickListener(android.view.View.OnClickListener)", "android.widget.Button.setVisibility(long)", "android.widget.Button.setText(java.lang.CharSequence)", "android.widget.Button.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.Button.drawableStateChanged()", "android.widget.Button.getAutoSizeMaxTextSize()", "android.widget.Button.getAutoSizeMinTextSize()", "android.widget.Button.getAutoSizeStepGranularity()", "android.widget.Button.getAutoSizeTextAvailableSizes()", "android.widget.Button.getAutoSizeTextType()", "android.widget.Button.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.widget.Button.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.widget.Button.onLayout(long,long,long,long,long)", "android.widget.Button.onTextChanged(long,long,long,java.lang.CharSequence)", "android.widget.Button.setAutoSizeTextTypeUniformWithConfiguration(long,long,long,long)", "android.widget.Button.setAutoSizeTextTypeUniformWithPresetSizes(long,long)", "android.widget.Button.setAutoSizeTextTypeWithDefaults(long)", "android.widget.Button.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.Button.setBackgroundResource(long)", "android.widget.Button.setTextAppearance(long,android.content.Context)", "android.widget.Button.setTextSize(long,long)", "android.widget.Button.<init>(android.content.Context)", "android.widget.Button.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.Button.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.Button.setEnabled(long)", "android.widget.Button.setId(long)", "android.widget.Button.getParent()", "android.widget.Button.getCompoundDrawables()", "android.widget.Button.setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.Button.setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.widget.Button.setTextColor(android.content.res.ColorStateList)", "android.widget.Button.setFocusable(long)", "android.widget.Button.setText(long)", "android.widget.Button.setContentDescription(java.lang.CharSequence)", "android.widget.Button.isEnabled()", "android.widget.Button.onTouchEvent(android.view.MotionEvent)", "android.widget.Button.performClick()", "android.widget.Button.setTextColor(long)", "android.widget.Button.getPaddingTop()", "android.widget.Button.getPaddingBottom()", "android.widget.Button.setHeight(long)", "android.widget.Button.getText()", "android.widget.Button.getMeasuredHeight()", "android.widget.Button.layout(long,long,long,long)", "android.widget.Button.getTop()", "android.widget.Button.getRight()", "android.widget.Button.getLeft()", "android.widget.Button.measure(long,long)", "android.widget.Button.setGravity(long)", "android.widget.Button.setTextAlignment(long)", "android.widget.Button.requestFocus()", "android.widget.Button.setOnLongClickListener(android.view.View.OnLongClickListener)", "android.widget.Button.setCompoundDrawablesWithIntrinsicBounds(long,long,long,long)", "android.widget.Button.setBackground(android.graphics.drawable.Drawable)", "android.widget.Button.setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)", "android.graphics.RectF.set(long,long,long,long)", "android.graphics.RectF.<init>()", "android.graphics.RectF.setEmpty()", "android.graphics.RectF.contains(long,long)", "android.graphics.RectF.set(android.graphics.Rect)", "android.graphics.RectF.width()", "android.graphics.RectF.height()", "android.graphics.RectF.centerX()", "android.graphics.RectF.centerY()", "android.graphics.RectF.<init>(long,long,long,long)", "android.graphics.RectF.<init>(android.graphics.RectF)", "android.graphics.RectF.inset(long,long)", "android.graphics.RectF.isEmpty()", "android.graphics.RectF.set(android.graphics.RectF)", "android.graphics.RectF.round(android.graphics.Rect)", "android.graphics.RectF.offset(long,long)", "android.graphics.RectF.intersect(android.graphics.RectF)", "android.graphics.RectF.union(android.graphics.RectF)", "android.graphics.RectF.intersect(long,long,long,long)", "android.graphics.drawable.RippleDrawable.<init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.content.res.ColorStateList)", "android.graphics.drawable.InsetDrawable.getDrawable()", "android.graphics.drawable.InsetDrawable.<init>(long,long,long,long,android.graphics.drawable.Drawable)", "android.view.KeyEvent.getAction()", "android.view.KeyEvent.getKeyCode()", "android.view.KeyEvent.hasNoModifiers()", "android.view.KeyEvent.getRepeatCount()", "android.view.KeyEvent.hasModifiers(long)", "android.view.KeyEvent.isAltPressed()", "android.view.KeyEvent.isShiftPressed()", "android.view.KeyEvent.isSystem()", "android.view.KeyEvent.getDeviceId()", "android.view.KeyEvent.getFlags()", "android.view.KeyEvent.normalizeMetaState(long)", "android.view.KeyEvent.getMetaState()", "android.view.KeyEvent.getKeyData(android.view.KeyCharacterMap.KeyData)", "android.view.KeyEvent.getModifiers()", "android.view.KeyEvent.isCanceled()", "android.view.KeyEvent.isTracking()", "android.view.KeyEvent.isCtrlPressed()", "android.view.KeyEvent.getUnicodeChar(long)", "android.view.KeyEvent.getDevice()", "android.view.KeyEvent.getDownTime()", "android.view.KeyEvent.getEventTime()", "android.view.KeyEvent.getSource()", "android.view.KeyEvent.dispatch(java.lang.Object,android.view.KeyEvent.DispatcherState,android.view.KeyEvent.Callback)", "android.view.KeyEvent.<init>(long,long,long,long,long,long,long,long,long,long)", "android.widget.CheckBox.isEnabled()", "android.widget.CheckBox.isChecked()", "android.widget.CheckBox.getParent()", "android.widget.CheckBox.setChecked(long)", "android.widget.CheckBox.setVisibility(long)", "android.widget.CheckBox.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.CheckBox.getCompoundPaddingLeft()", "android.widget.CheckBox.setButtonDrawable(android.graphics.drawable.Drawable)", "android.widget.CheckBox.setOnClickListener(android.view.View.OnClickListener)", "android.widget.CheckBox.setText(java.lang.CharSequence)", "android.widget.CheckBox.toggle()", "android.widget.CheckBox.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)", "android.widget.CheckBox.setTag(java.lang.Object)", "android.widget.CheckBox.setEnabled(long)", "android.widget.CheckBox.setClickable(long)", "android.widget.CheckBox.setText(long)", "android.widget.CheckBox.<init>(android.content.Context)", "android.widget.CheckBox.setMovementMethod(android.text.method.MovementMethod)", "android.widget.CheckBox.setStateListAnimator(android.animation.StateListAnimator)", "android.view.ViewOutlineProvider.<init>()", "android.graphics.Outline.setAlpha(long)", "android.graphics.Outline.setRoundRect(long,android.graphics.Rect)", "android.graphics.Outline.setRoundRect(long,long,long,long,long)", "android.graphics.Outline.setOval(android.graphics.Rect)", "android.graphics.Outline.setOval(long,long,long,long)", "android.text.TextPaint.<init>(long)", "android.text.TextPaint.measureText(long,long,java.lang.CharSequence)", "android.text.TextPaint.getFontMetrics(android.graphics.Paint.FontMetrics)", "android.text.TextPaint.setColor(long)", "android.text.TextPaint.setShadowLayer(long,long,long,long)", "android.text.TextPaint.setTextAlign(android.graphics.Paint.Align)", "android.text.TextPaint.<init>(android.graphics.Paint)", "android.text.TextPaint.setTextSize(long)", "android.text.TextPaint.setTypeface(android.graphics.Typeface)", "android.text.TextPaint.setLinearText(long)", "android.text.TextPaint.ascent()", "android.text.TextPaint.descent()", "android.text.TextPaint.setFakeBoldText(long)", "android.text.TextPaint.setTextSkewX(long)", "android.text.TextPaint.getTextSize()", "android.text.TextPaint.getFontMetricsInt()", "android.text.TextPaint.getFontMetricsInt(android.graphics.Paint.FontMetricsInt)", "android.text.TextPaint.<init>()", "android.text.TextPaint.set(android.text.TextPaint)", "android.text.TextPaint.reset()", "android.text.TextPaint.getTypeface()", "android.text.TextPaint.setUnderlineText(long)", "android.text.TextPaint.measureText(java.lang.String)", "android.text.TextPaint.getTextBounds(android.graphics.Rect,long,long,java.lang.String)", "android.graphics.Paint.FontMetrics.<init>()", "android.graphics.PointF.<init>()", "android.graphics.PointF.set(long,long)", "android.graphics.PointF.<init>(long,long)", "android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable)", "android.graphics.drawable.Drawable.Callback.scheduleDrawable(long,java.lang.Runnable,android.graphics.drawable.Drawable)", "android.graphics.drawable.Drawable.Callback.unscheduleDrawable(java.lang.Runnable,android.graphics.drawable.Drawable)", "android.graphics.PorterDuffColorFilter.<init>(android.graphics.PorterDuff.Mode,long)", "android.widget.ImageButton.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.ImageButton.getDrawable()", "android.widget.ImageButton.drawableStateChanged()", "android.widget.ImageButton.setImageDrawable(android.graphics.drawable.Drawable)", "android.widget.ImageButton.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ImageButton.setVisibility(long)", "android.widget.ImageButton.setContentDescription(java.lang.CharSequence)", "android.widget.ImageButton.setOnClickListener(android.view.View.OnClickListener)", "android.widget.ImageButton.getMeasuredWidth()", "android.widget.ImageButton.hasOverlappingRendering()", "android.widget.ImageButton.setBackgroundResource(long)", "android.widget.ImageButton.setImageBitmap(android.graphics.Bitmap)", "android.widget.ImageButton.setImageURI(android.net.Uri)", "android.widget.ImageButton.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ImageButton.getContentDescription()", "android.widget.ImageButton.getMeasuredHeight()", "android.widget.ImageButton.getMeasuredState()", "android.widget.ImageButton.getParent()", "android.widget.ImageButton.setEnabled(long)", "android.widget.ImageButton.requestFocus()", "android.widget.ImageButton.hasFocus()", "android.widget.ImageButton.setFocusable(long)", "android.util.StateSet.stateSetMatches(long,long)", "android.util.StateSet.trimStateSet(long,long)", "android.animation.AnimatorSet.Builder.with(android.animation.Animator)", "android.view.accessibility.AccessibilityEvent.setChecked(long)", "android.view.accessibility.AccessibilityEvent.setClassName(java.lang.CharSequence)", "android.view.accessibility.AccessibilityEvent.getText()", "android.view.accessibility.AccessibilityEvent.getEventType()", "android.view.accessibility.AccessibilityEvent.setScrollable(long)", "android.view.accessibility.AccessibilityEvent.setItemCount(long)", "android.view.accessibility.AccessibilityEvent.setFromIndex(long)", "android.view.accessibility.AccessibilityEvent.setToIndex(long)", "android.view.accessibility.AccessibilityEvent.obtain(long)", "android.view.accessibility.AccessibilityEvent.setContentDescription(java.lang.CharSequence)", "android.view.accessibility.AccessibilityEvent.setPassword(long)", "android.view.accessibility.AccessibilityEvent.setEnabled(long)", "android.view.accessibility.AccessibilityEvent.getContentDescription()", "android.view.accessibility.AccessibilityEvent.setPackageName(java.lang.CharSequence)", "android.view.accessibility.AccessibilityEvent.setScrollX(long)", "android.view.accessibility.AccessibilityEvent.setScrollY(long)", "android.view.accessibility.AccessibilityEvent.setSource(android.view.View)", "android.view.accessibility.AccessibilityEvent.obtain()", "android.view.accessibility.AccessibilityEvent.setEventType(long)", "android.view.accessibility.AccessibilityEvent.setContentChangeTypes(long)", "android.view.accessibility.AccessibilityEvent.getContentChangeTypes()", "android.view.accessibility.AccessibilityEvent.getItemCount()", "android.view.accessibility.AccessibilityEvent.getFromIndex()", "android.view.accessibility.AccessibilityEvent.getToIndex()", "android.view.accessibility.AccessibilityEvent.getPackageName()", "android.view.accessibility.AccessibilityEvent.getClassName()", "android.graphics.LinearGradient.<init>(android.graphics.Shader.TileMode,long,long,long,long,long,long)", "android.animation.TimeInterpolator.getInterpolation(long)", "android.graphics.Typeface.create(long,java.lang.String)", "android.graphics.Typeface.create(long,android.graphics.Typeface)", "android.graphics.Typeface.getStyle()", "android.graphics.Typeface.createFromFile(java.io.File)", "android.graphics.Typeface.createFromFile(java.lang.String)", "android.graphics.Typeface.defaultFromStyle(long)", "android.graphics.Typeface.equals(java.lang.Object)", "android.graphics.Typeface.createFromAsset(java.lang.String,android.content.res.AssetManager)", "android.view.Gravity.getAbsoluteGravity(long,long)", "android.view.Gravity.apply(android.graphics.Rect,android.graphics.Rect,long,long,long)", "android.view.Gravity.apply(long,android.graphics.Rect,android.graphics.Rect,long,long,long)", "android.graphics.drawable.DrawableContainer.getConstantState()", "android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildCount()", "android.graphics.drawable.DrawableContainer.DrawableContainerState.getChild(long)", "android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildren()", "android.widget.CheckedTextView.setDuplicateParentStateEnabled(long)", "android.widget.CheckedTextView.setChecked(long)", "android.widget.CheckedTextView.setText(java.lang.CharSequence)", "android.widget.CheckedTextView.setVisibility(long)", "android.widget.CheckedTextView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.CheckedTextView.drawableStateChanged()", "android.widget.CheckedTextView.onCreateInputConnection(android.view.inputmethod.EditorInfo)", "android.widget.CheckedTextView.setTextAppearance(long,android.content.Context)", "android.graphics.drawable.StateListDrawable.<init>()", "android.graphics.drawable.StateListDrawable.addState(android.graphics.drawable.Drawable,long)", "android.graphics.drawable.StateListDrawable.getIntrinsicWidth()", "android.graphics.drawable.StateListDrawable.setAlpha(long)", "android.graphics.drawable.StateListDrawable.setState(long)", "android.graphics.drawable.StateListDrawable.setBounds(long,long,long,long)", "android.graphics.drawable.StateListDrawable.draw(android.graphics.Canvas)", "android.graphics.drawable.ColorDrawable.<init>(long)", "android.graphics.drawable.ColorDrawable.<init>()", "android.graphics.drawable.ColorDrawable.setAlpha(long)", "android.graphics.drawable.ColorDrawable.getColor()", "android.graphics.drawable.ColorDrawable.setColor(long)", "android.graphics.Path.<init>()", "android.graphics.Path.setFillType(android.graphics.Path.FillType)", "android.graphics.Path.moveTo(long,long)", "android.graphics.Path.rLineTo(long,long)", "android.graphics.Path.arcTo(long,long,long,android.graphics.RectF)", "android.graphics.Path.close()", "android.graphics.Path.reset()", "android.graphics.Path.cubicTo(long,long,long,long,long,long)", "android.graphics.Path.quadTo(long,long,long,long)", "android.graphics.Path.<init>(android.graphics.Path)", "android.graphics.Path.addPath(android.graphics.Matrix,android.graphics.Path)", "android.graphics.Path.lineTo(long,long)", "android.graphics.Path.rMoveTo(long,long)", "android.graphics.Path.rQuadTo(long,long,long,long)", "android.graphics.Path.rCubicTo(long,long,long,long,long,long)", "android.graphics.Path.offset(long,long)", "android.graphics.Path.computeBounds(long,android.graphics.RectF)", "android.graphics.Path.rewind()", "android.graphics.Path.addCircle(android.graphics.Path.Direction,long,long,long)", "android.graphics.Path.op(android.graphics.Path.Op,android.graphics.Path)", "android.graphics.Path.addRoundRect(android.graphics.Path.Direction,long,long,android.graphics.RectF)", "android.graphics.RadialGradient.<init>(android.graphics.Shader.TileMode,long,long,long,long,long)", "android.view.accessibility.AccessibilityManager.isEnabled()", "android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()", "android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.text.Layout.getLineCount()", "android.text.Layout.getLineWidth(long)", "android.text.Layout.getPaint()", "android.text.Layout.getEllipsisCount(long)", "android.text.Layout.getDesiredWidth(android.text.TextPaint,java.lang.CharSequence)", "android.text.Layout.getWidth()", "android.text.Layout.getHeight()", "android.text.Layout.draw(android.graphics.Canvas)", "android.text.Layout.getLineForVertical(long)", "android.text.Layout.getOffsetForHorizontal(long,long)", "android.text.Layout.getPrimaryHorizontal(long)", "android.text.Layout.getLineForOffset(long)", "android.text.Layout.getLineBounds(android.graphics.Rect,long)", "android.text.Layout.getParagraphDirection(long)", "android.text.Layout.getLineBaseline(long)", "android.text.Layout.getLineTop(long)", "android.widget.HorizontalScrollView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.HorizontalScrollView.addView(android.view.ViewGroup.LayoutParams,long,android.view.View)", "android.widget.HorizontalScrollView.scrollTo(long,long)", "android.widget.HorizontalScrollView.onAttachedToWindow()", "android.widget.HorizontalScrollView.onDetachedFromWindow()", "android.widget.HorizontalScrollView.onDraw(android.graphics.Canvas)", "android.widget.HorizontalScrollView.onMeasure(long,long)", "android.widget.HorizontalScrollView.removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.widget.HorizontalScrollView.findViewById(long)", "android.widget.HorizontalScrollView.addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)", "android.widget.HorizontalScrollView.setPadding(long,long,long,long)", "android.widget.HorizontalScrollView.<init>(android.content.Context)", "android.widget.HorizontalScrollView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.HorizontalScrollView.performAccessibilityAction(android.os.Bundle,long)", "android.database.DataSetObservable.unregisterObserver(java.lang.Object)", "android.database.DataSetObservable.<init>()", "android.database.DataSetObservable.registerObserver(java.lang.Object)", "android.database.DataSetObservable.notifyChanged()", "android.database.DataSetObserver.<init>()", "android.database.DataSetObserver.onChanged()", "android.database.DataSetObserver.onInvalidated()", "android.widget.EditText.getPaddingBottom()", "android.widget.EditText.getText()", "android.widget.EditText.getBackground()", "android.widget.EditText.getTransformationMethod()", "android.widget.EditText.setPadding(long,long,long,long)", "android.widget.EditText.setMinimumHeight(long)", "android.widget.EditText.getPaddingLeft()", "android.widget.EditText.getPaddingTop()", "android.widget.EditText.getPaddingRight()", "android.widget.EditText.getLeft()", "android.widget.EditText.getRight()", "android.widget.EditText.getBottom()", "android.widget.EditText.getTop()", "android.widget.EditText.refreshDrawableState()", "android.widget.EditText.getSelectionEnd()", "android.widget.EditText.setTransformationMethod(android.text.method.TransformationMethod)", "android.widget.EditText.setSelection(long)", "android.widget.EditText.hasFocus()", "android.widget.EditText.getTypeface()", "android.widget.EditText.getTextSize()", "android.widget.EditText.getGravity()", "android.widget.EditText.addTextChangedListener(android.text.TextWatcher)", "android.widget.EditText.getHintTextColors()", "android.widget.EditText.getHint()", "android.widget.EditText.setHint(java.lang.CharSequence)", "android.widget.EditText.isHovered()", "android.widget.EditText.getCompoundPaddingLeft()", "android.widget.EditText.getCompoundPaddingRight()", "android.widget.EditText.getCompoundPaddingTop()", "android.widget.EditText.getCompoundPaddingBottom()", "android.widget.EditText.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.EditText.onFocusChanged(android.graphics.Rect,long,long)", "android.widget.EditText.setFocusable(long)", "android.widget.EditText.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)", "android.widget.EditText.isFocused()", "android.widget.EditText.getWindowToken()", "android.widget.EditText.setTextColor(long)", "android.widget.EditText.setHintTextColor(long)", "android.widget.EditText.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)", "android.widget.EditText.setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)", "android.widget.EditText.getWidth()", "android.widget.EditText.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.EditText.setText(java.lang.CharSequence)", "android.widget.EditText.onFinishInflate()", "android.widget.EditText.drawableStateChanged()", "android.widget.EditText.getEditableText()", "android.widget.EditText.onCreateInputConnection(android.view.inputmethod.EditorInfo)", "android.widget.EditText.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.EditText.setBackgroundResource(long)", "android.widget.EditText.setTextAppearance(long,android.content.Context)", "android.widget.EditText.setEnabled(long)", "android.widget.EditText.getLayoutParams()", "android.widget.EditText.getFocusedRect(android.graphics.Rect)", "android.widget.EditText.onKeyDown(android.view.KeyEvent,long)", "android.widget.EditText.onKeyUp(android.view.KeyEvent,long)", "android.widget.EditText.onVisibilityChanged(long,android.view.View)", "android.widget.EditText.isShown()", "android.widget.EditText.post(java.lang.Runnable)", "android.widget.EditText.setVisibility(long)", "android.widget.EditText.getParent()", "android.widget.EditText.clearFocus()", "android.widget.EditText.getContext()", "android.widget.EditText.requestFocus()", "android.widget.EditText.setFilters([Landroid.text.InputFilter)", "android.widget.EditText.setError(java.lang.CharSequence)", "android.widget.EditText.setTextKeepState(java.lang.CharSequence)", "android.widget.EditText.<init>(android.content.Context)", "android.widget.EditText.setText(long)", "android.widget.EditText.setSelectAllOnFocus(long)", "android.widget.EditText.setSingleLine()", "android.widget.EditText.setInputType(long)", "android.widget.EditText.setContentDescription(java.lang.CharSequence)", "android.widget.EditText.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.EditText.getApplicationWindowToken()", "android.widget.EditText.setOnClickListener(android.view.View.OnClickListener)", "android.widget.EditText.performClick()", "android.widget.EditText.removeTextChangedListener(android.text.TextWatcher)", "android.widget.EditText.setHint(long)", "android.widget.EditText.setOnKeyListener(android.view.View.OnKeyListener)", "android.widget.EditText.setImeOptions(long)", "android.widget.EditText.getPaint()", "android.text.Editable.length()", "android.text.Editable.clear()", "android.text.Editable.setSpan(long,long,long,java.lang.Object)", "android.text.Editable.getSpans(java.lang.Class,long,long)", "android.text.Editable.getSpanStart(java.lang.Object)", "android.text.Editable.removeSpan(java.lang.Object)", "android.text.Editable.getSpanFlags(java.lang.Object)", "android.text.Editable.getSpanEnd(java.lang.Object)", "android.text.Editable.charAt(long)", "android.text.Editable.append(java.lang.CharSequence)", "android.text.method.PasswordTransformationMethod.getInstance()", "android.text.method.PasswordTransformationMethod.<init>()", "android.view.ViewGroup.OnHierarchyChangeListener.onChildViewAdded(android.view.View,android.view.View)", "android.view.ViewGroup.OnHierarchyChangeListener.onChildViewRemoved(android.view.View,android.view.View)", "android.animation.ArgbEvaluator.<init>()", "android.graphics.drawable.AnimatedVectorDrawable.isRunning()", "android.graphics.drawable.AnimatedVectorDrawable.start()", "android.graphics.drawable.AnimatedVectorDrawable.stop()", "android.content.res.XmlResourceParser.close()", "android.content.res.XmlResourceParser.next()", "android.content.res.XmlResourceParser.getName()", "android.content.res.XmlResourceParser.getAttributeValue(java.lang.String,java.lang.String)", "android.content.res.XmlResourceParser.getEventType()", "android.content.res.XmlResourceParser.nextText()", "android.content.res.XmlResourceParser.getLineNumber()", "android.content.res.XmlResourceParser.getDepth()", "android.content.res.XmlResourceParser.nextTag()", "android.view.animation.AccelerateDecelerateInterpolator.<init>()", "android.view.animation.AccelerateDecelerateInterpolator.getInterpolation(long)", "android.view.animation.BounceInterpolator.<init>()", "android.view.animation.AnticipateOvershootInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.view.animation.OvershootInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.view.animation.AnticipateInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.view.animation.CycleInterpolator.<init>(android.util.AttributeSet,android.content.Context)", "android.animation.Keyframe.setInterpolator(android.animation.TimeInterpolator)", "android.animation.Keyframe.ofFloat(long,long)", "android.animation.Keyframe.ofInt(long,long)", "android.animation.Keyframe.ofFloat(long)", "android.animation.Keyframe.ofInt(long)", "android.animation.Keyframe.getFraction()", "android.animation.Keyframe.setFraction(long)", "android.animation.Keyframe.getType()", "android.animation.Keyframe.ofObject(long)", "android.graphics.PathMeasure.<init>(long,android.graphics.Path)", "android.graphics.PathMeasure.getLength()", "android.graphics.PathMeasure.nextContour()", "android.graphics.PathMeasure.getPosTan(long,long,long)", "android.graphics.PathMeasure.<init>()", "android.graphics.PathMeasure.setPath(long,android.graphics.Path)", "android.graphics.PathMeasure.getSegment(long,android.graphics.Path,long,long)", "android.widget.ListView.getAdapter()", "android.widget.ListView.getPositionForView(android.view.View)", "android.widget.ListView.getItemIdAtPosition(long)", "android.widget.ListView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)", "android.widget.ListView.setEmptyView(android.view.View)", "android.widget.ListView.getSelectedItemId()", "android.widget.ListView.getSelectedItemPosition()", "android.widget.ListView.<init>(android.content.Context)", "android.widget.ListView.setId(long)", "android.widget.ListView.setDrawSelectorOnTop(long)", "android.widget.ListView.setAdapter(android.widget.ListAdapter)", "android.widget.ListView.setSelection(long)", "android.widget.ListView.focusableViewAvailable(android.view.View)", "android.widget.ListView.getCount()", "android.widget.ListView.getChildCount()", "android.widget.ListView.getFirstVisiblePosition()", "android.widget.ListView.getChildAt(long)", "android.widget.ListView.getHeight()", "android.widget.ListView.scrollListBy(long)", "android.widget.ListView.canScrollList(long)", "android.widget.ListView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.ListView.setItemChecked(long,long)", "android.widget.ListView.setOnScrollListener(android.widget.AbsListView.OnScrollListener)", "android.widget.ListView.post(java.lang.Runnable)", "android.widget.ListView.getPaddingBottom()", "android.widget.ListView.getPaddingTop()", "android.widget.ListView.setChoiceMode(long)", "android.widget.ListView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ListView.onDraw(android.graphics.Canvas)", "android.widget.ListView.setOnKeyListener(android.view.View.OnKeyListener)", "android.widget.ListView.addHeaderView(long,java.lang.Object,android.view.View)", "android.widget.ListView.getLocationOnScreen(long)", "android.widget.ListView.getWidth()", "android.widget.ListView.requestFocus()", "android.widget.ListView.setDivider(android.graphics.drawable.Drawable)", "android.widget.ListView.onDetachedFromWindow()", "android.widget.ListView.getDividerHeight()", "android.widget.ListView.getDivider()", "android.widget.ListView.getVisibility()", "android.widget.ListView.dispatchDraw(android.graphics.Canvas)", "android.widget.ListView.drawableStateChanged()", "android.widget.ListView.hasFocus()", "android.widget.ListView.hasWindowFocus()", "android.widget.ListView.isFocused()", "android.widget.ListView.isInTouchMode()", "android.widget.ListView.onHoverEvent(android.view.MotionEvent)", "android.widget.ListView.onTouchEvent(android.view.MotionEvent)", "android.widget.ListView.setSelector(android.graphics.drawable.Drawable)", "android.widget.ListView.requestLayout()", "android.widget.ListView.dispatchTouchEvent(android.view.MotionEvent)", "android.widget.ListView.draw(android.graphics.Canvas)", "android.widget.ListView.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.widget.ListView.onLayout(long,long,long,long,long)", "android.widget.ListView.setEnabled(long)", "android.widget.ListView.postDelayed(long,java.lang.Runnable)", "android.widget.ListView.onMeasure(long,long)", "android.widget.ListView.setItemsCanFocus(long)", "android.widget.ListView.setTextFilterEnabled(long)", "android.widget.ListView.addFooterView(android.view.View)", "android.widget.ListView.setFooterDividersEnabled(long)", "android.widget.ListView.getLayoutParams()", "android.widget.ListView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ListView.scrollBy(long,long)", "android.widget.ListView.getLastVisiblePosition()", "android.widget.ListView.smoothScrollToPosition(long)", "android.widget.ListView.setVisibility(long)", "android.widget.ListView.setDividerHeight(long)", "android.widget.ListView.getEmptyView()", "android.widget.ListView.addHeaderView(android.view.View)", "android.widget.ListView.onInterceptTouchEvent(android.view.MotionEvent)", "android.widget.ListView.onOverScrolled(long,long,long,long)", "android.widget.ListView.getParent()", "android.widget.ListView.setClickable(long)", "android.widget.ListView.setHeaderDividersEnabled(long)", "android.widget.ListView.removeHeaderView(android.view.View)", "android.widget.ListView.setVerticalScrollBarEnabled(long)", "android.widget.ListView.setOnTouchListener(android.view.View.OnTouchListener)", "android.widget.ListView.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.ListAdapter.hasStableIds()", "android.widget.ListAdapter.getCount()", "android.widget.ListAdapter.getItem(long)", "android.widget.ListAdapter.getItemViewType(long)", "android.widget.ListAdapter.getView(android.view.ViewGroup,android.view.View,long)", "android.widget.ListAdapter.areAllItemsEnabled()", "android.widget.ListAdapter.isEnabled(long)", "android.widget.ListAdapter.getItemId(long)", "android.widget.ListAdapter.registerDataSetObserver(android.database.DataSetObserver)", "android.widget.ListAdapter.unregisterDataSetObserver(android.database.DataSetObserver)", "android.view.ViewGroupOverlay.add(android.view.View)", "android.view.ViewGroupOverlay.remove(android.view.View)", "android.graphics.Picture.<init>()", "android.graphics.Picture.beginRecording(long,long)", "android.graphics.Picture.endRecording()", "android.view.WindowId.equals(java.lang.Object)", "android.view.WindowId.hashCode()", "android.widget.Switch.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)", "android.widget.Switch.setTextOn(java.lang.CharSequence)", "android.widget.Switch.setTextOff(java.lang.CharSequence)", "android.widget.Switch.setChecked(long)", "android.widget.Checkable.setChecked(long)", "android.view.FocusFinder.getInstance()", "android.view.FocusFinder.findNextFocus(long,android.view.View,android.view.ViewGroup)", "android.view.FocusFinder.findNextFocusFromRect(long,android.graphics.Rect,android.view.ViewGroup)", "android.widget.RelativeLayout.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.RelativeLayout.onLayout(long,long,long,long,long)", "android.widget.RelativeLayout.dispatchKeyEvent(android.view.KeyEvent)", "android.widget.RelativeLayout.findViewById(long)", "android.widget.RelativeLayout.onMeasure(long,long)", "android.widget.RelativeLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.RelativeLayout.onAttachedToWindow()", "android.widget.RelativeLayout.onDetachedFromWindow()", "android.widget.RelativeLayout.onFinishInflate()", "android.widget.RelativeLayout.getBackground()", "android.widget.RelativeLayout.<init>(android.content.Context)", "android.widget.RelativeLayout.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.RelativeLayout.setPadding(long,long,long,long)", "android.widget.RelativeLayout.setVisibility(long)", "android.widget.RelativeLayout.setGravity(long)", "android.widget.RelativeLayout.addView(android.view.View)", "android.widget.RelativeLayout.setOnClickListener(android.view.View.OnClickListener)", "android.widget.RelativeLayout.onTouchEvent(android.view.MotionEvent)", "android.widget.RelativeLayout.setOnLongClickListener(android.view.View.OnLongClickListener)", "android.widget.RelativeLayout.getViewTreeObserver()", "android.widget.RelativeLayout.postOnAnimationDelayed(long,java.lang.Runnable)", "android.widget.RelativeLayout.setBackground(android.graphics.drawable.Drawable)", "android.widget.RelativeLayout.requestChildFocus(android.view.View,android.view.View)", "android.widget.RelativeLayout.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.content.res.Configuration.getLayoutDirection()", "android.content.res.Configuration.getLocales()", "android.content.res.Configuration.<init>(android.content.res.Configuration)", "android.content.res.Configuration.equals(android.content.res.Configuration)", "android.content.res.Configuration.<init>()", "android.widget.RelativeLayout.LayoutParams.<init>(long,long)", "android.widget.RelativeLayout.LayoutParams.addRule(long,long)", "android.widget.RelativeLayout.LayoutParams.addRule(long)", "android.widget.RelativeLayout.LayoutParams.setMargins(long,long,long,long)", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(long,android.os.IBinder)", "android.view.inputmethod.InputMethodManager.isActive(android.view.View)", "android.view.inputmethod.InputMethodManager.showSoftInput(long,android.view.View)", "android.view.inputmethod.InputMethodManager.toggleSoftInputFromWindow(long,long,android.os.IBinder)", "android.view.inputmethod.InputMethodManager.isAcceptingText()", "android.view.inputmethod.InputMethodManager.restartInput(android.view.View)", "android.media.SoundPool.<init>(long,long,long)", "android.media.SoundPool.load(long,long,android.content.Context)", "android.media.SoundPool.release()", "android.widget.SeekBar.setThumb(android.graphics.drawable.Drawable)", "android.widget.SeekBar.setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)", "android.widget.SeekBar.setMax(long)", "android.widget.SeekBar.setKeyProgressIncrement(long)", "android.widget.SeekBar.setProgress(long)", "android.widget.SeekBar.setEnabled(long)", "android.widget.SeekBar.getKeyProgressIncrement()", "android.widget.SeekBar.getProgress()", "android.widget.SeekBar.onKeyDown(android.view.KeyEvent,long)", "android.widget.SeekBar.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.SeekBar.drawableStateChanged()", "android.widget.SeekBar.getDrawableState()", "android.widget.SeekBar.invalidateDrawable(android.graphics.drawable.Drawable)", "android.widget.SeekBar.jumpDrawablesToCurrentState()", "android.widget.SeekBar.onDraw(android.graphics.Canvas)", "android.widget.SeekBar.getMax()", "android.widget.SeekBar.getWidth()", "android.widget.SeekBar.getPaddingLeft()", "android.widget.SeekBar.getPaddingRight()", "android.widget.SeekBar.getHeight()", "android.widget.SeekBar.getContext()", "android.widget.SeekBar.invalidate()", "android.widget.SeekBar.setFocusable(long)", "android.widget.SeekBar.setVisibility(long)", "android.widget.SeekBar.getLeft()", "android.view.SurfaceView.<init>(android.content.Context)", "android.view.SurfaceView.<init>(android.util.AttributeSet,android.content.Context)", "android.view.SurfaceView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.text.format.DateFormat.getDateFormatOrder(android.content.Context)", "android.text.format.DateFormat.getBestDateTimePattern(java.lang.String,java.util.Locale)", "android.text.format.DateFormat.getDateFormat(android.content.Context)", "android.text.format.DateFormat.is24HourFormat(android.content.Context)", "android.text.format.DateFormat.format(java.util.Date,java.lang.CharSequence)", "android.text.format.DateFormat.getLongDateFormat(android.content.Context)", "android.text.format.DateFormat.getMediumDateFormat(android.content.Context)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.getDateTimeInstance(long,long)", "java.text.DateFormat.format(java.util.Date)", "java.text.DateFormat.getDateInstance(java.util.Locale,long)", "java.text.DateFormat.format(java.lang.Object)", "java.text.DateFormat.getDateInstance(long)", "java.text.DateFormat.getDateInstance()", "java.text.DateFormat.getInstance()", "java.text.DateFormat.setTimeZone(java.util.TimeZone)", "java.text.DateFormat.getTimeInstance(long)", "java.text.DateFormat.setCalendar(java.util.Calendar)", "java.text.DateFormat.getDateTimeInstance()", "java.text.DateFormat.parse(java.text.ParsePosition,java.lang.String)", "java.text.DateFormat.setLenient(long)", "java.text.DateFormatSymbols.getInstance(java.util.Locale)", "java.text.DateFormatSymbols.getShortMonths()", "android.app.Notification.InboxStyle.<init>(android.app.Notification.Builder)", "android.app.Notification.InboxStyle.setBigContentTitle(java.lang.CharSequence)", "android.app.Notification.InboxStyle.addLine(java.lang.CharSequence)", "android.app.Notification.MessagingStyle.<init>(java.lang.CharSequence)", "android.app.Notification.MessagingStyle.setConversationTitle(java.lang.CharSequence)", "android.app.Notification.MessagingStyle.setGroupConversation(long)", "android.app.Notification.MessagingStyle.addMessage(android.app.Notification.MessagingStyle.Message)", "android.app.Notification.MessagingStyle.setBuilder(android.app.Notification.Builder)", "android.app.Notification.MessagingStyle.Message.<init>(java.lang.CharSequence,long,java.lang.CharSequence)", "android.text.SpannableStringBuilder.<init>()", "android.text.SpannableStringBuilder.insert(java.lang.CharSequence,long)", "android.text.SpannableStringBuilder.append(java.lang.CharSequence)", "android.text.SpannableStringBuilder.length()", "android.text.SpannableStringBuilder.setSpan(long,long,long,java.lang.Object)", "android.text.SpannableStringBuilder.append(long)", "android.text.SpannableStringBuilder.<init>(java.lang.CharSequence)", "android.text.SpannableStringBuilder.getSpans(java.lang.Class,long,long)", "android.text.SpannableStringBuilder.getSpanStart(java.lang.Object)", "android.text.SpannableStringBuilder.getSpanEnd(java.lang.Object)", "android.text.SpannableStringBuilder.replace(java.lang.CharSequence,long,long)", "android.text.SpannableStringBuilder.removeSpan(java.lang.Object)", "android.text.SpannableStringBuilder.getSpanFlags(java.lang.Object)", "android.text.SpannableStringBuilder.charAt(long)", "android.text.style.TextAppearanceSpan.<init>(android.content.res.ColorStateList,android.content.res.ColorStateList,long,long,java.lang.String)", "android.text.style.TextAppearanceSpan.<init>(long,android.content.Context)", "android.os.CancellationSignal.cancel()", "android.os.CancellationSignal.<init>()", "android.content.pm.ProviderInfo.loadXmlMetaData(java.lang.String,android.content.pm.PackageManager)", "android.content.pm.ProviderInfo.<init>()", "android.os.Environment.getExternalStorageDirectory()", "android.os.Environment.getDataDirectory()", "android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)", "android.os.Environment.isExternalStorageEmulated()", "android.os.Environment.getExternalStorageState()", "android.os.Environment.isExternalStorageRemovable()", "android.system.OsConstants.S_ISREG(long)", "android.graphics.fonts.FontVariationAxis.fromFontVariationSettings(java.lang.String)", "android.graphics.Typeface.Builder.<init>(java.io.FileDescriptor)", "android.graphics.Typeface.Builder.setWeight(long)", "android.graphics.Typeface.Builder.setItalic(long)", "android.graphics.Typeface.Builder.build()", "android.graphics.drawable.Icon.getType()", "android.graphics.drawable.Icon.getResId()", "android.graphics.drawable.Icon.getResPackage()", "android.graphics.drawable.Icon.getUri()", "android.graphics.drawable.Icon.loadDrawable(android.content.Context)", "android.graphics.drawable.Icon.createWithAdaptiveBitmap(android.graphics.Bitmap)", "android.graphics.drawable.Icon.setTintList(android.content.res.ColorStateList)", "android.graphics.drawable.Icon.setTintMode(android.graphics.PorterDuff.Mode)", "android.graphics.drawable.Icon.createWithBitmap(android.graphics.Bitmap)", "android.graphics.drawable.Icon.createWithContentUri(java.lang.String)", "android.graphics.drawable.Icon.createWithData(long,long,long)", "android.graphics.drawable.Icon.createWithResource(long,java.lang.String)", "android.graphics.drawable.Icon.createWithResource(long,android.content.Context)", "android.graphics.BitmapShader.<init>(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode,android.graphics.Bitmap)", "android.graphics.BitmapShader.setLocalMatrix(android.graphics.Matrix)", "android.graphics.drawable.BitmapDrawable.<init>(android.graphics.Bitmap,android.content.res.Resources)", "android.graphics.drawable.BitmapDrawable.getBitmap()", "android.graphics.drawable.BitmapDrawable.getPaint()", "android.graphics.drawable.BitmapDrawable.setTileModeX(android.graphics.Shader.TileMode)", "android.graphics.drawable.BitmapDrawable.setGravity(long)", "android.graphics.drawable.BitmapDrawable.setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)", "android.graphics.drawable.BitmapDrawable.mutate()", "android.graphics.drawable.BitmapDrawable.setAlpha(long)", "android.graphics.drawable.BitmapDrawable.setColorFilter(android.graphics.ColorFilter)", "android.graphics.drawable.BitmapDrawable.setBounds(android.graphics.Rect)", "android.graphics.drawable.BitmapDrawable.draw(android.graphics.Canvas)", "android.os.LocaleList.size()", "android.os.LocaleList.get(long)", "android.os.LocaleList.<init>([Ljava.util.Locale)", "android.os.LocaleList.equals(java.lang.Object)", "android.os.LocaleList.hashCode()", "android.os.LocaleList.toString()", "android.os.LocaleList.getDefault()", "java.lang.InterruptedException.<init>(java.lang.String)", "java.lang.InterruptedException.toString()", "java.lang.InterruptedException.getMessage()", "java.lang.InterruptedException.fillInStackTrace()", "java.lang.InterruptedException.<init>()", "android.view.GestureDetector.onTouchEvent(android.view.MotionEvent)", "android.view.GestureDetector.<init>(android.os.Handler,android.view.GestureDetector.OnGestureListener,android.content.Context)", "android.view.GestureDetector.<init>(android.view.GestureDetector.OnGestureListener,android.content.Context)", "android.view.GestureDetector.<init>(long,android.os.Handler,android.view.GestureDetector.OnGestureListener,android.content.Context)", "android.view.GestureDetector.setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)", "android.widget.Scroller.isFinished()", "android.widget.Scroller.getStartX()", "android.widget.Scroller.abortAnimation()", "android.widget.Scroller.startScroll(long,long,long,long,long)", "android.widget.Scroller.getCurrX()", "android.widget.Scroller.getCurrY()", "android.widget.Scroller.<init>(android.view.animation.Interpolator,android.content.Context)", "android.widget.Scroller.computeScrollOffset()", "android.widget.Scroller.getFinalX()", "android.widget.Scroller.setFinalX(long)", "android.widget.Scroller.forceFinished(long)", "android.widget.Scroller.fling(long,long,long,long,long,long,long,long)", "android.widget.Scroller.getCurrVelocity()", "android.widget.Scroller.getFinalY()", "android.widget.Scroller.<init>(android.content.Context)", "android.widget.Scroller.setFinalY(long)", "android.widget.EdgeEffect.onPull(long)", "android.widget.EdgeEffect.<init>(android.content.Context)", "android.widget.EdgeEffect.onRelease()", "android.widget.EdgeEffect.isFinished()", "android.widget.EdgeEffect.setSize(long,long)", "android.widget.EdgeEffect.draw(android.graphics.Canvas)", "android.widget.EdgeEffect.finish()", "android.widget.EdgeEffect.onPull(long,long)", "android.widget.EdgeEffect.onAbsorb(long)", "android.view.SoundEffectConstants.getContantForFocusDirection(long)", "android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.<init>(java.lang.CharSequence,long)", "android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction.getId()", "android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain(long,long,long,long)", "android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain(long,long,long)", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain(long,long,long,long,long,long)", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain(long,long,long,long,long)", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getRowIndex()", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getRowSpan()", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getColumnIndex()", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.getColumnSpan()", "android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.isSelected()", "android.view.accessibility.AccessibilityNodeProvider.<init>()", "android.view.accessibility.AccessibilityRecord.setSource(android.view.View)", "android.view.accessibility.AccessibilityRecord.setSource(long,android.view.View)", "android.view.accessibility.AccessibilityRecord.setMaxScrollX(long)", "android.view.accessibility.AccessibilityRecord.setMaxScrollY(long)", "android.view.animation.PathInterpolator.<init>(long,long,long,long)", "android.graphics.drawable.ShapeDrawable.<init>(android.graphics.drawable.shapes.Shape)", "android.graphics.drawable.ShapeDrawable.getPaint()", "android.graphics.drawable.ShapeDrawable.setIntrinsicHeight(long)", "android.graphics.drawable.ShapeDrawable.setIntrinsicWidth(long)", "android.graphics.drawable.shapes.OvalShape.<init>()", "android.graphics.drawable.shapes.OvalShape.onResize(long,long)", "android.widget.BaseAdapter.<init>()", "android.widget.BaseAdapter.notifyDataSetChanged()", "android.widget.Filter.<init>()", "android.widget.Filter.convertResultToString(java.lang.Object)", "android.widget.Filter.filter(java.lang.CharSequence)", "android.widget.Filter.FilterResults.<init>()", "android.widget.ScrollView.<init>(android.content.Context)", "android.widget.ScrollView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.ScrollView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ScrollView.onLayout(long,long,long,long,long)", "android.widget.ScrollView.getChildAt(long)", "android.widget.ScrollView.post(java.lang.Runnable)", "android.widget.ScrollView.getScrollY()", "android.widget.ScrollView.smoothScrollTo(long,long)", "android.widget.ScrollView.getHeight()", "android.widget.ScrollView.fling(long)", "android.widget.ScrollView.onTouchEvent(android.view.MotionEvent)", "android.widget.ScrollView.getVisibility()", "android.widget.ScrollView.fullScroll(long)", "android.widget.ScrollView.setVisibility(long)", "android.widget.ScrollView.onInterceptTouchEvent(android.view.MotionEvent)", "android.widget.ScrollView.overScrollBy(long,long,long,long,long,long,long,long,long)", "android.widget.ScrollView.setOnTouchListener(android.view.View.OnTouchListener)", "android.widget.ScrollView.onAttachedToWindow()", "android.widget.ScrollView.onDetachedFromWindow()", "android.widget.ScrollView.onScrollChanged(long,long,long,long)", "android.widget.ScrollView.onDraw(android.graphics.Canvas)", "android.widget.ScrollView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ScrollView.addView(android.view.View)", "android.widget.ScrollView.getMeasuredHeight()", "android.widget.ScrollView.smoothScrollBy(long,long)", "android.widget.ScrollView.onOverScrolled(long,long,long,long)", "android.widget.ScrollView.scrollTo(long,long)", "android.widget.ScrollView.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.widget.ScrollView.requestDisallowInterceptTouchEvent(long)", "android.widget.ScrollView.getWidth()", "android.widget.ScrollView.findViewById(long)", "android.widget.ScrollView.getContext()", "android.view.View.BaseSavedState.<init>(android.os.Parcel)", "android.view.View.BaseSavedState.<init>(android.os.Parcelable)", "android.view.View.BaseSavedState.writeToParcel(long,android.os.Parcel)", "android.content.DialogInterface.OnClickListener.onClick(long,android.content.DialogInterface)", "android.widget.ArrayAdapter.<init>([Ljava.lang.Object,long,long,android.content.Context)", "android.widget.ArrayAdapter.<init>(long,android.content.Context)", "android.widget.ArrayAdapter.clear()", "android.widget.ArrayAdapter.add(java.lang.Object)", "android.widget.ArrayAdapter.notifyDataSetChanged()", "android.widget.ArrayAdapter.<init>([Ljava.lang.Object,long,android.content.Context)", "android.widget.ArrayAdapter.setDropDownViewResource(long)", "android.widget.ArrayAdapter.<init>(java.util.List,long,android.content.Context)", "android.widget.ArrayAdapter.addAll(java.util.Collection)", "android.widget.ArrayAdapter.<init>(java.util.List,long,long,android.content.Context)", "android.widget.ArrayAdapter.getItem(long)", "android.widget.ArrayAdapter.getCount()", "android.widget.ArrayAdapter.getDropDownView(android.view.ViewGroup,android.view.View,long)", "android.widget.ArrayAdapter.getPosition(java.lang.Object)", "android.widget.ArrayAdapter.getView(android.view.ViewGroup,android.view.View,long)", "android.view.ContextThemeWrapper.<init>(long,android.content.Context)", "android.view.Window.Callback.onMenuOpened(android.view.Menu,long)", "android.view.Window.Callback.onPanelClosed(android.view.Menu,long)", "android.view.Window.Callback.onPreparePanel(android.view.Menu,android.view.View,long)", "android.view.Window.Callback.onContentChanged()", "android.view.Window.Callback.onCreatePanelView(long)", "android.view.Window.Callback.onCreatePanelMenu(android.view.Menu,long)", "android.view.Window.Callback.onMenuItemSelected(android.view.MenuItem,long)", "android.view.Window.Callback.dispatchKeyEvent(android.view.KeyEvent)", "android.view.Window.Callback.dispatchGenericMotionEvent(android.view.MotionEvent)", "android.view.Window.Callback.dispatchKeyShortcutEvent(android.view.KeyEvent)", "android.view.Window.Callback.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)", "android.view.Window.Callback.dispatchTouchEvent(android.view.MotionEvent)", "android.view.Window.Callback.dispatchTrackballEvent(android.view.MotionEvent)", "android.view.Window.Callback.onActionModeFinished(android.view.ActionMode)", "android.view.Window.Callback.onActionModeStarted(android.view.ActionMode)", "android.view.Window.Callback.onAttachedToWindow()", "android.view.Window.Callback.onDetachedFromWindow()", "android.view.Window.Callback.onPointerCaptureChanged(long)", "android.view.Window.Callback.onProvideKeyboardShortcuts(long,android.view.Menu,java.util.List)", "android.view.Window.Callback.onSearchRequested()", "android.view.Window.Callback.onSearchRequested(android.view.SearchEvent)", "android.view.Window.Callback.onWindowAttributesChanged(android.view.WindowManager.LayoutParams)", "android.view.Window.Callback.onWindowFocusChanged(long)", "android.view.Window.Callback.onWindowStartingActionMode(android.view.ActionMode.Callback)", "android.view.Window.Callback.onWindowStartingActionMode(long,android.view.ActionMode.Callback)", "android.view.WindowManager.LayoutParams.<init>(long,long,long,long,long,long,long)", "android.view.WindowManager.LayoutParams.<init>()", "android.view.WindowManager.LayoutParams.setTitle(java.lang.CharSequence)", "android.view.WindowManager.LayoutParams.<init>(long,long,long,long,long)", "android.view.WindowManager.LayoutParams.copyFrom(android.view.WindowManager.LayoutParams)", "android.app.UiModeManager.getNightMode()", "android.app.UiModeManager.getCurrentModeType()", "android.view.KeyCharacterMap.load(long)", "android.view.KeyCharacterMap.getKeyboardType()", "android.media.AudioManager.playSoundEffect(long)", "android.media.AudioManager.isWiredHeadsetOn()", "android.media.AudioManager.isBluetoothA2dpOn()", "android.media.AudioManager.isBluetoothScoOn()", "android.media.AudioManager.isMicrophoneMute()", "android.media.AudioManager.isMusicActive()", "android.media.AudioManager.isSpeakerphoneOn()", "android.media.AudioManager.getStreamVolume(long)", "android.media.AudioManager.setStreamVolume(long,long,long)", "android.media.AudioManager.getStreamMaxVolume(long)", "android.media.AudioManager.getMode()", "android.media.AudioManager.setRingerMode(long)", "android.media.AudioManager.getRingerMode()", "android.graphics.drawable.AnimationDrawable.setColorFilter(android.graphics.ColorFilter)", "android.graphics.drawable.AnimationDrawable.getFrame(long)", "android.graphics.drawable.AnimationDrawable.start()", "android.graphics.drawable.AnimationDrawable.getNumberOfFrames()", "android.graphics.drawable.AnimationDrawable.<init>()", "android.graphics.drawable.AnimationDrawable.isOneShot()", "android.graphics.drawable.AnimationDrawable.setOneShot(long)", "android.graphics.drawable.AnimationDrawable.getDuration(long)", "android.graphics.drawable.AnimationDrawable.addFrame(long,android.graphics.drawable.Drawable)", "android.graphics.drawable.AnimationDrawable.setLevel(long)", "android.util.LongSparseArray.clear()", "android.util.LongSparseArray.<init>()", "android.util.LongSparseArray.get(long)", "android.util.LongSparseArray.put(java.lang.Object,long)", "android.util.LongSparseArray.size()", "android.util.LongSparseArray.keyAt(long)", "android.util.LongSparseArray.valueAt(long)", "android.util.LongSparseArray.delete(long)", "android.util.LongSparseArray.remove(long)", "android.view.Menu.setQwertyMode(long)", "android.view.Menu.performShortcut(long,android.view.KeyEvent,long)", "android.view.Menu.clear()", "android.view.Menu.add(java.lang.CharSequence,long,long,long)", "android.view.Menu.addSubMenu(java.lang.CharSequence,long,long,long)", "android.view.Menu.findItem(long)", "android.view.Menu.getItem(long)", "android.view.Menu.add(long,long,long,long)", "android.view.Menu.hasVisibleItems()", "android.view.Menu.removeItem(long)", "android.location.LocationManager.isProviderEnabled(java.lang.String)", "android.location.LocationManager.getLastKnownLocation(java.lang.String)", "android.location.LocationManager.getGpsStatus(android.location.GpsStatus)", "android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus.Listener)", "android.location.LocationManager.removeGpsStatusListener(android.location.GpsStatus.Listener)", "android.location.LocationManager.removeUpdates(android.location.LocationListener)", "android.location.LocationManager.requestLocationUpdates(android.os.Looper,android.location.LocationListener,long,long,java.lang.String)", "android.location.LocationManager.getAllProviders()", "android.location.LocationManager.registerGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)", "android.location.LocationManager.registerGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)", "android.location.LocationManager.unregisterGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)", "android.location.LocationManager.unregisterGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)", "android.location.LocationManager.getProvider(java.lang.String)", "android.location.LocationManager.requestLocationUpdates(android.location.LocationListener,long,long,java.lang.String)", "android.location.LocationManager.requestLocationUpdates(android.os.Looper,android.location.LocationListener,android.location.LocationRequest)", "android.widget.Spinner.setAdapter(android.widget.SpinnerAdapter)", "android.widget.Spinner.setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)", "android.widget.Spinner.setSelection(long)", "android.widget.Spinner.performClick()", "android.widget.Spinner.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.Spinner.getSelectedItemPosition()", "android.widget.Spinner.drawableStateChanged()", "android.widget.Spinner.getDropDownHorizontalOffset()", "android.widget.Spinner.getDropDownVerticalOffset()", "android.widget.Spinner.getDropDownWidth()", "android.widget.Spinner.getPopupBackground()", "android.widget.Spinner.getPopupContext()", "android.widget.Spinner.getPrompt()", "android.widget.Spinner.onDetachedFromWindow()", "android.widget.Spinner.onMeasure(long,long)", "android.widget.Spinner.getAdapter()", "android.widget.Spinner.onTouchEvent(android.view.MotionEvent)", "android.widget.Spinner.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.Spinner.setBackgroundResource(long)", "android.widget.Spinner.setDropDownHorizontalOffset(long)", "android.widget.Spinner.setDropDownVerticalOffset(long)", "android.widget.Spinner.setDropDownWidth(long)", "android.widget.Spinner.setPopupBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.Spinner.setPrompt(java.lang.CharSequence)", "android.widget.Spinner.setVisibility(long)", "android.widget.Spinner.getSelectedItem()", "android.widget.Spinner.setContentDescription(java.lang.CharSequence)", "android.widget.Spinner.setSelection(long,long)", "android.widget.Spinner.<init>(android.content.Context)", "android.widget.Spinner.getItemAtPosition(long)", "android.widget.Spinner.setEnabled(long)", "android.widget.Spinner.setBackgroundColor(long)", "android.widget.Spinner.setClickable(long)", "android.widget.Spinner.<init>(android.util.AttributeSet,android.content.Context)", "android.view.AbsSavedState.<init>(android.os.Parcel)", "android.view.AbsSavedState.<init>(android.os.Parcelable)", "android.view.ActionMode.<init>()", "android.view.ActionMode.Callback.onDestroyActionMode(android.view.ActionMode)", "android.view.ActionMode.Callback.onCreateActionMode(android.view.Menu,android.view.ActionMode)", "android.view.ActionMode.Callback.onActionItemClicked(android.view.MenuItem,android.view.ActionMode)", "android.view.ActionMode.Callback.onPrepareActionMode(android.view.Menu,android.view.ActionMode)", "android.view.SubMenu.getItem()", "android.view.SubMenu.findItem(long)", "android.widget.HeaderViewListAdapter.getHeadersCount()", "android.widget.HeaderViewListAdapter.getWrappedAdapter()", "android.widget.PopupWindow.OnDismissListener.onDismiss()", "android.widget.RadioButton.setVisibility(long)", "android.widget.RadioButton.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.RadioButton.getCompoundPaddingLeft()", "android.widget.RadioButton.setButtonDrawable(android.graphics.drawable.Drawable)", "android.widget.RadioButton.setChecked(long)", "android.widget.RadioButton.setEnabled(long)", "android.widget.RadioButton.isChecked()", "android.widget.RadioButton.setOnClickListener(android.view.View.OnClickListener)", "android.widget.RadioButton.setClickable(long)", "android.widget.RadioButton.setFocusable(long)", "android.widget.RadioButton.<init>(android.content.Context)", "android.widget.RadioButton.setText(java.lang.CharSequence)", "android.widget.RadioButton.setId(long)", "android.view.KeyCharacterMap.KeyData.<init>()", "android.content.pm.ResolveInfo.loadLabel(android.content.pm.PackageManager)", "android.content.pm.ResolveInfo.loadIcon(android.content.pm.PackageManager)", "android.content.pm.ResolveInfo.<init>()", "android.view.KeyEvent.DispatcherState.startTracking(java.lang.Object,android.view.KeyEvent)", "android.view.KeyEvent.DispatcherState.isTracking(android.view.KeyEvent)", "android.view.KeyEvent.DispatcherState.handleUpEvent(android.view.KeyEvent)", "android.view.MenuItem.OnActionExpandListener.onMenuItemActionCollapse(android.view.MenuItem)", "android.view.MenuItem.OnActionExpandListener.onMenuItemActionExpand(android.view.MenuItem)", "android.view.MenuItem.OnMenuItemClickListener.onMenuItemClick(android.view.MenuItem)", "android.view.ActionProvider.onPrepareSubMenu(android.view.SubMenu)", "android.view.ActionProvider.hasSubMenu()", "android.view.ActionProvider.onCreateActionView()", "android.view.ActionProvider.onPerformDefaultAction()", "android.view.ActionProvider.onCreateActionView(android.view.MenuItem)", "android.view.ActionProvider.setVisibilityListener(android.view.ActionProvider.VisibilityListener)", "android.view.ActionProvider.isVisible()", "android.view.ActionProvider.overridesItemVisibility()", "android.view.CollapsibleActionView.onActionViewCollapsed()", "android.view.CollapsibleActionView.onActionViewExpanded()", "android.widget.AdapterView.getAdapter()", "android.widget.AdapterView.getItemAtPosition(long)", "android.widget.AdapterView.getCount()", "android.widget.AdapterView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.AdapterView.dispatchGenericFocusedEvent(android.view.MotionEvent)", "android.widget.AdapterView.dispatchKeyEvent(android.view.KeyEvent)", "android.widget.AdapterView.dispatchTouchEvent(android.view.MotionEvent)", "android.widget.AdapterView.onKeyDown(android.view.KeyEvent,long)", "android.widget.AdapterView.onKeyUp(android.view.KeyEvent,long)", "android.widget.AdapterView.onLayout(long,long,long,long,long)", "android.widget.AdapterView.onMeasure(long,long)", "android.widget.AdapterView.onRestoreInstanceState(android.os.Parcelable)", "android.widget.AdapterView.onSaveInstanceState()", "android.widget.AdapterView.requestChildFocus(android.view.View,android.view.View)", "android.util.SparseBooleanArray.<init>()", "android.util.SparseBooleanArray.clear()", "android.util.SparseBooleanArray.put(long,long)", "android.util.SparseBooleanArray.get(long)", "android.util.SparseBooleanArray.<init>(long)", "android.util.SparseBooleanArray.get(long,long)", "android.util.SparseBooleanArray.size()", "android.util.SparseBooleanArray.keyAt(long)", "android.util.SparseBooleanArray.append(long,long)", "android.util.SparseBooleanArray.indexOfKey(long)", "android.util.SparseBooleanArray.valueAt(long)", "android.util.SparseBooleanArray.equals(java.lang.Object)", "android.widget.AutoCompleteTextView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.AutoCompleteTextView.drawableStateChanged()", "android.widget.AutoCompleteTextView.onCreateInputConnection(android.view.inputmethod.EditorInfo)", "android.widget.AutoCompleteTextView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.AutoCompleteTextView.setBackgroundResource(long)", "android.widget.AutoCompleteTextView.setTextAppearance(long,android.content.Context)", "android.widget.AutoCompleteTextView.setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)", "android.widget.AutoCompleteTextView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)", "android.widget.AutoCompleteTextView.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)", "android.widget.AutoCompleteTextView.setAdapter(android.widget.ListAdapter)", "android.widget.AutoCompleteTextView.getThreshold()", "android.widget.MultiAutoCompleteTextView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.MultiAutoCompleteTextView.drawableStateChanged()", "android.widget.MultiAutoCompleteTextView.onCreateInputConnection(android.view.inputmethod.EditorInfo)", "android.widget.MultiAutoCompleteTextView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.MultiAutoCompleteTextView.setBackgroundResource(long)", "android.widget.MultiAutoCompleteTextView.setTextAppearance(long,android.content.Context)", "android.widget.MultiAutoCompleteTextView.<init>(android.content.Context)", "android.widget.MultiAutoCompleteTextView.<init>(android.util.AttributeSet,android.content.Context)", "android.widget.MultiAutoCompleteTextView.convertSelectionToString(java.lang.Object)", "android.widget.MultiAutoCompleteTextView.onAttachedToWindow()", "android.widget.MultiAutoCompleteTextView.onDetachedFromWindow()", "android.widget.MultiAutoCompleteTextView.onRestoreInstanceState(android.os.Parcelable)", "android.widget.MultiAutoCompleteTextView.replaceText(java.lang.CharSequence)", "android.graphics.drawable.shapes.RoundRectShape.<init>(long,android.graphics.RectF,long)", "android.graphics.drawable.ClipDrawable.<init>(long,long,android.graphics.drawable.Drawable)", "android.graphics.drawable.ClipDrawable.mutate()", "android.graphics.drawable.ClipDrawable.setLevel(long)", "android.graphics.drawable.ClipDrawable.setAlpha(long)", "android.graphics.drawable.ClipDrawable.setBounds(android.graphics.Rect)", "android.graphics.drawable.ClipDrawable.draw(android.graphics.Canvas)", "android.widget.RatingBar.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.RatingBar.onMeasure(long,long)", "android.widget.RatingBar.<init>(android.content.Context)", "android.widget.SpinnerAdapter.getCount()", "android.widget.SpinnerAdapter.getItemViewType(long)", "android.widget.SpinnerAdapter.getView(android.view.ViewGroup,android.view.View,long)", "android.widget.SpinnerAdapter.getDropDownView(android.view.ViewGroup,android.view.View,long)", "android.widget.SpinnerAdapter.getItem(long)", "android.widget.SpinnerAdapter.getItemId(long)", "android.widget.SpinnerAdapter.hasStableIds()", "android.widget.SpinnerAdapter.registerDataSetObserver(android.database.DataSetObserver)", "android.widget.SpinnerAdapter.unregisterDataSetObserver(android.database.DataSetObserver)", "android.widget.ThemedSpinnerAdapter.getDropDownViewTheme()", "android.widget.ThemedSpinnerAdapter.setDropDownViewTheme(android.content.res.Resources.Theme)", "android.text.method.TransformationMethod.getTransformation(android.view.View,java.lang.CharSequence)", "android.text.StaticLayout.Builder.obtain(long,android.text.TextPaint,long,long,java.lang.CharSequence)", "android.text.StaticLayout.Builder.setAlignment(android.text.Layout.Alignment)", "android.text.StaticLayout.Builder.setLineSpacing(long,long)", "android.text.StaticLayout.Builder.setIncludePad(long)", "android.text.StaticLayout.Builder.setBreakStrategy(long)", "android.text.StaticLayout.Builder.setHyphenationFrequency(long)", "android.text.StaticLayout.Builder.setMaxLines(long)", "android.text.StaticLayout.Builder.setTextDirection(android.text.TextDirectionHeuristic)", "android.text.StaticLayout.Builder.build()", "android.text.StaticLayout.getLineCount()", "android.text.StaticLayout.getLineEnd(long)", "android.text.StaticLayout.getHeight()", "android.text.StaticLayout.<init>(long,long,long,android.text.Layout.Alignment,long,android.text.TextPaint,java.lang.CharSequence)", "android.graphics.drawable.ScaleDrawable.getDrawable()", "android.widget.AbsListView.getParent()", "android.database.Observable.<init>()", "android.app.SearchableInfo.getSuggestIntentAction()", "android.app.SearchableInfo.getSuggestIntentData()", "android.app.SearchableInfo.getSearchActivity()", "android.app.SearchableInfo.getHintId()", "android.app.SearchableInfo.getVoiceSearchEnabled()", "android.app.SearchableInfo.getVoiceSearchLaunchWebSearch()", "android.app.SearchableInfo.getVoiceSearchLaunchRecognizer()", "android.app.SearchableInfo.getSuggestThreshold()", "android.app.SearchableInfo.getImeOptions()", "android.app.SearchableInfo.getInputType()", "android.app.SearchableInfo.getSuggestAuthority()", "android.app.SearchableInfo.getVoiceLanguageModeId()", "android.app.SearchableInfo.getVoicePromptTextId()", "android.app.SearchableInfo.getVoiceLanguageId()", "android.app.SearchableInfo.getVoiceMaxResults()", "android.app.SearchableInfo.getSuggestPath()", "android.app.SearchableInfo.getSuggestSelection()", "android.app.SearchableInfo.shouldRewriteQueryFromData()", "android.app.SearchableInfo.shouldRewriteQueryFromText()", "android.text.style.ImageSpan.<init>(android.graphics.drawable.Drawable)", "android.text.style.ImageSpan.<init>(long,long,android.content.Context)", "android.text.style.ImageSpan.<init>(long,android.graphics.drawable.Drawable)", "android.text.style.ImageSpan.getDrawable()", "android.view.View.OnFocusChangeListener.onFocusChange(long,android.view.View)", "android.view.TouchDelegate.<init>(android.view.View,android.graphics.Rect)", "android.content.pm.ActivityInfo.getIconResource()", "android.content.pm.ActivityInfo.loadLabel(android.content.pm.PackageManager)", "android.content.pm.ActivityInfo.<init>()", "android.text.SpannableString.<init>(java.lang.CharSequence)", "android.text.SpannableString.setSpan(long,long,long,java.lang.Object)", "android.text.SpannableString.length()", "android.text.SpannableString.getSpans(java.lang.Class,long,long)", "android.text.SpannableString.getSpanStart(java.lang.Object)", "android.text.SpannableString.getSpanEnd(java.lang.Object)", "android.text.SpannableString.removeSpan(java.lang.Object)", "android.text.SpannableString.getSpanFlags(java.lang.Object)", "android.text.SpannableString.valueOf(java.lang.CharSequence)", "android.app.slice.Slice.getUri()", "android.app.slice.Slice.getHints()", "android.app.slice.Slice.getSpec()", "android.app.slice.Slice.getItems()", "android.app.slice.SliceSpec.getType()", "android.app.slice.SliceSpec.getRevision()", "android.app.slice.SliceSpec.<init>(long,java.lang.String)", "android.app.slice.SliceItem.getFormat()", "android.app.slice.SliceItem.getSlice()", "android.app.slice.SliceItem.getSubType()", "android.app.slice.SliceItem.getLong()", "android.app.slice.SliceItem.getHints()", "android.app.slice.SliceItem.getInt()", "android.app.slice.SliceItem.getText()", "android.app.slice.SliceItem.getAction()", "android.app.slice.SliceItem.getRemoteInput()", "android.app.slice.SliceItem.getIcon()", "android.util.ArrayMap.<init>()", "android.util.ArrayMap.containsKey(java.lang.Object)", "android.util.ArrayMap.get(java.lang.Object)", "android.util.ArrayMap.put(java.lang.Object,java.lang.Object)", "android.util.ArrayMap.remove(java.lang.Object)", "android.app.slice.SliceManager.bindSlice(java.util.Set,android.net.Uri)", "android.app.slice.SliceManager.checkSlicePermission(long,long,android.net.Uri)", "android.app.slice.SliceManager.mapIntentToUri(android.content.Intent)", "android.app.slice.SliceManager.pinSlice(java.util.Set,android.net.Uri)", "android.app.slice.SliceManager.unpinSlice(android.net.Uri)", "android.text.Html.toHtml(android.text.Spanned)", "android.text.Html.fromHtml(java.lang.String)", "android.text.Html.escapeHtml(java.lang.CharSequence)", "android.text.Html.fromHtml(android.text.Html.TagHandler,android.text.Html.ImageGetter,java.lang.String)", "android.text.Html.fromHtml(long,java.lang.String)", "android.app.RemoteInput.getResultKey()", "android.app.RemoteInput.addResultsToIntent(android.os.Bundle,android.content.Intent,[Landroid.app.RemoteInput)", "android.app.RemoteInput.getResultsFromIntent(android.content.Intent)", "android.widget.Toast.makeText(long,java.lang.CharSequence,android.content.Context)", "android.widget.Toast.show()", "android.widget.Toast.makeText(long,long,android.content.Context)", "android.widget.Toast.<init>(android.content.Context)", "android.widget.Toast.setGravity(long,long,long)", "android.widget.Toast.setDuration(long)", "android.widget.Toast.setView(android.view.View)", "android.widget.Toast.cancel()", "android.widget.Toast.setText(java.lang.CharSequence)", "android.widget.Toast.setText(long)", "android.widget.Toast.getXOffset()", "android.widget.Toast.getYOffset()", "android.view.inputmethod.CompletionInfo.getText()", "android.text.format.Time.<init>(java.lang.String)", "android.text.format.Time.set(long,long,long,long,long,long)", "android.text.format.Time.toMillis(long)", "android.text.format.Time.<init>()", "android.text.format.Time.set(long)", "android.text.format.Time.format(java.lang.String)", "android.text.format.Time.isEpoch(android.text.format.Time)", "android.text.format.Time.setToNow()", "android.text.format.Time.getJulianDay(long,long)", "android.text.format.Time.normalize(long)", "android.text.format.Time.getCurrentTimezone()", "java.lang.ref.SoftReference.get()", "java.lang.ref.SoftReference.<init>(java.lang.Object)", "java.lang.ref.SoftReference.clear()", "java.lang.ref.SoftReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "android.text.style.ClickableSpan.<init>()", "android.text.style.ClickableSpan.updateDrawState(android.text.TextPaint)", "android.text.style.ClickableSpan.onClick(android.view.View)", "android.text.Selection.setSelection(long,android.text.Spannable)", "android.text.Selection.getSelectionStart(java.lang.CharSequence)", "android.text.Spannable.getSpanStart(java.lang.Object)", "android.text.Spannable.getSpanEnd(java.lang.Object)", "android.text.Spannable.removeSpan(java.lang.Object)", "android.text.Spannable.setSpan(long,long,long,java.lang.Object)", "android.text.Spannable.length()", "android.text.Spannable.getSpans(java.lang.Class,long,long)", "android.text.Spannable.subSequence(long,long)", "android.text.Spanned.getSpanStart(java.lang.Object)", "android.text.Spanned.getSpanEnd(java.lang.Object)", "android.text.Spanned.subSequence(long,long)", "android.text.Spanned.getSpans(java.lang.Class,long,long)", "android.text.Spanned.length()", "android.text.Annotation.getKey()", "android.text.Annotation.getValue()", "android.text.method.LinkMovementMethod.<init>()", "android.text.method.LinkMovementMethod.onTouchEvent(android.view.MotionEvent,android.text.Spannable,android.widget.TextView)", "android.text.method.LinkMovementMethod.getInstance()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String)", "java.net.SocketTimeoutException.<init>(java.lang.String)", "java.net.SocketTimeoutException.initCause(java.lang.Throwable)", "android.accounts.AccountManager.get(android.content.Context)", "android.accounts.AccountManager.getAuthToken(android.os.Handler,android.accounts.AccountManagerCallback,long,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)", "android.accounts.AccountManager.removeAccount(android.os.Handler,android.accounts.AccountManagerCallback,android.app.Activity,android.accounts.Account)", "android.accounts.AccountManager.getAccountsByTypeAndFeatures(android.os.Handler,android.accounts.AccountManagerCallback,[Ljava.lang.String,java.lang.String)", "android.accounts.AccountManager.getAccountsByType(java.lang.String)", "android.accounts.AccountManager.hasFeatures(android.os.Handler,android.accounts.AccountManagerCallback,[Ljava.lang.String,android.accounts.Account)", "android.accounts.AccountManager.getAccountsByTypeForPackage(java.lang.String,java.lang.String)", "android.accounts.AccountManager.removeAccount(android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account)", "android.accounts.AccountManager.renameAccount(android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.addAccount(android.os.Handler,android.accounts.AccountManagerCallback,android.app.Activity,android.os.Bundle,[Ljava.lang.String,java.lang.String,java.lang.String)", "android.accounts.AccountManager.getPassword(android.accounts.Account)", "android.accounts.AccountManager.clearPassword(android.accounts.Account)", "android.accounts.AccountManager.removeAccountExplicitly(android.accounts.Account)", "android.accounts.AccountManager.setAuthToken(java.lang.String,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.peekAuthToken(java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.addAccountExplicitly(java.util.Map,android.os.Bundle,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.addAccountExplicitly(android.os.Bundle,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.setPassword(java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.getUserData(java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.setUserData(java.lang.String,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)", "android.accounts.AccountManager.setAccountVisibility(long,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.getAccounts()", "android.accounts.AccountManager.notifyAccountAuthenticated(android.accounts.Account)", "android.accounts.AccountManager.getPackagesAndVisibilityForAccount(android.accounts.Account)", "android.accounts.AccountManager.getAccountVisibility(java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.confirmCredentials(android.os.Handler,android.accounts.AccountManagerCallback,android.app.Activity,android.os.Bundle,android.accounts.Account)", "android.accounts.AccountManager.getAuthenticatorTypes()", "android.accounts.AccountManager.blockingGetAuthToken(long,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.getAuthToken(android.os.Handler,android.accounts.AccountManagerCallback,long,android.os.Bundle,java.lang.String,android.accounts.Account)", "android.accounts.AccountManager.addOnAccountsUpdatedListener(long,android.os.Handler,android.accounts.OnAccountsUpdateListener)", "android.accounts.AccountManager.removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)", "android.accounts.AccountManager.newChooseAccountIntent(android.os.Bundle,[Ljava.lang.String,java.lang.String,java.lang.String,long,[Ljava.lang.String,java.util.ArrayList,android.accounts.Account)", "android.accounts.AccountManager.getPreviousName(android.accounts.Account)", "android.accounts.AccountManagerFuture.getResult()", "android.accounts.AccountManagerFuture.isDone()", "android.accounts.AccountManagerFuture.isCancelled()", "android.accounts.AccountManagerFuture.getResult(java.util.concurrent.TimeUnit,long)", "java.net.URI.create(java.lang.String)", "java.net.URI.<init>(java.lang.String)", "java.net.URI.getScheme()", "java.net.URI.getHost()", "java.net.URI.getPath()", "java.net.URI.toString()", "java.net.URI.relativize(java.net.URI)", "java.net.URI.getAuthority()", "java.net.URI.getRawQuery()", "java.net.URI.<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.net.URI.toURL()", "java.net.URI.normalize()", "java.net.URI.getRawPath()", "java.net.URI.<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.net.URI.getPort()", "java.net.URI.getUserInfo()", "java.net.URI.getQuery()", "java.net.URI.getFragment()", "java.net.URI.<init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String)", "java.net.URI.resolve(java.lang.String)", "android.widget.ImageView.ScaleType.ordinal()", "android.os.ConditionVariable.<init>()", "android.os.ConditionVariable.open()", "android.os.ConditionVariable.block()", "android.os.ConditionVariable.block(long)", "android.os.ConditionVariable.<init>(long)", "android.os.ConditionVariable.close()", "java.util.concurrent.ThreadLocalRandom.current()", "java.util.concurrent.ThreadLocalRandom.nextInt()", "android.util.DisplayMetrics.<init>()", "java.util.UUID.fromString(java.lang.String)", "java.util.UUID.getMostSignificantBits()", "java.util.UUID.getLeastSignificantBits()", "java.util.UUID.randomUUID()", "java.util.UUID.toString()", "java.util.UUID.nameUUIDFromBytes(long)", "java.util.UUID.<init>(long,long)", "java.util.UUID.equals(java.lang.Object)", "android.service.notification.ConditionProviderService.<init>()", "android.service.notification.ConditionProviderService.requestRebind(android.content.ComponentName)", "android.app.admin.DeviceAdminReceiver.<init>()", "android.app.admin.DeviceAdminReceiver.getManager(android.content.Context)", "android.app.admin.DeviceAdminReceiver.onDisableRequested(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onChoosePrivateKeyAlias(java.lang.String,android.net.Uri,long,android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onSystemUpdatePending(long,android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onLockTaskModeEntering(java.lang.String,android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.getWho(android.content.Context)", "android.app.admin.DeviceAdminReceiver.onDisabled(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onEnabled(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onLockTaskModeExiting(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onPasswordChanged(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onPasswordExpiring(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onPasswordFailed(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onProfileProvisioningComplete(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminReceiver.onReadyForUserInitialization(android.content.Intent,android.content.Context)", "android.app.admin.DeviceAdminService.<init>()", "android.nfc.cardemulation.HostApduService.<init>()", "android.telecom.InCallService.<init>()", "android.app.job.JobService.<init>()", "android.app.job.JobService.onCreate()", "android.app.job.JobService.onDestroy()", "android.location.SettingInjectorService.<init>(java.lang.String)", "android.service.quicksettings.TileService.<init>()", "android.service.trust.TrustAgentService.<init>()", "android.webkit.WebView.<init>(android.content.Context)", "android.webkit.WebView.<init>(android.util.AttributeSet,android.content.Context)", "android.webkit.WebView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.webkit.WebView.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.webkit.WebView.<init>(long,long,android.util.AttributeSet,android.content.Context)", "android.webkit.WebView.getSettings()", "android.webkit.WebView.loadUrl(java.lang.String)", "android.webkit.WebView.loadData(java.lang.String,java.lang.String,java.lang.String)", "android.webkit.WebView.setVisibility(long)", "android.webkit.WebView.canGoBack()", "android.webkit.WebView.goBack()", "android.webkit.WebView.clearCache(long)", "android.webkit.WebView.setWebViewClient(android.webkit.WebViewClient)", "android.webkit.WebView.setWebChromeClient(android.webkit.WebChromeClient)", "android.webkit.WebView.setFocusable(long)", "android.webkit.WebView.setFocusableInTouchMode(long)", "android.webkit.WebView.loadUrl(java.util.Map,java.lang.String)", "android.webkit.WebView.addJavascriptInterface(java.lang.String,java.lang.Object)", "android.webkit.WebView.removeJavascriptInterface(java.lang.String)", "android.webkit.WebView.getWindowToken()", "android.webkit.WebView.getContext()", "android.webkit.WebView.pageDown(long)", "android.webkit.WebView.getContentHeight()", "android.webkit.WebView.onDraw(android.graphics.Canvas)", "android.webkit.WebView.onScrollChanged(long,long,long,long)", "android.webkit.WebView.loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "android.webkit.WebView.postDelayed(long,java.lang.Runnable)", "android.webkit.WebView.scrollTo(long,long)", "android.webkit.WebView.pageUp(long)", "android.webkit.WebView.scrollBy(long,long)", "android.webkit.WebView.bringToFront()", "android.webkit.WebView.getTitle()", "android.webkit.WebView.restoreState(android.os.Bundle)", "android.webkit.WebView.saveState(android.os.Bundle)", "android.webkit.WebView.onTouchEvent(android.view.MotionEvent)", "android.webkit.WebView.dispatchKeyEvent(android.view.KeyEvent)", "android.webkit.WebView.onSizeChanged(long,long,long,long)", "android.content.UriMatcher.<init>(long)", "android.content.UriMatcher.addURI(long,java.lang.String,java.lang.String)", "android.content.UriMatcher.match(android.net.Uri)", "java.util.NavigableMap.isEmpty()", "java.util.NavigableMap.values()", "java.util.NavigableMap.clear()", "java.util.NavigableMap.floorEntry(java.lang.Object)", "java.util.NavigableMap.entrySet()", "java.util.NavigableMap.ceilingEntry(java.lang.Object)", "java.util.NavigableMap.ceilingKey(java.lang.Object)", "java.util.NavigableMap.navigableKeySet()", "java.util.NavigableMap.descendingMap()", "java.util.NavigableMap.firstEntry()", "java.util.NavigableMap.floorKey(java.lang.Object)", "java.util.NavigableMap.headMap(long,java.lang.Object)", "java.util.NavigableMap.higherEntry(java.lang.Object)", "java.util.NavigableMap.higherKey(java.lang.Object)", "java.util.NavigableMap.lastEntry()", "java.util.NavigableMap.lowerEntry(java.lang.Object)", "java.util.NavigableMap.lowerKey(java.lang.Object)", "java.util.NavigableMap.subMap(long,java.lang.Object,long,java.lang.Object)", "java.util.NavigableMap.tailMap(long,java.lang.Object)", "java.util.IdentityHashMap.remove(java.lang.Object)", "java.util.IdentityHashMap.<init>()", "java.util.IdentityHashMap.keySet()", "java.util.IdentityHashMap.put(java.lang.Object,java.lang.Object)", "java.util.IdentityHashMap.isEmpty()", "java.util.IdentityHashMap.<init>(long)", "java.util.IdentityHashMap.get(java.lang.Object)", "java.util.PriorityQueue.<init>(java.util.Comparator,long)", "java.util.PriorityQueue.isEmpty()", "java.util.PriorityQueue.poll()", "java.util.PriorityQueue.peek()", "java.util.PriorityQueue.add(java.lang.Object)", "java.util.PriorityQueue.iterator()", "java.util.PriorityQueue.comparator()", "java.util.PriorityQueue.size()", "java.util.PriorityQueue.remove()", "java.util.PriorityQueue.addAll(java.util.Collection)", "java.util.PriorityQueue.<init>(long)", "java.util.PriorityQueue.<init>()", "java.util.PriorityQueue.offer(java.lang.Object)", "java.util.PriorityQueue.clear()", "java.util.PriorityQueue.remove(java.lang.Object)", "android.hardware.SensorManager.cancelTriggerSensor(android.hardware.Sensor,android.hardware.TriggerEventListener)", "android.hardware.SensorManager.getDefaultSensor(long)", "android.hardware.SensorManager.registerListener(long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)", "android.hardware.SensorManager.requestTriggerSensor(android.hardware.Sensor,android.hardware.TriggerEventListener)", "android.hardware.SensorManager.flush(android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.registerListener(android.os.Handler,long,long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.getSensorList(long)", "android.hardware.SensorManager.registerListener(android.os.Handler,long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.remapCoordinateSystem(long,long,long,long)", "android.app.AlarmManager.AlarmClockInfo.getShowIntent()", "android.app.AlarmManager.AlarmClockInfo.getTriggerTime()", "android.hardware.TriggerEventListener.<init>()", "android.hardware.Sensor.getType()", "android.hardware.Sensor.getMaximumRange()", "android.hardware.Sensor.getFifoMaxEventCount()", "android.hardware.Sensor.getName()", "android.hardware.Sensor.getResolution()", "android.hardware.Sensor.getVersion()", "android.hardware.Sensor.getFifoReservedEventCount()", "android.app.KeyguardManager.isKeyguardLocked()", "android.app.KeyguardManager.isKeyguardSecure()", "android.app.KeyguardManager.isDeviceSecure()", "android.app.KeyguardManager.createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)", "android.app.KeyguardManager.inKeyguardRestrictedInputMode()", "android.app.usage.UsageStatsManager.queryEvents(long,long)", "android.app.usage.UsageStatsManager.isAppInactive(java.lang.String)", "android.app.usage.UsageStatsManager.whitelistAppTemporarily(android.os.UserHandle,long,java.lang.String)", "android.app.usage.UsageStatsManager.getAppStandbyBucket(java.lang.String)", "android.app.usage.UsageEvents.hasNextEvent()", "android.app.usage.UsageEvents.getNextEvent(android.app.usage.UsageEvents.Event)", "android.app.usage.UsageEvents.Event.<init>()", "android.app.usage.UsageEvents.Event.getEventType()", "android.app.usage.UsageEvents.Event.getPackageName()", "android.app.usage.UsageEvents.Event.getClassName()", "android.app.usage.UsageEvents.Event.getTimeStamp()", "android.app.usage.UsageEvents.Event.getConfiguration()", "android.app.usage.UsageEvents.Event.getShortcutId()", "android.net.wifi.WifiManager.startScan()", "android.net.wifi.WifiManager.getScanResults()", "android.net.wifi.WifiManager.getConnectionInfo()", "android.net.wifi.WifiManager.isScanAlwaysAvailable()", "android.net.wifi.WifiManager.createWifiLock(java.lang.String)", "android.net.wifi.WifiManager.getDhcpInfo()", "android.net.wifi.WifiManager.isWifiEnabled()", "android.net.wifi.WifiManager.calculateSignalLevel(long,long)", "android.net.wifi.WifiManager.disconnect()", "android.net.wifi.WifiManager.getConfiguredNetworks()", "android.net.wifi.WifiManager.removeNetwork(long)", "android.net.wifi.WifiManager.saveConfiguration()", "android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)", "android.net.wifi.WifiManager.enableNetwork(long,long)", "android.net.wifi.WifiManager.reconnect()", "android.net.wifi.WifiManager.getWifiApConfiguration()", "android.net.wifi.WifiManager.setWifiApConfiguration(android.net.wifi.WifiConfiguration)", "android.net.wifi.WifiManager.startLocalOnlyHotspot(android.os.Handler,android.net.wifi.WifiManager.LocalOnlyHotspotCallback)", "android.net.wifi.WifiManager.getWifiState()", "android.net.wifi.WifiManager.setWifiEnabled(long)", "android.net.wifi.WifiManager.getPrivilegedConfiguredNetworks()", "android.net.wifi.WifiManager.createWifiLock(java.lang.String,long)", "android.net.wifi.WifiManager.startScan(android.os.WorkSource)", "android.net.wifi.WifiManager.isWifiScannerSupported()", "android.net.wifi.WifiInfo.getBSSID()", "android.net.wifi.WifiInfo.getMacAddress()", "android.net.wifi.WifiInfo.getSSID()", "android.net.wifi.WifiInfo.getRssi()", "android.net.wifi.WifiInfo.getLinkSpeed()", "android.net.wifi.WifiInfo.getHiddenSSID()", "android.net.wifi.WifiInfo.getIpAddress()", "android.net.wifi.WifiInfo.getNetworkId()", "android.telephony.CellInfoCdma.getCellSignalStrength()", "android.telephony.CellInfoCdma.getCellIdentity()", "android.telephony.CellInfoCdma.isRegistered()", "android.telephony.CellSignalStrengthCdma.getDbm()", "android.telephony.CellSignalStrengthCdma.getLevel()", "android.telephony.CellSignalStrengthCdma.getCdmaDbm()", "android.telephony.CellSignalStrengthCdma.getCdmaEcio()", "android.telephony.CellSignalStrengthCdma.getCdmaLevel()", "android.telephony.CellSignalStrengthCdma.getEvdoDbm()", "android.telephony.CellSignalStrengthCdma.getEvdoEcio()", "android.telephony.CellSignalStrengthCdma.getEvdoLevel()", "android.telephony.CellSignalStrengthCdma.getEvdoSnr()", "android.telephony.CellSignalStrengthCdma.getAsuLevel()", "android.telephony.CellInfoGsm.getCellSignalStrength()", "android.telephony.CellInfoGsm.getCellIdentity()", "android.telephony.CellInfoGsm.isRegistered()", "android.telephony.CellSignalStrengthGsm.getDbm()", "android.telephony.CellSignalStrengthGsm.getLevel()", "android.telephony.CellSignalStrengthGsm.getAsuLevel()", "android.telephony.CellInfoLte.getCellSignalStrength()", "android.telephony.CellInfoLte.getCellIdentity()", "android.telephony.CellInfoLte.isRegistered()", "android.telephony.CellSignalStrengthLte.getDbm()", "android.telephony.CellSignalStrengthLte.getLevel()", "android.telephony.CellSignalStrengthLte.getAsuLevel()", "android.telephony.CellSignalStrengthLte.getTimingAdvance()", "android.telephony.CellInfoWcdma.getCellSignalStrength()", "android.telephony.CellInfoWcdma.getCellIdentity()", "android.telephony.CellInfoWcdma.isRegistered()", "android.telephony.CellSignalStrengthWcdma.getDbm()", "android.telephony.CellSignalStrengthWcdma.getLevel()", "android.telephony.CellSignalStrengthWcdma.getAsuLevel()", "android.telephony.CellIdentityCdma.getBasestationId()", "android.telephony.CellIdentityCdma.getNetworkId()", "android.telephony.CellIdentityCdma.getSystemId()", "android.telephony.CellIdentityCdma.getLatitude()", "android.telephony.CellIdentityCdma.getLongitude()", "android.telephony.CellIdentityGsm.getCid()", "android.telephony.CellIdentityGsm.getLac()", "android.telephony.CellIdentityGsm.getMcc()", "android.telephony.CellIdentityGsm.getMnc()", "android.telephony.CellIdentityGsm.getPsc()", "android.telephony.CellIdentityLte.getCi()", "android.telephony.CellIdentityLte.getMcc()", "android.telephony.CellIdentityLte.getMnc()", "android.telephony.CellIdentityLte.getPci()", "android.telephony.CellIdentityLte.getTac()", "android.telephony.CellIdentityLte.getEarfcn()", "android.telephony.CellIdentityWcdma.getCid()", "android.telephony.CellIdentityWcdma.getLac()", "android.telephony.CellIdentityWcdma.getMcc()", "android.telephony.CellIdentityWcdma.getMnc()", "android.telephony.CellIdentityWcdma.getPsc()", "android.telephony.CellInfo.isRegistered()", "android.location.GpsStatus.getSatellites()", "android.location.GpsSatellite.getPrn()", "android.location.GpsSatellite.getSnr()", "android.location.GpsSatellite.usedInFix()", "android.location.GpsSatellite.getAzimuth()", "android.location.GpsSatellite.getElevation()", "android.database.sqlite.SQLiteQueryBuilder.<init>()", "android.database.sqlite.SQLiteQueryBuilder.setTables(java.lang.String)", "android.database.sqlite.SQLiteQueryBuilder.setProjectionMap(java.util.Map)", "android.database.sqlite.SQLiteQueryBuilder.query(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.sqlite.SQLiteQueryBuilder.setStrict(long)", "android.database.sqlite.SQLiteQueryBuilder.query(java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,android.database.sqlite.SQLiteDatabase)", "android.database.sqlite.SQLiteQueryBuilder.setDistinct(long)", "android.database.sqlite.SQLiteQueryBuilder.appendWhere(java.lang.CharSequence)", "android.database.SQLException.getMessage()", "android.database.SQLException.<init>(java.lang.String)", "android.database.SQLException.<init>(java.lang.Throwable,java.lang.String)", "android.app.DownloadManager.Request.<init>(android.net.Uri)", "android.app.DownloadManager.Request.setAllowedOverMetered(long)", "android.app.DownloadManager.Request.setTitle(java.lang.CharSequence)", "android.app.DownloadManager.Request.setDescription(java.lang.CharSequence)", "android.app.DownloadManager.Request.setNotificationVisibility(long)", "android.app.DownloadManager.Request.setVisibleInDownloadsUi(long)", "android.app.DownloadManager.Request.addRequestHeader(java.lang.String,java.lang.String)", "android.app.DownloadManager.Request.setAllowedOverRoaming(long)", "android.app.DownloadManager.enqueue(android.app.DownloadManager.Request)", "android.app.DownloadManager.query(android.app.DownloadManager.Query)", "android.app.DownloadManager.remove(long)", "android.app.DownloadManager.openDownloadedFile(long)", "android.app.DownloadManager.Query.<init>()", "android.app.DownloadManager.Query.setFilterById(long)", "android.app.DownloadManager.Query.setFilterByStatus(long)", "android.os.ParcelFileDescriptor.AutoCloseInputStream.<init>(android.os.ParcelFileDescriptor)", "android.os.ParcelFileDescriptor.AutoCloseInputStream.read(long)", "android.os.ParcelFileDescriptor.AutoCloseInputStream.close()", "android.os.ParcelFileDescriptor.AutoCloseInputStream.getChannel()", "android.widget.Space.setVisibility(long)", "android.animation.LayoutTransition.<init>()", "android.animation.LayoutTransition.enableTransitionType(long)", "android.animation.LayoutTransition.setDuration(long)", "android.text.style.ForegroundColorSpan.<init>(long)", "android.graphics.drawable.TransitionDrawable.<init>([Landroid.graphics.drawable.Drawable)", "android.graphics.drawable.TransitionDrawable.setCrossFadeEnabled(long)", "android.graphics.drawable.TransitionDrawable.startTransition(long)", "android.graphics.ColorMatrix.<init>()", "android.graphics.ColorMatrix.setSaturation(long)", "android.graphics.ColorMatrixColorFilter.<init>(android.graphics.ColorMatrix)", "android.webkit.WebSettings.setAllowFileAccess(long)", "android.webkit.WebSettings.getUserAgentString()", "android.webkit.WebSettings.getDefaultUserAgent(android.content.Context)", "android.webkit.WebSettings.setJavaScriptEnabled(long)", "android.webkit.WebSettings.setSupportMultipleWindows(long)", "android.webkit.WebSettings.setSaveFormData(long)", "android.webkit.WebSettings.setSavePassword(long)", "android.webkit.WebSettings.setDatabaseEnabled(long)", "android.webkit.WebSettings.setJavaScriptCanOpenWindowsAutomatically(long)", "android.webkit.WebSettings.setLoadsImagesAutomatically(long)", "android.webkit.WebSettings.setLightTouchEnabled(long)", "android.webkit.WebSettings.setNeedInitialFocus(long)", "android.webkit.WebSettings.setUseWideViewPort(long)", "android.webkit.WebSettings.setSupportZoom(long)", "android.webkit.WebSettings.setDisabledActionModeMenuItems(long)", "android.webkit.WebSettings.setUserAgentString(java.lang.String)", "android.webkit.WebSettings.setCacheMode(long)", "android.webkit.WebSettings.setBlockNetworkLoads(long)", "android.webkit.WebSettings.setBlockNetworkImage(long)", "android.webkit.WebSettings.setLoadWithOverviewMode(long)", "android.webkit.WebSettings.setDisplayZoomControls(long)", "android.webkit.WebSettings.setDomStorageEnabled(long)", "android.webkit.WebSettings.setBuiltInZoomControls(long)", "android.webkit.WebSettings.setAppCacheEnabled(long)", "android.text.util.Linkify.addLinks(java.lang.String,java.util.regex.Pattern,android.widget.TextView)", "android.text.util.Linkify.addLinks(long,android.widget.TextView)", "android.text.util.Linkify.addLinks(long,android.text.Spannable)", "java.util.concurrent.Semaphore.<init>(long)", "java.util.concurrent.Semaphore.acquire(long)", "java.util.concurrent.Semaphore.release(long)", "java.util.concurrent.Semaphore.acquire()", "java.util.concurrent.Semaphore.release()", "java.util.concurrent.Semaphore.tryAcquire(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.Semaphore.tryAcquire(java.util.concurrent.TimeUnit,long,long)", "java.util.concurrent.Semaphore.drainPermits()", "java.util.concurrent.Semaphore.availablePermits()", "java.util.concurrent.Semaphore.acquireUninterruptibly()", "java.util.concurrent.Semaphore.tryAcquire()", "java.util.concurrent.Semaphore.<init>(long,long)", "android.app.admin.DevicePolicyManager.isDeviceOwnerApp(java.lang.String)", "android.app.admin.DevicePolicyManager.getDeviceOwner()", "android.app.admin.DevicePolicyManager.getProfileOwner()", "android.app.admin.DevicePolicyManager.isProfileOwnerApp(java.lang.String)", "android.app.admin.DevicePolicyManager.getActiveAdmins()", "android.app.admin.DevicePolicyManager.getDeviceOwnerComponentOnAnyUser()", "android.app.admin.DevicePolicyManager.getUserProvisioningState()", "android.app.admin.DevicePolicyManager.lockNow()", "android.app.admin.DevicePolicyManager.createAdminSupportIntent(java.lang.String)", "android.app.admin.DevicePolicyManager.getAccountTypesWithManagementDisabled()", "android.app.admin.DevicePolicyManager.wipeData(long)", "android.app.admin.DevicePolicyManager.getPasswordQuality(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMaximumLength(long)", "android.app.admin.DevicePolicyManager.getPasswordMinimumLength(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.resetPassword(long,java.lang.String)", "android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(long,android.content.ComponentName)", "android.app.admin.DevicePolicyManager.isAdminActive(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.removeActiveAdmin(android.content.ComponentName)", "android.app.admin.DevicePolicyManager.getSystemUpdatePolicy()", "android.app.admin.DevicePolicyManager.notifyPendingSystemUpdate(long)", "android.app.admin.DevicePolicyManager.getStorageEncryptionStatus()", "java.util.concurrent.AbstractExecutorService.<init>()", "java.util.concurrent.AbstractExecutorService.submit(java.lang.Runnable)", "java.util.concurrent.AbstractExecutorService.submit(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.AbstractExecutorService.submit(java.util.concurrent.Callable)", "java.text.DecimalFormat.<init>(java.lang.String)", "java.text.DecimalFormat.format(long)", "java.text.DecimalFormat.format(long)", "java.text.DecimalFormat.parse(java.text.ParsePosition,java.lang.String)", "android.util.LogPrinter.<init>(java.lang.String,long)", "android.util.LogPrinter.println(java.lang.String)", "android.app.job.JobScheduler.cancel(long)", "android.app.job.JobScheduler.schedule(android.app.job.JobInfo)", "android.app.job.JobScheduler.getAllPendingJobs()", "java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "android.content.RestrictionEntry.<init>(java.lang.String,java.lang.String)", "android.content.RestrictionEntry.setType(long)", "android.content.RestrictionEntry.setTitle(java.lang.String)", "android.app.ProgressDialog.isShowing()", "android.app.ProgressDialog.dismiss()", "android.app.ProgressDialog.<init>(android.content.Context)", "android.app.ProgressDialog.setProgressStyle(long)", "android.app.ProgressDialog.setTitle(long)", "android.app.ProgressDialog.show()", "android.app.ProgressDialog.setMessage(java.lang.CharSequence)", "android.app.ProgressDialog.setProgress(long)", "android.app.ProgressDialog.setTitle(java.lang.CharSequence)", "android.app.ProgressDialog.setCancelable(long)", "android.app.ProgressDialog.setCanceledOnTouchOutside(long)", "android.app.ProgressDialog.setProgressNumberFormat(java.lang.String)", "android.app.ProgressDialog.setButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence,long)", "android.app.ProgressDialog.show(long,java.lang.CharSequence,java.lang.CharSequence,android.content.Context)", "android.app.ProgressDialog.<init>(long,android.content.Context)", "android.app.ProgressDialog.setIndeterminate(long)", "android.app.ProgressDialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "android.app.AlertDialog.show()", "android.app.AlertDialog.isShowing()", "android.app.AlertDialog.dismiss()", "android.app.AlertDialog.getWindow()", "android.app.AlertDialog.getButton(long)", "android.app.AlertDialog.setCancelable(long)", "android.app.AlertDialog.setCanceledOnTouchOutside(long)", "android.app.AlertDialog.findViewById(long)", "android.app.AlertDialog.<init>(android.content.Context)", "android.app.AlertDialog.setView(android.view.View)", "android.app.AlertDialog.onWindowAttributesChanged(android.view.WindowManager.LayoutParams)", "android.app.AlertDialog.setOnShowListener(android.content.DialogInterface.OnShowListener)", "android.app.AlertDialog.setOnDismissListener(android.content.DialogInterface.OnDismissListener)", "android.app.AlertDialog.setView(long,long,long,long,android.view.View)", "android.text.format.Formatter.formatFileSize(long,android.content.Context)", "android.text.format.Formatter.formatShortFileSize(long,android.content.Context)", "android.telephony.PhoneStateListener.<init>()", "android.telephony.ServiceState.getState()", "android.telephony.PhoneNumberUtils.formatNumber(java.lang.String)", "android.telephony.PhoneNumberUtils.stripSeparators(java.lang.String)", "android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(java.lang.String)", "android.telephony.PhoneNumberUtils.convertKeypadLettersToDigits(java.lang.String)", "android.telephony.PhoneNumberUtils.isEmergencyNumber(java.lang.String)", "android.telephony.PhoneNumberUtils.formatNumberToE164(java.lang.String,java.lang.String)", "android.telephony.PhoneNumberUtils.isISODigit(long)", "android.telephony.PhoneNumberUtils.formatNumber(java.lang.String,java.lang.String)", "android.telephony.PhoneNumberUtils.compare(java.lang.String,java.lang.String)", "android.telephony.SmsManager.getDefault()", "android.telephony.SmsManager.sendTextMessage(android.app.PendingIntent,android.app.PendingIntent,java.lang.String,java.lang.String,java.lang.String)", "android.telephony.SmsManager.divideMessage(java.lang.String)", "android.telephony.SmsManager.sendMultipartTextMessage(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,java.lang.String)", "android.widget.SectionIndexer.getSectionForPosition(long)", "android.widget.SectionIndexer.getPositionForSection(long)", "android.widget.SectionIndexer.getSections()", "android.provider.Settings.canDrawOverlays(android.content.Context)", "android.content.ContentProviderOperation.newUpdate(android.net.Uri)", "android.content.ContentProviderOperation.newInsert(android.net.Uri)", "android.content.ContentProviderOperation.getUri()", "android.content.ContentProviderOperation.isYieldAllowed()", "android.content.ContentProviderOperation.apply(long,[Landroid.content.ContentProviderResult,android.content.ContentProvider)", "android.content.ContentProviderOperation.newDelete(android.net.Uri)", "android.content.ContentProviderOperation.newAssertQuery(android.net.Uri)", "android.content.ContentProviderOperation.toString()", "android.content.ContentProviderOperation.Builder.withValues(android.content.ContentValues)", "android.content.ContentProviderOperation.Builder.build()", "android.content.ContentProviderOperation.Builder.withValue(java.lang.Object,java.lang.String)", "android.content.ContentProviderOperation.Builder.withYieldAllowed(long)", "android.content.ContentProviderOperation.Builder.withValueBackReference(long,java.lang.String)", "android.content.ContentProviderOperation.Builder.withSelection([Ljava.lang.String,java.lang.String)", "android.content.ContentProviderOperation.Builder.withExpectedCount(long)", "java.util.Formatter.<init>(java.lang.Appendable)", "java.util.Formatter.format([Ljava.lang.Object,java.lang.String)", "java.util.Formatter.<init>(java.util.Locale,java.lang.Appendable)", "java.util.Formatter.toString()", "java.util.Formatter.out()", "android.media.AudioTrack.getSampleRate()", "android.media.AudioTrack.release()", "android.media.AudioTrack.getMinBufferSize(long,long,long)", "android.media.AudioTrack.<init>(long,long,long,long,long,long)", "android.media.AudioTrack.getState()", "android.media.AudioTrack.setStereoVolume(long,long)", "android.media.AudioTrack.setVolume(long)", "android.media.AudioTrack.getAudioFormat()", "android.media.AudioTrack.getPlayState()", "android.media.AudioTrack.flush()", "android.media.AudioTrack.play()", "android.media.AudioTrack.write(long,long,long)", "android.media.AudioTrack.pause()", "android.media.AudioTrack.getNativeOutputSampleRate(long)", "android.media.AudioRecord.<init>(long,long,long,long,long)", "android.media.AudioRecord.startRecording()", "android.media.AudioRecord.read(long,java.nio.ByteBuffer)", "android.media.AudioRecord.stop()", "android.media.AudioRecord.release()", "android.media.AudioRecord.getMinBufferSize(long,long,long)", "android.media.AudioRecord.getState()", "android.media.AudioRecord.read(long,long,long,long)", "android.media.AudioRecord.read(long,long,long,long)", "android.media.AudioRecord.getRecordingState()", "android.media.AudioRecord.getChannelCount()", "android.media.AudioRecord.getBufferSizeInFrames()", "android.media.AudioRecord.getRoutedDevice()", "android.bluetooth.BluetoothAdapter.getDefaultAdapter()", "android.bluetooth.BluetoothAdapter.getProfileProxy(long,android.bluetooth.BluetoothProfile.ServiceListener,android.content.Context)", "android.bluetooth.BluetoothAdapter.closeProfileProxy(android.bluetooth.BluetoothProfile,long)", "android.bluetooth.BluetoothAdapter.enable()", "android.bluetooth.BluetoothAdapter.isEnabled()", "android.bluetooth.BluetoothAdapter.disable()", "android.bluetooth.BluetoothAdapter.getRemoteDevice(java.lang.String)", "android.bluetooth.BluetoothAdapter.isBleScanAlwaysAvailable()", "android.bluetooth.BluetoothAdapter.startDiscovery()", "android.bluetooth.BluetoothAdapter.cancelDiscovery()", "android.bluetooth.BluetoothAdapter.checkBluetoothAddress(java.lang.String)", "android.bluetooth.BluetoothAdapter.getScanMode()", "android.bluetooth.BluetoothAdapter.getName()", "android.bluetooth.BluetoothAdapter.setName(java.lang.String)", "android.bluetooth.BluetoothAdapter.getBluetoothLeAdvertiser()", "android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord(java.util.UUID,java.lang.String)", "android.bluetooth.BluetoothAdapter.isMultipleAdvertisementSupported()", "android.bluetooth.BluetoothAdapter.getAddress()", "android.bluetooth.BluetoothAdapter.getState()", "android.bluetooth.BluetoothAdapter.getBluetoothLeScanner()", "android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.util.UUID,java.lang.String)", "android.bluetooth.BluetoothAdapter.getRemoteDevice(long)", "android.bluetooth.BluetoothAdapter.getBondedDevices()", "android.bluetooth.BluetoothAdapter.isOffloadedFilteringSupported()", "android.bluetooth.BluetoothAdapter.isOffloadedScanBatchingSupported()", "android.bluetooth.BluetoothAdapter.isDiscovering()", "android.bluetooth.BluetoothHeadset.getConnectedDevices()", "android.accounts.AccountAuthenticatorResponse.onError(java.lang.String,long)", "android.accounts.AccountAuthenticatorResponse.onResult(android.os.Bundle)", "android.accounts.AccountAuthenticatorResponse.onRequestContinued()", "android.webkit.CookieManager.getInstance()", "android.webkit.CookieManager.setCookie(java.lang.String,java.lang.String)", "android.webkit.CookieManager.removeAllCookie()", "android.webkit.CookieManager.getCookie(java.lang.String)", "android.webkit.CookieManager.removeAllCookies(android.webkit.ValueCallback)", "android.webkit.CookieManager.flush()", "android.accounts.AbstractAccountAuthenticator.<init>(android.content.Context)", "android.os.Messenger.<init>(android.os.Handler)", "android.os.Messenger.send(android.os.Message)", "android.os.Messenger.getBinder()", "android.os.Messenger.<init>(android.os.IBinder)", "android.service.persistentdata.PersistentDataBlockManager.getMaximumDataBlockSize()", "android.service.persistentdata.PersistentDataBlockManager.write(long)", "android.service.persistentdata.PersistentDataBlockManager.read()", "java.util.logging.LogRecord.<init>(java.lang.String,java.util.logging.Level)", "java.util.logging.LogRecord.setLoggerName(java.lang.String)", "java.util.logging.LogRecord.setThrown(java.lang.Throwable)", "java.util.logging.LogRecord.getMillis()", "java.util.logging.LogRecord.getLoggerName()", "java.util.logging.LogRecord.getThrown()", "java.util.logging.LogRecord.getLevel()", "java.util.logging.LogRecord.setMillis(long)", "java.util.logging.LogRecord.setLevel(java.util.logging.Level)", "java.util.logging.LogRecord.setMessage(java.lang.String)", "java.util.logging.LogRecord.setParameters([Ljava.lang.Object)", "java.util.logging.FileHandler.publish(java.util.logging.LogRecord)", "java.util.logging.FileHandler.<init>(long,long,long,java.lang.String)", "java.util.logging.FileHandler.setFormatter(java.util.logging.Formatter)", "java.util.logging.FileHandler.flush()", "java.util.logging.FileHandler.close()", "java.util.logging.Formatter.<init>()", "android.text.style.URLSpan.<init>(java.lang.String)", "android.text.style.URLSpan.onClick(android.view.View)", "android.text.style.URLSpan.updateDrawState(android.text.TextPaint)", "android.text.style.URLSpan.getURL()", "android.view.autofill.AutofillManager.hasEnabledAutofillServices()", "java.net.URISyntaxException.getMessage()", "java.util.Properties.<init>()", "java.util.Properties.load(java.io.InputStream)", "java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.store(java.lang.String,java.io.OutputStream)", "java.util.Properties.remove(java.lang.Object)", "java.util.Properties.setProperty(java.lang.String,java.lang.String)", "java.lang.ref.Reference.get()", "java.lang.ref.Reference.clear()", "java.lang.ClassCastException.<init>(java.lang.String)", "java.lang.ClassCastException.getMessage()", "javax.crypto.KeyGenerator.getInstance(java.lang.String)", "javax.crypto.KeyGenerator.init(long)", "javax.crypto.KeyGenerator.generateKey()", "javax.crypto.KeyGenerator.init(java.security.SecureRandom,long)", "android.provider.Settings.System.getConfiguration(android.content.res.Configuration,android.content.ContentResolver)", "android.provider.Settings.System.getFloat(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.System.getInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.System.putInt(long,java.lang.String,android.content.ContentResolver)", "android.provider.Settings.System.getString(java.lang.String,android.content.ContentResolver)", "android.os.PersistableBundle.<init>()", "android.os.PersistableBundle.putString(java.lang.String,java.lang.String)", "android.os.PersistableBundle.getBoolean(long,java.lang.String)", "android.os.PersistableBundle.putBoolean(long,java.lang.String)", "android.os.PersistableBundle.getString(java.lang.String)", "android.os.PersistableBundle.getInt(long,java.lang.String)", "android.os.PersistableBundle.putInt(long,java.lang.String)", "android.os.PersistableBundle.containsKey(java.lang.String)", "android.os.PersistableBundle.keySet()", "android.os.PersistableBundle.get(java.lang.String)", "android.webkit.CookieSyncManager.createInstance(android.content.Context)", "android.webkit.CookieSyncManager.getInstance()", "android.webkit.CookieSyncManager.sync()", "android.webkit.WebChromeClient.<init>()", "android.provider.Telephony.Sms.Intents.getMessagesFromIntent(android.content.Intent)", "android.telephony.SmsMessage.getDisplayMessageBody()", "android.telephony.SmsMessage.getDisplayOriginatingAddress()", "android.webkit.WebViewClient.<init>()", "android.webkit.WebViewClient.onReceivedError(java.lang.String,java.lang.String,long,android.webkit.WebView)", "android.webkit.WebViewClient.onReceivedSslError(android.net.http.SslError,android.webkit.SslErrorHandler,android.webkit.WebView)", "android.webkit.WebViewClient.onPageFinished(java.lang.String,android.webkit.WebView)", "android.webkit.WebViewClient.onPageStarted(android.graphics.Bitmap,java.lang.String,android.webkit.WebView)", "android.webkit.WebViewClient.onLoadResource(java.lang.String,android.webkit.WebView)", "android.net.http.SslError.toString()", "android.net.http.SslError.getPrimaryError()", "android.net.http.SslError.getUrl()", "android.util.EventLog.writeEvent(java.lang.String,long)", "android.util.EventLog.writeEvent(long,long)", "android.util.EventLog.writeEvent([Ljava.lang.Object,long)", "android.util.EventLog.getTagCode(java.lang.String)", "android.util.EventLog.writeEvent(long,long)", "android.util.EventLog.readEvents(java.util.Collection,long)", "android.text.LoginFilter.UsernameFilterGeneric.<init>(long)", "android.text.LoginFilter.PasswordFilterGMail.<init>(long)", "android.content.pm.PackageInstaller.SessionCallback.<init>()", "android.content.pm.PackageInstaller.SessionParams.<init>(long)", "android.content.pm.PackageInstaller.SessionParams.setAppLabel(java.lang.CharSequence)", "android.content.pm.PackageInstaller.SessionParams.setAppPackageName(java.lang.String)", "android.content.pm.PackageInstaller.SessionParams.setSize(long)", "java.security.DigestOutputStream.<init>(java.security.MessageDigest,java.io.OutputStream)", "android.content.pm.PackageInstaller.Session.openWrite(long,long,java.lang.String)", "android.content.pm.PackageInstaller.Session.commit(android.content.IntentSender)", "android.nfc.NdefMessage.getRecords()", "android.nfc.NdefRecord.getPayload()", "android.bluetooth.BluetoothSocket.getInputStream()", "android.bluetooth.BluetoothSocket.getOutputStream()", "android.bluetooth.BluetoothSocket.close()", "android.bluetooth.BluetoothSocket.connect()", "android.bluetooth.BluetoothSocket.getRemoteDevice()", "android.bluetooth.BluetoothSocket.isConnected()", "android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(java.util.UUID)", "android.bluetooth.BluetoothDevice.getAddress()", "android.bluetooth.BluetoothDevice.getBondState()", "android.bluetooth.BluetoothDevice.equals(java.lang.Object)", "android.bluetooth.BluetoothDevice.hashCode()", "android.bluetooth.BluetoothDevice.connectGatt(android.bluetooth.BluetoothGattCallback,long,android.content.Context)", "android.bluetooth.BluetoothDevice.setPairingConfirmation(long)", "android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)", "android.bluetooth.BluetoothDevice.createBond()", "android.bluetooth.BluetoothDevice.getUuids()", "android.bluetooth.BluetoothDevice.fetchUuidsWithSdp()", "android.bluetooth.BluetoothDevice.connectGatt(long,android.bluetooth.BluetoothGattCallback,long,android.content.Context)", "android.bluetooth.BluetoothDevice.toString()", "android.bluetooth.BluetoothDevice.getBluetoothClass()", "android.bluetooth.BluetoothDevice.getType()", "java.lang.ReflectiveOperationException.getMessage()", "android.webkit.ClientCertRequest.cancel()", "android.webkit.ClientCertRequest.proceed([Ljava.security.cert.X509Certificate,java.security.PrivateKey)", "android.webkit.ClientCertRequest.ignore()", "android.webkit.ClientCertRequest.getKeyTypes()", "android.webkit.ClientCertRequest.getPrincipals()", "android.webkit.ClientCertRequest.getHost()", "android.webkit.ClientCertRequest.getPort()", "android.security.KeyChain.getPrivateKey(java.lang.String,android.content.Context)", "android.security.KeyChain.getCertificateChain(java.lang.String,android.content.Context)", "android.security.KeyChain.choosePrivateKeyAlias(java.lang.String,long,java.lang.String,[Ljava.security.Principal,[Ljava.lang.String,android.security.KeyChainAliasCallback,android.app.Activity)", "android.webkit.ConsoleMessage.messageLevel()", "android.webkit.ConsoleMessage.sourceId()", "android.webkit.ConsoleMessage.lineNumber()", "android.webkit.ConsoleMessage.message()", "android.content.IntentSender.SendIntentException.getMessage()", "android.webkit.WebResourceRequest.getUrl()", "android.nfc.NfcAdapter.getDefaultAdapter(android.content.Context)", "android.nfc.NfcAdapter.setNdefPushMessage([Landroid.app.Activity,android.app.Activity,android.nfc.NdefMessage)", "android.nfc.NfcAdapter.disableReaderMode(android.app.Activity)", "android.nfc.NfcAdapter.enableReaderMode(android.os.Bundle,long,android.nfc.NfcAdapter.ReaderCallback,android.app.Activity)", "android.nfc.NfcAdapter.isEnabled()", "android.nfc.NfcAdapter.disable()", "android.nfc.NfcAdapter.enable()", "android.app.NotificationChannelGroup.<init>(java.lang.CharSequence,java.lang.String)", "android.app.backup.BackupManager.getAvailableRestoreToken(java.lang.String)", "android.app.backup.BackupManager.<init>(android.content.Context)", "android.app.backup.BackupManager.requestBackup(long,android.app.backup.BackupManagerMonitor,android.app.backup.BackupObserver,[Ljava.lang.String)", "android.app.backup.BackupManager.selectBackupTransport(java.lang.String)", "android.app.backup.BackupManager.setAutoRestore(long)", "android.app.backup.BackupManager.getCurrentTransport()", "android.app.backup.BackupManager.setBackupEnabled(long)", "android.app.backup.BackupManager.isBackupEnabled()", "android.app.backup.BackupManager.listAllTransports()", "android.app.backup.BackupManager.selectBackupTransport(android.app.backup.SelectBackupTransportCallback,android.content.ComponentName)", "android.app.backup.BackupManager.beginRestoreSession()", "android.app.backup.BackupManager.cancelBackups()", "android.app.backup.BackupManager.requestBackup(android.app.backup.BackupObserver,[Ljava.lang.String)", "android.app.backup.BackupManager.isAppEligibleForBackup(java.lang.String)", "android.app.backup.BackupManager.backupNow()", "android.content.pm.ServiceInfo.isEnabled()", "android.content.pm.ServiceInfo.<init>()", "android.content.pm.ServiceInfo.loadXmlMetaData(java.lang.String,android.content.pm.PackageManager)", "android.os.AsyncTask.Status.ordinal()", "android.os.AsyncTask.Status.values()", "android.text.style.AbsoluteSizeSpan.<init>(long)", "android.os.StatFs.<init>(java.lang.String)", "android.os.StatFs.getBlockSizeLong()", "android.os.StatFs.getAvailableBlocksLong()", "android.os.StatFs.getFreeBlocks()", "android.os.StatFs.getBlockSize()", "android.os.StatFs.getBlockCount()", "android.os.StatFs.getAvailableBlocks()", "android.os.StatFs.getFreeBytes()", "android.os.StatFs.getBlockCountLong()", "android.os.StatFs.restat(java.lang.String)", "android.os.StatFs.getFreeBlocksLong()", "android.os.StatFs.getAvailableBytes()", "android.text.format.DateUtils.getRelativeDateTimeString(long,long,long,long,android.content.Context)", "android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long)", "android.text.format.DateUtils.formatDateTime(long,long,android.content.Context)", "android.text.format.DateUtils.formatElapsedTime(long)", "android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long,long)", "android.text.format.DateUtils.getRelativeTimeSpanString(long)", "android.text.format.DateUtils.formatDateRange(long,long,long,android.content.Context)", "android.text.format.DateUtils.isToday(long)", "android.text.format.DateUtils.formatDateRange(java.lang.String,long,long,long,java.util.Formatter,android.content.Context)", "android.text.format.DateUtils.getRelativeTimeSpanString(long,long,android.content.Context)", "android.accounts.AuthenticatorException.<init>(java.lang.String)", "android.accounts.AuthenticatorException.<init>(java.lang.Throwable)", "android.accounts.AuthenticatorException.<init>(java.lang.Throwable,java.lang.String)", "android.security.keystore.recovery.RecoveryController.isRecoverableKeyStoreEnabled(android.content.Context)", "android.security.keystore.recovery.RecoveryController.getInstance(android.content.Context)", "android.security.keystore.recovery.RecoveryController.getAliases()", "android.security.keystore.recovery.RecoveryController.getRecoveryStatus(java.lang.String)", "android.security.keystore.recovery.RecoveryController.getKey(java.lang.String)", "android.security.keystore.recovery.RecoveryController.generateKey(java.lang.String)", "android.security.keystore.recovery.RecoveryController.removeKey(java.lang.String)", "android.content.res.AssetFileDescriptor.getLength()", "android.content.res.AssetFileDescriptor.close()", "android.content.res.AssetFileDescriptor.createInputStream()", "android.content.res.AssetFileDescriptor.getParcelFileDescriptor()", "android.content.res.AssetFileDescriptor.<init>(long,long,android.os.ParcelFileDescriptor)", "java.util.concurrent.ExecutorCompletionService.<init>(java.util.concurrent.Executor)", "java.util.concurrent.ExecutorCompletionService.submit(java.util.concurrent.Callable)", "java.util.concurrent.ExecutorCompletionService.take()", "android.app.backup.RestoreSet.<init>(long,java.lang.String,java.lang.String)", "android.app.backup.SelectBackupTransportCallback.<init>()", "android.app.backup.RestoreObserver.<init>()", "android.app.backup.RestoreSession.endRestoreSession()", "android.app.backup.RestoreSession.restoreAll(android.app.backup.RestoreObserver,long)", "android.app.backup.RestoreSession.getAvailableRestoreSets(android.app.backup.RestoreObserver)", "java.lang.Runtime.getRuntime()", "java.lang.Runtime.exec(java.lang.String)", "java.lang.Runtime.availableProcessors()", "java.lang.Runtime.maxMemory()", "java.lang.Runtime.exec([Ljava.lang.String)", "java.lang.Runtime.totalMemory()", "java.lang.Runtime.freeMemory()", "android.app.backup.BackupDataOutput.<init>(java.io.FileDescriptor)", "android.app.backup.BackupDataOutput.writeEntityHeader(long,java.lang.String)", "android.app.backup.BackupDataOutput.writeEntityData(long,long)", "android.app.backup.BackupObserver.<init>()", "android.app.backup.BackupTransport.<init>()", "android.app.backup.BackupDataInput.<init>(java.io.FileDescriptor)", "android.app.backup.BackupDataInput.readNextHeader()", "android.app.backup.BackupDataInput.getKey()", "android.app.backup.BackupDataInput.getDataSize()", "android.app.backup.BackupDataInput.skipEntityData()", "android.app.backup.BackupDataInput.readEntityData(long,long,long)", "android.app.backup.BackupManagerMonitor.<init>()", "android.util.JsonWriter.beginObject()", "android.util.JsonWriter.name(java.lang.String)", "android.util.JsonWriter.value(java.lang.String)", "android.util.JsonWriter.beginArray()", "android.util.JsonWriter.endObject()", "android.util.JsonWriter.endArray()", "android.util.JsonWriter.value(long)", "android.util.JsonWriter.<init>(java.io.Writer)", "android.util.JsonWriter.value(long)", "java.io.BufferedWriter.<init>(long,java.io.Writer)", "java.io.BufferedWriter.<init>(java.io.Writer)", "java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.close()", "java.io.BufferedWriter.newLine()", "java.io.OutputStreamWriter.<init>(java.nio.charset.Charset,java.io.OutputStream)", "java.io.OutputStreamWriter.<init>(java.io.OutputStream)", "java.io.OutputStreamWriter.write(java.lang.String)", "java.io.OutputStreamWriter.flush()", "java.io.OutputStreamWriter.<init>(java.lang.String,java.io.OutputStream)", "java.util.zip.DeflaterOutputStream.<init>(java.io.OutputStream)", "android.app.PendingIntent.CanceledException.getMessage()", "android.os.ParcelFileDescriptor.AutoCloseOutputStream.<init>(android.os.ParcelFileDescriptor)", "android.os.ParcelFileDescriptor.AutoCloseOutputStream.close()", "android.os.ParcelFileDescriptor.AutoCloseOutputStream.write(long)", "android.os.ParcelFileDescriptor.AutoCloseOutputStream.flush()", "android.hardware.usb.UsbManager.openAccessory(android.hardware.usb.UsbAccessory)", "java.net.ServerSocket.<init>(long)", "java.net.ServerSocket.accept()", "java.net.ServerSocket.close()", "java.net.ServerSocket.<init>()", "java.net.ServerSocket.bind(java.net.SocketAddress)", "java.net.ServerSocket.getLocalPort()", "java.net.ServerSocket.getInetAddress()", "java.net.ServerSocket.<init>(java.net.InetAddress,long,long)", "android.util.StringBuilderPrinter.<init>(java.lang.StringBuilder)", "android.util.StringBuilderPrinter.println(java.lang.String)", "android.os.BatteryManager.isCharging()", "android.os.BatteryManager.getIntProperty(long)", "android.text.style.StyleSpan.<init>(long)", "android.accounts.AccountsException.<init>(java.lang.String)", "android.app.backup.RestoreDescription.<init>(long,java.lang.String)", "android.app.backup.RestoreDescription.getPackageName()", "java.text.ParsePosition.<init>(long)", "java.text.ParsePosition.getIndex()", "java.text.ParsePosition.setIndex(long)", "android.app.job.JobInfo.Builder.<init>(android.content.ComponentName,long)", "android.app.job.JobInfo.Builder.setMinimumLatency(long)", "android.app.job.JobInfo.Builder.setRequiresCharging(long)", "android.app.job.JobInfo.Builder.setRequiresDeviceIdle(long)", "android.app.job.JobInfo.Builder.setRequiredNetworkType(long)", "android.app.job.JobInfo.Builder.build()", "android.app.job.JobInfo.Builder.setExtras(android.os.PersistableBundle)", "android.app.job.JobInfo.Builder.setPersisted(long)", "android.app.job.JobInfo.Builder.addTriggerContentUri(android.app.job.JobInfo.TriggerContentUri)", "android.app.job.JobInfo.Builder.setOverrideDeadline(long)", "android.app.job.JobInfo.Builder.setBackoffCriteria(long,long)", "android.app.job.JobParameters.getExtras()", "android.app.job.JobParameters.getJobId()", "android.app.job.JobParameters.getTriggeredContentUris()", "javax.crypto.spec.GCMParameterSpec.<init>(long,long)", "javax.crypto.spec.GCMParameterSpec.<init>(long,long,long,long)", "android.security.keystore.recovery.InternalRecoveryServiceException.<init>(java.lang.String)", "java.io.PipedOutputStream.<init>()", "java.io.PipedOutputStream.<init>(java.io.PipedInputStream)", "java.io.PipedOutputStream.close()", "java.io.PipedOutputStream.write(long)", "java.io.PipedInputStream.<init>(java.io.PipedOutputStream)", "java.io.PipedInputStream.<init>()", "android.os.ParcelUuid.fromString(java.lang.String)", "android.os.ParcelUuid.<init>(java.util.UUID)", "android.os.ParcelUuid.getUuid()", "android.os.ParcelUuid.equals(java.lang.Object)", "android.telephony.SubscriptionManager.getActiveSubscriptionInfoList()", "android.telephony.SubscriptionInfo.getSubscriptionId()", "android.telephony.SubscriptionInfo.getCarrierName()", "android.telephony.SubscriptionInfo.getDataRoaming()", "android.os.DropBoxManager.Entry.getInputStream()", "android.os.DropBoxManager.Entry.getTimeMillis()", "android.os.DropBoxManager.Entry.close()", "android.os.DropBoxManager.Entry.getTag()", "android.os.DropBoxManager.Entry.getFlags()", "android.util.EventLog.Event.getTimeNanos()", "android.util.EventLog.Event.getTag()", "android.util.EventLog.Event.getProcessId()", "android.util.EventLog.Event.getThreadId()", "android.util.EventLog.Event.getData()", "java.util.concurrent.LinkedBlockingDeque.<init>()", "javax.crypto.spec.PBEKeySpec.<init>(long,long,long,long)", "javax.crypto.SecretKeyFactory.getInstance(java.lang.String)", "javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)", "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.lock()", "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.unlock()", "java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock()", "java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock()", "android.app.ActivityManager.MemoryInfo.<init>()", "android.net.SSLSessionCache.<init>(java.io.File)", "android.net.SSLCertificateSocketFactory.getDefault(android.net.SSLSessionCache,long)", "java.util.logging.Level.intValue()", "android.graphics.Bitmap.Config.valueOf(java.lang.String)", "android.graphics.Bitmap.Config.toString()", "android.graphics.Bitmap.Config.ordinal()", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)", "android.bluetooth.BluetoothManager.getAdapter()", "android.bluetooth.BluetoothManager.openGattServer(android.bluetooth.BluetoothGattServerCallback,android.content.Context)", "android.bluetooth.BluetoothManager.getConnectionState(long,android.bluetooth.BluetoothDevice)", "android.webkit.URLUtil.isHttpUrl(java.lang.String)", "android.webkit.URLUtil.isHttpsUrl(java.lang.String)", "android.webkit.URLUtil.isValidUrl(java.lang.String)", "android.webkit.URLUtil.isNetworkUrl(java.lang.String)", "android.webkit.URLUtil.isAssetUrl(java.lang.String)", "android.webkit.URLUtil.isAboutUrl(java.lang.String)", "java.nio.channels.Channels.newInputStream(java.nio.channels.ReadableByteChannel)", "java.nio.channels.Channels.newChannel(java.io.InputStream)", "java.nio.channels.Channels.newChannel(java.io.OutputStream)", "java.net.ProtocolException.<init>(java.lang.String)", "android.app.usage.NetworkStatsManager.queryDetailsForUidTag(long,long,long,long,java.lang.String,long)", "android.app.usage.NetworkStats.Bucket.<init>()", "android.app.usage.NetworkStats.Bucket.getStartTimeStamp()", "android.app.usage.NetworkStats.Bucket.getRxBytes()", "android.app.usage.NetworkStats.Bucket.getRxPackets()", "android.app.usage.NetworkStats.Bucket.getTxBytes()", "android.app.usage.NetworkStats.Bucket.getTxPackets()", "android.app.usage.NetworkStats.Bucket.getEndTimeStamp()", "android.app.usage.NetworkStats.getNextBucket(android.app.usage.NetworkStats.Bucket)", "android.app.usage.NetworkStats.close()", "java.text.NumberFormat.getPercentInstance()", "java.text.NumberFormat.format(long)", "java.text.NumberFormat.format(long)", "java.text.NumberFormat.getInstance(java.util.Locale)", "android.content.AbstractThreadedSyncAdapter.<init>(long,long,android.content.Context)", "java.util.concurrent.RunnableFuture.cancel(long)", "java.util.concurrent.RunnableFuture.isCancelled()", "java.util.concurrent.RunnableFuture.isDone()", "java.util.concurrent.RunnableFuture.run()", "java.util.concurrent.RunnableFuture.get()", "java.util.concurrent.RunnableFuture.get(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.RunnableScheduledFuture.compareTo(java.lang.Object)", "java.util.concurrent.RunnableScheduledFuture.getDelay(java.util.concurrent.TimeUnit)", "java.util.concurrent.RunnableScheduledFuture.isPeriodic()", "android.os.Handler.Callback.handleMessage(android.os.Message)", "java.util.concurrent.RejectedExecutionException.<init>()", "java.util.concurrent.RejectedExecutionException.<init>(java.lang.String)", "java.lang.IllegalThreadStateException.<init>(java.lang.String)", "java.util.concurrent.RejectedExecutionHandler.rejectedExecution(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable)", "android.text.Spannable.Factory.getInstance()", "android.text.Spannable.Factory.newSpannable(java.lang.CharSequence)", "java.lang.ClassNotFoundException.getMessage()", "java.lang.ClassNotFoundException.<init>(java.lang.String)", "java.lang.LinkageError.getMessage()", "android.hardware.display.DisplayManager.getStableDisplaySize()", "android.hardware.display.DisplayManager.getDisplays()", "javax.microedition.khronos.egl.EGLContext.getEGL()", "javax.microedition.khronos.egl.EGL10.eglGetDisplay(java.lang.Object)", "javax.microedition.khronos.egl.EGL10.eglInitialize(long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglGetConfigs(long,long,[Ljavax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglGetConfigAttrib(long,long,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglTerminate(javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreateContext(long,javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreatePbufferSurface(long,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroyContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglMakeCurrent(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroySurface(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay)", "android.opengl.GLES10.glGetString(long)", "android.app.BroadcastOptions.toBundle()", "android.app.BroadcastOptions.makeBasic()", "android.widget.AdapterView.OnItemSelectedListener.onItemSelected(long,long,android.view.View,android.widget.AdapterView)", "android.widget.AdapterView.OnItemSelectedListener.onNothingSelected(android.widget.AdapterView)", "java.util.concurrent.atomic.AtomicLong.<init>(long)", "java.util.concurrent.atomic.AtomicLong.get()", "java.util.concurrent.atomic.AtomicLong.set(long)", "java.util.concurrent.atomic.AtomicLong.decrementAndGet()", "java.util.concurrent.atomic.AtomicLong.incrementAndGet()", "java.util.concurrent.atomic.AtomicLong.<init>()", "java.util.concurrent.atomic.AtomicLong.addAndGet(long)", "java.util.concurrent.atomic.AtomicLong.getAndIncrement()", "java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long)", "java.util.concurrent.atomic.AtomicLong.getAndSet(long)", "java.util.concurrent.atomic.AtomicLong.getAndAdd(long)", "java.util.concurrent.atomic.AtomicLong.getAndDecrement()", "android.hardware.input.InputManager.getInputDevice(long)", "android.hardware.input.InputManager.registerInputDeviceListener(android.os.Handler,android.hardware.input.InputManager.InputDeviceListener)", "android.hardware.input.InputManager.getInputDeviceIds()", "android.view.InputDevice.hasKeys(long)", "android.view.InputDevice.getSources()", "android.view.InputDevice.getMotionRanges()", "android.view.InputDevice.getName()", "android.view.InputDevice.getMotionRange(long)", "android.view.InputDevice.MotionRange.getAxis()", "android.view.InputDevice.MotionRange.getSource()", "android.view.InputDevice.MotionRange.getRange()", "java.util.EnumSet.of(java.lang.Enum,java.lang.Enum,java.lang.Enum)", "java.util.EnumSet.of(java.lang.Enum,java.lang.Enum)", "java.util.EnumSet.allOf(java.lang.Class)", "java.util.EnumSet.of(java.lang.Enum)", "java.util.EnumSet.noneOf(java.lang.Class)", "java.util.EnumSet.copyOf(java.util.Collection)", "java.util.EnumSet.contains(java.lang.Object)", "java.util.EnumSet.copyOf(java.util.EnumSet)", "java.util.EnumSet.addAll(java.util.Collection)", "java.util.EnumSet.removeAll(java.util.Collection)", "java.util.EnumSet.add(java.lang.Object)", "java.util.EnumSet.clear()", "android.content.SyncResult.hasError()", "android.content.SyncResult.<init>()", "android.content.SyncResult.hasHardError()", "android.content.SyncResult.hasSoftError()", "android.content.SyncResult.toDebugString()", "java.util.AbstractQueue.<init>()", "java.text.ParseException.<init>(long,java.lang.String)", "java.util.GregorianCalendar.<init>()", "java.util.GregorianCalendar.getInstance()", "java.util.GregorianCalendar.<init>(long,long,long)", "java.util.GregorianCalendar.getActualMaximum(long)", "java.util.GregorianCalendar.setGregorianChange(java.util.Date)", "java.util.GregorianCalendar.setTimeZone(java.util.TimeZone)", "java.util.GregorianCalendar.setTimeInMillis(long)", "java.util.GregorianCalendar.get(long)", "java.util.GregorianCalendar.set(long,long)", "java.util.GregorianCalendar.set(long,long,long,long,long,long)", "java.util.GregorianCalendar.getTimeInMillis()", "java.util.GregorianCalendar.<init>(java.util.TimeZone)", "java.util.GregorianCalendar.set(long,long,long)", "java.util.GregorianCalendar.before(java.lang.Object)", "java.util.GregorianCalendar.isLeapYear(long)", "java.util.GregorianCalendar.getTime()", "android.graphics.Bitmap.CompressFormat.ordinal()", "android.graphics.Bitmap.CompressFormat.values()", "android.net.wifi.WifiManager.WifiLock.setReferenceCounted(long)", "android.net.wifi.WifiManager.WifiLock.acquire()", "android.net.wifi.WifiManager.WifiLock.release()", "android.net.wifi.WifiManager.WifiLock.isHeld()", "android.net.Network.openConnection(java.net.URL)", "android.net.Network.equals(java.lang.Object)", "android.net.Network.bindSocket(java.net.Socket)", "android.net.Network.getNetworkHandle()", "android.net.NetworkRequest.Builder.<init>()", "android.net.NetworkRequest.Builder.addCapability(long)", "android.net.NetworkRequest.Builder.build()", "android.net.NetworkRequest.Builder.addTransportType(long)", "android.net.NetworkRequest.Builder.setNetworkSpecifier(android.net.NetworkSpecifier)", "android.net.NetworkRequest.Builder.removeCapability(long)", "android.net.ConnectivityManager.NetworkCallback.<init>()", "android.util.JsonReader.<init>(java.io.Reader)", "android.util.JsonReader.beginObject()", "android.util.JsonReader.hasNext()", "android.util.JsonReader.nextName()", "android.util.JsonReader.nextString()", "android.util.JsonReader.skipValue()", "android.util.JsonReader.close()", "android.util.JsonReader.nextInt()", "android.util.JsonReader.endObject()", "android.graphics.drawable.NinePatchDrawable.draw(android.graphics.Canvas)", "android.graphics.drawable.NinePatchDrawable.setBounds(long,long,long,long)", "javax.crypto.CipherInputStream.<init>(javax.crypto.Cipher,java.io.InputStream)", "javax.crypto.CipherOutputStream.<init>(javax.crypto.Cipher,java.io.OutputStream)", "java.util.zip.InflaterInputStream.<init>(java.io.InputStream)", "android.media.MediaDrm.<init>(java.util.UUID)", "android.media.MediaDrm.openSession()", "android.media.MediaDrm.getKeyRequest(java.util.HashMap,long,java.lang.String,long,long)", "android.media.MediaDrm.closeSession(long)", "android.media.MediaDrm.getPropertyString(java.lang.String)", "android.media.MediaDrm.getCryptoSession(java.lang.String,java.lang.String,long)", "android.media.MediaDrm.getProvisionRequest()", "android.media.MediaDrm.provideProvisionResponse(long)", "android.media.MediaDrm.KeyRequest.getData()", "java.lang.Readable.read(java.nio.CharBuffer)", "android.media.MediaDrm.ProvisionRequest.getDefaultUrl()", "android.media.MediaDrm.ProvisionRequest.getData()", "android.text.style.UnderlineSpan.<init>()", "android.text.style.UnderlineSpan.updateDrawState(android.text.TextPaint)", "android.app.ApplicationErrorReport.<init>()", "android.app.ApplicationErrorReport.CrashInfo.<init>()", "android.app.ApplicationErrorReport.CrashInfo.<init>(java.lang.Throwable)", "java.io.UnsupportedEncodingException.<init>(java.lang.String)", "java.io.UnsupportedEncodingException.getMessage()", "java.io.UnsupportedEncodingException.toString()", "android.widget.RadioGroup.addView(android.view.View)", "android.widget.RadioGroup.<init>(android.content.Context)", "android.widget.RadioGroup.setOrientation(long)", "android.widget.RadioGroup.setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)", "android.widget.RadioGroup.getCheckedRadioButtonId()", "android.widget.RadioGroup.indexOfChild(android.view.View)", "java.io.CharArrayWriter.<init>()", "java.io.CharArrayWriter.toString()", "android.text.method.ScrollingMovementMethod.<init>()", "java.net.DatagramSocket.close()", "java.net.DatagramSocket.<init>(long)", "java.net.DatagramSocket.receive(java.net.DatagramPacket)", "java.net.DatagramPacket.<init>(long,long)", "java.net.DatagramPacket.getLength()", "java.net.DatagramPacket.getData()", "java.net.DatagramPacket.getOffset()", "android.database.sqlite.SQLiteCantOpenDatabaseException.<init>(java.lang.String)", "java.net.UnknownHostException.<init>(java.lang.String)", "java.util.EnumMap.<init>(java.lang.Class)", "java.util.EnumMap.put(java.lang.Object,java.lang.Enum)", "java.util.EnumMap.get(java.lang.Object)", "android.app.job.JobInfo.getId()", "android.app.job.JobInfo.getExtras()", "android.app.job.JobInfo.TriggerContentUri.<init>(long,android.net.Uri)", "android.database.AbstractCursor.<init>()", "java.util.Observable.<init>()", "java.util.Observable.setChanged()", "java.util.Observable.notifyObservers()", "java.util.Observable.deleteObservers()", "android.app.DatePickerDialog.<init>(long,long,long,android.app.DatePickerDialog.OnDateSetListener,android.content.Context)", "android.text.InputFilter.LengthFilter.<init>(long)", "android.widget.RadioGroup.LayoutParams.<init>(long,long)", "android.content.ClipData.getDescription()", "android.content.ClipData.getItemAt(long)", "android.content.ClipData.newUri(android.net.Uri,java.lang.CharSequence,android.content.ContentResolver)", "android.content.ClipData.newPlainText(java.lang.CharSequence,java.lang.CharSequence)", "android.content.ClipDescription.hasMimeType(java.lang.String)", "android.content.ClipDescription.getLabel()", "android.content.ClipData.Item.getIntent()", "android.app.ActivityManager.TaskDescription.<init>(long,android.graphics.Bitmap,java.lang.String)", "android.app.ActivityManager.TaskDescription.<init>(java.lang.String)", "android.print.PrintAttributes.Builder.<init>()", "android.print.PrintAttributes.Builder.build()", "android.print.PrintManager.print(android.print.PrintAttributes,android.print.PrintDocumentAdapter,java.lang.String)", "android.telephony.PhoneNumberFormattingTextWatcher.<init>()", "android.webkit.WebBackForwardList.getCurrentIndex()", "android.webkit.WebBackForwardList.getItemAtIndex(long)", "android.webkit.WebHistoryItem.getUrl()", "android.app.SearchManager.getSearchableInfo(android.content.ComponentName)", "android.view.GestureDetector.SimpleOnGestureListener.<init>()", "android.webkit.WebResourceResponse.<init>(java.io.InputStream,java.lang.String,java.lang.String)", "android.webkit.WebResourceResponse.<init>(java.io.InputStream,java.util.Map,java.lang.String,long,java.lang.String,java.lang.String)", "java.sql.Timestamp.<init>(long)", "android.database.sqlite.SQLiteDatabaseLockedException.toString()", "android.text.TextUtils.SimpleStringSplitter.<init>(long)", "android.text.TextUtils.SimpleStringSplitter.setString(java.lang.String)", "android.text.TextUtils.SimpleStringSplitter.hasNext()", "android.text.TextUtils.SimpleStringSplitter.next()", "android.net.NetworkInfo.DetailedState.ordinal()", "android.net.NetworkInfo.DetailedState.values()", "android.net.NetworkInfo.DetailedState.name()", "android.net.NetworkInfo.State.ordinal()", "android.net.NetworkInfo.State.values()", "android.net.LinkProperties.getRoutes()", "android.net.LinkProperties.getLinkAddresses()", "android.net.LinkProperties.getInterfaceName()", "android.net.RouteInfo.getGateway()", "android.net.RouteInfo.isDefaultRoute()", "android.net.LinkAddress.getAddress()", "android.net.NetworkCapabilities.hasCapability(long)", "android.net.NetworkCapabilities.getLinkDownstreamBandwidthKbps()", "android.net.NetworkCapabilities.getLinkUpstreamBandwidthKbps()", "android.net.NetworkCapabilities.hasTransport(long)", "android.telephony.cdma.CdmaCellLocation.getNetworkId()", "android.telephony.cdma.CdmaCellLocation.getSystemId()", "android.telephony.cdma.CdmaCellLocation.getBaseStationId()", "android.telephony.cdma.CdmaCellLocation.getBaseStationLatitude()", "android.telephony.cdma.CdmaCellLocation.getBaseStationLongitude()", "android.telephony.gsm.GsmCellLocation.getPsc()", "android.telephony.gsm.GsmCellLocation.getCid()", "android.telephony.gsm.GsmCellLocation.getLac()", "android.net.NetworkScoreManager.getActiveScorerPackage()", "java.net.URLConnection.setConnectTimeout(long)", "java.net.URLConnection.setReadTimeout(long)", "java.net.URLConnection.guessContentTypeFromName(java.lang.String)", "java.net.URLConnection.guessContentTypeFromStream(java.io.InputStream)", "java.net.URLConnection.getInputStream()", "android.util.TimingLogger.<init>(java.lang.String,java.lang.String)", "android.util.TimingLogger.addSplit(java.lang.String)", "android.util.TimingLogger.dumpToLog()", "android.util.TimingLogger.reset()", "android.text.util.Rfc822Tokenizer.tokenize(java.util.Collection,java.lang.CharSequence)", "java.lang.UnsatisfiedLinkError.<init>(java.lang.String)", "android.database.MatrixCursor.RowBuilder.add(java.lang.Object)", "android.database.MatrixCursor.RowBuilder.add(java.lang.Object,java.lang.String)", "java.io.FileWriter.<init>(long,java.io.File)", "android.security.KeyPairGeneratorSpec.Builder.<init>(android.content.Context)", "android.security.KeyPairGeneratorSpec.Builder.setAlias(java.lang.String)", "android.security.KeyPairGeneratorSpec.Builder.setSubject(javax.security.auth.x500.X500Principal)", "android.security.KeyPairGeneratorSpec.Builder.setSerialNumber(java.math.BigInteger)", "android.security.KeyPairGeneratorSpec.Builder.setStartDate(java.util.Date)", "android.security.KeyPairGeneratorSpec.Builder.setEndDate(java.util.Date)", "android.security.KeyPairGeneratorSpec.Builder.build()", "android.media.RingtoneManager.getDefaultUri(long)", "android.media.RingtoneManager.<init>(android.content.Context)", "android.media.RingtoneManager.getCursor()", "android.media.RingtoneManager.getRingtoneUri(long)", "android.media.RingtoneManager.getActualDefaultRingtoneUri(long,android.content.Context)", "android.content.pm.FeatureInfo.<init>()", "android.content.pm.InstantAppResolveInfo.InstantAppDigest.<init>(java.lang.String)", "android.content.pm.InstantAppResolveInfo.InstantAppDigest.getDigestPrefix()", "android.util.ArraySet.<init>(long)", "android.util.ArraySet.add(java.lang.Object)", "android.util.ArraySet.<init>()", "android.util.ArraySet.contains(java.lang.Object)", "android.util.ArraySet.clear()", "android.content.pm.InstantAppResolveInfo.getPackageName()", "android.content.pm.InstantAppResolveInfo.<init>(long,java.util.List,java.lang.String,android.content.pm.InstantAppResolveInfo.InstantAppDigest)", "android.content.pm.InstantAppIntentFilter.<init>(java.util.List,java.lang.String)", "android.app.InstantAppResolverService.<init>()", "android.app.InstantAppResolverService.onUnbind(android.content.Intent)", "android.app.InstantAppResolverService.InstantAppResolutionCallback.onInstantAppResolveInfo(java.util.List)", "android.provider.MediaStore.Files.getContentUri(java.lang.String)", "android.graphics.pdf.PdfRenderer.Page.close()", "android.graphics.pdf.PdfRenderer.Page.render(long,android.graphics.Matrix,android.graphics.Rect,android.graphics.Bitmap)", "android.graphics.pdf.PdfRenderer.close()", "android.graphics.pdf.PdfRenderer.<init>(android.os.ParcelFileDescriptor)", "android.graphics.pdf.PdfRenderer.openPage(long)", "android.text.style.CharacterStyle.wrap(android.text.style.CharacterStyle)", "android.text.TextUtils.StringSplitter.setString(java.lang.String)", "android.text.TextUtils.StringSplitter.iterator()", "android.os.Vibrator.vibrate(long,long)", "android.media.MediaPlayer.isPlaying()", "android.media.MediaPlayer.stop()", "android.media.MediaPlayer.release()", "android.media.MediaPlayer.setDataSource(android.net.Uri,android.content.Context)", "android.media.MediaPlayer.reset()", "android.media.MediaPlayer.<init>()", "android.media.MediaPlayer.start()", "android.media.MediaPlayer.setOnErrorListener(android.media.MediaPlayer.OnErrorListener)", "android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)", "android.media.MediaPlayer.setAudioAttributes(android.media.AudioAttributes)", "android.media.MediaPlayer.setLooping(long)", "android.media.MediaPlayer.prepareAsync()", "android.media.MediaPlayer.setAudioStreamType(long)", "android.net.http.AndroidHttpClient.parseDate(java.lang.String)", "android.net.http.AndroidHttpClient.modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)", "android.net.http.AndroidHttpClient.getUngzippedContent(org.apache.http.HttpEntity)", "android.net.http.AndroidHttpClient.getCompressedEntity(android.content.ContentResolver,long)", "android.media.ToneGenerator.<init>(long,long)", "android.media.ToneGenerator.startTone(long)", "android.media.ToneGenerator.stopTone()", "android.bluetooth.le.AdvertiseCallback.<init>()", "android.bluetooth.le.AdvertiseSettings.Builder.<init>()", "android.bluetooth.le.AdvertiseSettings.Builder.setAdvertiseMode(long)", "android.bluetooth.le.AdvertiseSettings.Builder.setTxPowerLevel(long)", "android.bluetooth.le.AdvertiseSettings.Builder.setConnectable(long)", "android.bluetooth.le.AdvertiseSettings.Builder.build()", "android.bluetooth.le.AdvertiseData.Builder.<init>()", "android.bluetooth.le.AdvertiseData.Builder.addManufacturerData(long,long)", "android.bluetooth.le.AdvertiseData.Builder.build()", "android.bluetooth.le.AdvertiseData.Builder.setIncludeDeviceName(long)", "android.bluetooth.le.AdvertiseData.Builder.setIncludeTxPowerLevel(long)", "android.bluetooth.le.AdvertiseData.Builder.addServiceUuid(android.os.ParcelUuid)", "android.bluetooth.le.AdvertiseData.Builder.addServiceData(long,android.os.ParcelUuid)", "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseCallback,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseSettings)", "android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising(android.bluetooth.le.AdvertiseCallback)", "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising(android.bluetooth.le.AdvertiseCallback,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseSettings)", "android.os.IBinder.DeathRecipient.binderDied()", "android.service.quicksettings.Tile.updateTile()", "android.service.quicksettings.Tile.setIcon(android.graphics.drawable.Icon)", "android.service.quicksettings.Tile.setState(long)", "android.content.Intent.ShortcutIconResource.<init>()", "android.bluetooth.BluetoothServerSocket.close()", "android.bluetooth.BluetoothServerSocket.accept()", "android.bluetooth.BluetoothGattServer.close()", "android.bluetooth.BluetoothGattServer.cancelConnection(android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothGattServer.sendResponse(long,long,long,long,android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothGattServer.addService(android.bluetooth.BluetoothGattService)", "android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged(long,android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothGattServer.connect(long,android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothGattService.<init>(long,java.util.UUID)", "android.bluetooth.BluetoothGattService.addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)", "android.bluetooth.BluetoothGattService.getUuid()", "android.bluetooth.BluetoothGattService.getCharacteristics()", "android.bluetooth.BluetoothGattService.getCharacteristic(java.util.UUID)", "android.bluetooth.BluetoothGattCharacteristic.<init>(long,long,java.util.UUID)", "android.bluetooth.BluetoothGattCharacteristic.getUuid()", "android.bluetooth.BluetoothGattCharacteristic.setValue(long)", "android.bluetooth.BluetoothGattCharacteristic.getDescriptors()", "android.bluetooth.BluetoothGattCharacteristic.getProperties()", "android.bluetooth.BluetoothGattCharacteristic.getDescriptor(java.util.UUID)", "android.bluetooth.BluetoothGattCharacteristic.getValue()", "android.bluetooth.BluetoothGattCharacteristic.getPermissions()", "android.bluetooth.BluetoothGattCharacteristic.getWriteType()", "android.bluetooth.BluetoothGattCharacteristic.setWriteType(long)", "android.bluetooth.BluetoothGattCharacteristic.getService()", "android.bluetooth.BluetoothGattCharacteristic.addDescriptor(android.bluetooth.BluetoothGattDescriptor)", "android.net.wifi.WifiConfiguration.<init>()", "android.net.wifi.WifiConfiguration.isEphemeral()", "java.net.NetworkInterface.getNetworkInterfaces()", "java.net.NetworkInterface.getInetAddresses()", "java.net.NetworkInterface.getByName(java.lang.String)", "android.net.wifi.WifiManager.LocalOnlyHotspotReservation.getWifiConfiguration()", "android.net.wifi.WifiManager.LocalOnlyHotspotReservation.close()", "android.net.wifi.p2p.WifiP2pManager.initialize(android.net.wifi.p2p.WifiP2pManager.ChannelListener,android.os.Looper,android.content.Context)", "android.net.wifi.p2p.WifiP2pManager.createGroup(android.net.wifi.p2p.WifiP2pManager.ActionListener,android.net.wifi.p2p.WifiP2pManager.Channel)", "android.net.wifi.p2p.WifiP2pManager.cancelConnect(android.net.wifi.p2p.WifiP2pManager.ActionListener,android.net.wifi.p2p.WifiP2pManager.Channel)", "android.net.wifi.p2p.WifiP2pManager.requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.GroupInfoListener,android.net.wifi.p2p.WifiP2pManager.Channel)", "android.net.wifi.p2p.WifiP2pManager.removeGroup(android.net.wifi.p2p.WifiP2pManager.ActionListener,android.net.wifi.p2p.WifiP2pManager.Channel)", "android.net.wifi.p2p.WifiP2pManager.Channel.close()", "android.net.wifi.p2p.WifiP2pGroup.isGroupOwner()", "android.net.wifi.p2p.WifiP2pGroup.getInterface()", "android.net.wifi.p2p.WifiP2pGroup.getNetworkName()", "android.net.wifi.p2p.WifiP2pGroup.getPassphrase()", "android.net.wifi.WifiManager.LocalOnlyHotspotCallback.<init>()", "android.net.ConnectivityManager.OnStartTetheringCallback.<init>()", "android.net.wifi.aware.PeerHandle.equals(java.lang.Object)", "android.net.wifi.aware.PeerHandle.hashCode()", "java.net.Inet6Address.isLinkLocalAddress()", "java.net.Inet6Address.getHostAddress()", "java.net.Inet6Address.getByAddress(long)", "android.net.wifi.aware.PublishConfig.Builder.<init>()", "android.net.wifi.aware.PublishConfig.Builder.setServiceName(java.lang.String)", "android.net.wifi.aware.PublishConfig.Builder.setServiceSpecificInfo(long)", "android.net.wifi.aware.PublishConfig.Builder.setMatchFilter(java.util.List)", "android.net.wifi.aware.PublishConfig.Builder.setPublishType(long)", "android.net.wifi.aware.PublishConfig.Builder.setTerminateNotificationEnabled(long)", "android.net.wifi.aware.PublishConfig.Builder.build()", "android.net.wifi.aware.WifiAwareManager.isAvailable()", "android.net.wifi.aware.WifiAwareManager.attach(android.os.Handler,android.net.wifi.aware.IdentityChangedListener,android.net.wifi.aware.AttachCallback)", "android.net.wifi.aware.PublishDiscoverySession.updatePublish(android.net.wifi.aware.PublishConfig)", "android.net.wifi.aware.SubscribeConfig.Builder.<init>()", "android.net.wifi.aware.SubscribeConfig.Builder.setServiceName(java.lang.String)", "android.net.wifi.aware.SubscribeConfig.Builder.setMatchFilter(java.util.List)", "android.net.wifi.aware.SubscribeConfig.Builder.setSubscribeType(long)", "android.net.wifi.aware.SubscribeConfig.Builder.setTerminateNotificationEnabled(long)", "android.net.wifi.aware.SubscribeConfig.Builder.build()", "android.net.wifi.aware.WifiAwareSession.subscribe(android.os.Handler,android.net.wifi.aware.DiscoverySessionCallback,android.net.wifi.aware.SubscribeConfig)", "android.net.wifi.aware.WifiAwareSession.publish(android.os.Handler,android.net.wifi.aware.DiscoverySessionCallback,android.net.wifi.aware.PublishConfig)", "android.net.wifi.aware.WifiAwareSession.close()", "android.net.wifi.aware.DiscoverySession.createNetworkSpecifierOpen(android.net.wifi.aware.PeerHandle)", "android.net.wifi.aware.DiscoverySession.createNetworkSpecifierPassphrase(java.lang.String,android.net.wifi.aware.PeerHandle)", "android.net.wifi.aware.DiscoverySession.close()", "android.net.wifi.aware.DiscoverySession.sendMessage(long,long,android.net.wifi.aware.PeerHandle)", "android.net.wifi.aware.AttachCallback.<init>()", "android.net.wifi.aware.IdentityChangedListener.<init>()", "android.net.wifi.aware.DiscoverySessionCallback.<init>()", "android.os.RemoteCallbackList.beginBroadcast()", "android.os.RemoteCallbackList.getBroadcastItem(long)", "android.os.RemoteCallbackList.finishBroadcast()", "android.os.RemoteCallbackList.<init>()", "android.os.RemoteCallbackList.register(android.os.IInterface)", "android.os.RemoteCallbackList.unregister(android.os.IInterface)", "android.os.UpdateEngineCallback.<init>()", "android.os.UpdateEngineCallback.onStatusUpdate(long,long)", "android.os.UpdateEngineCallback.onPayloadApplicationComplete(long)", "java.lang.Character.UnicodeBlock.of(long)", "java.lang.Character.UnicodeBlock.equals(java.lang.Object)", "java.lang.Character.UnicodeBlock.of(long)", "java.text.RuleBasedCollator.setStrength(long)", "java.text.RuleBasedCollator.setDecomposition(long)", "java.text.RuleBasedCollator.getCollationKey(java.lang.String)", "java.text.CollationKey.toByteArray()", "android.view.ScaleGestureDetector.<init>(android.view.ScaleGestureDetector.OnScaleGestureListener,android.content.Context)", "android.view.ScaleGestureDetector.getScaleFactor()", "android.view.ScaleGestureDetector.getFocusX()", "android.view.ScaleGestureDetector.getFocusY()", "android.view.ScaleGestureDetector.onTouchEvent(android.view.MotionEvent)", "android.content.SyncRequest.Builder.<init>()", "android.content.SyncRequest.Builder.setSyncAdapter(java.lang.String,android.accounts.Account)", "android.content.SyncRequest.Builder.setRequiresCharging(long)", "android.content.SyncRequest.Builder.setIgnoreBackoff(long)", "android.content.SyncRequest.Builder.setExtras(android.os.Bundle)", "android.content.SyncRequest.Builder.syncOnce()", "android.content.SyncRequest.Builder.build()", "java.util.StringTokenizer.<init>(java.lang.String,java.lang.String)", "java.util.StringTokenizer.hasMoreTokens()", "java.util.StringTokenizer.nextToken()", "android.text.style.StrikethroughSpan.<init>()", "android.provider.ContactsContract.Contacts.getLookupUri(java.lang.String,long)", "android.provider.ContactsContract.Contacts.openContactPhotoInputStream(android.net.Uri,android.content.ContentResolver)", "java.math.MathContext.<init>(long)", "android.app.ListActivity.<init>()", "android.app.ListActivity.onCreate(android.os.Bundle)", "android.app.ListActivity.onDestroy()", "android.app.ListActivity.onSaveInstanceState(android.os.Bundle)", "android.app.ListActivity.onStart()", "android.app.ListActivity.onStop()", "java.net.Inet4Address.getByAddress(long)", "android.net.http.SslCertificate.saveState(android.net.http.SslCertificate)", "java.net.CookieManager.<init>()", "java.net.CookieManager.getCookieStore()", "java.net.CookieStore.getCookies()", "java.net.CookieStore.removeAll()", "java.net.CookieStore.add(java.net.HttpCookie,java.net.URI)", "android.content.ClipboardManager.setPrimaryClip(android.content.ClipData)", "android.view.animation.TranslateAnimation.<init>(long,long,long,long,long,long,long,long)", "android.view.animation.TranslateAnimation.setAnimationListener(android.view.animation.Animation.AnimationListener)", "android.view.animation.TranslateAnimation.setDuration(long)", "android.view.animation.TranslateAnimation.setInterpolator(android.view.animation.Interpolator)", "android.hardware.fingerprint.FingerprintManager.isHardwareDetected()", "android.hardware.fingerprint.FingerprintManager.hasEnrolledFingerprints()", "android.hardware.fingerprint.FingerprintManager.authenticate(android.os.Handler,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,long,android.os.CancellationSignal,android.hardware.fingerprint.FingerprintManager.CryptoObject)", "android.widget.AbsListView.LayoutParams.<init>(long,long)", "android.hardware.fingerprint.FingerprintManager.AuthenticationCallback.<init>()", "android.text.method.SingleLineTransformationMethod.<init>()", "android.metrics.MetricsReader.<init>()", "android.metrics.MetricsReader.read(long)", "android.metrics.MetricsReader.reset()", "android.metrics.MetricsReader.hasNext()", "android.metrics.MetricsReader.next()", "android.metrics.MetricsReader.checkpoint()", "android.metrics.LogMaker.getTimestamp()", "android.metrics.LogMaker.getCategory()", "android.metrics.LogMaker.serialize()", "android.metrics.LogMaker.getCounterName()", "android.metrics.LogMaker.isLongCounterBucket()", "android.metrics.LogMaker.getCounterBucket()", "android.metrics.LogMaker.getCounterValue()", "java.io.StringReader.<init>(java.lang.String)", "android.text.style.LeadingMarginSpan.Standard.<init>(long)", "android.os.RecoverySystem.rebootWipeCache(android.content.Context)", "android.os.RecoverySystem.installPackage(java.io.File,android.content.Context)", "android.os.RecoverySystem.verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)", "android.os.RecoverySystem.rebootWipeAb(java.lang.String,java.io.File,android.content.Context)", "android.os.RecoverySystem.installPackage(long,java.io.File,android.content.Context)", "android.os.RecoverySystem.processPackage(android.os.RecoverySystem.ProgressListener,java.io.File,android.content.Context)", "android.os.RecoverySystem.cancelScheduledUpdate(android.content.Context)", "android.os.RecoverySystem.scheduleUpdateOnBoot(java.io.File,android.content.Context)", "java.util.zip.ZipInputStream.<init>(java.io.InputStream)", "java.util.zip.ZipInputStream.getNextEntry()", "java.util.zip.ZipInputStream.close()", "java.util.zip.ZipInputStream.read(long)", "java.util.zip.ZipInputStream.closeEntry()", "android.app.admin.SystemUpdatePolicy.getPolicyType()", "android.app.admin.SystemUpdatePolicy.getInstallWindowStart()", "android.app.admin.SystemUpdatePolicy.getInstallWindowEnd()", "android.os.SystemUpdateManager.retrieveSystemUpdateInfo()", "android.os.SystemUpdateManager.updateSystemUpdateInfo(android.os.PersistableBundle)", "android.os.UpdateEngine.verifyPayloadMetadata(java.lang.String)", "android.os.UpdateEngine.cancel()", "android.os.UpdateEngine.resetStatus()", "android.os.UpdateEngine.applyPayload([Ljava.lang.String,long,long,java.lang.String)", "android.os.UpdateEngine.bind(android.os.UpdateEngineCallback)", "android.os.UpdateEngine.<init>()", "android.graphics.YuvImage.<init>(long,long,long,long,long)", "android.graphics.YuvImage.compressToJpeg(java.io.OutputStream,long,android.graphics.Rect)", "android.bluetooth.le.BluetoothLeScanner.stopScan(android.bluetooth.le.ScanCallback)", "android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults(android.bluetooth.le.ScanCallback)", "android.bluetooth.le.BluetoothLeScanner.startScan(android.bluetooth.le.ScanCallback,android.bluetooth.le.ScanSettings,java.util.List)", "android.bluetooth.BluetoothGatt.writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)", "android.bluetooth.BluetoothGatt.getDevice()", "android.bluetooth.BluetoothGatt.getServices()", "android.bluetooth.BluetoothGatt.close()", "android.bluetooth.BluetoothGatt.disconnect()", "android.bluetooth.BluetoothGatt.discoverServices()", "android.bluetooth.BluetoothGatt.readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)", "android.bluetooth.BluetoothGatt.readDescriptor(android.bluetooth.BluetoothGattDescriptor)", "android.bluetooth.BluetoothGatt.getService(java.util.UUID)", "android.bluetooth.BluetoothGatt.requestConnectionPriority(long)", "android.bluetooth.BluetoothGatt.setCharacteristicNotification(long,android.bluetooth.BluetoothGattCharacteristic)", "android.bluetooth.BluetoothGatt.writeDescriptor(android.bluetooth.BluetoothGattDescriptor)", "android.bluetooth.BluetoothGatt.requestMtu(long)", "android.bluetooth.BluetoothGattCallback.<init>()", "android.bluetooth.BluetoothGattCallback.onCharacteristicChanged(android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattCallback.onCharacteristicRead(long,android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattCallback.onCharacteristicWrite(long,android.bluetooth.BluetoothGattCharacteristic,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattCallback.onDescriptorWrite(long,android.bluetooth.BluetoothGattDescriptor,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattCallback.onMtuChanged(long,long,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattCallback.onServicesDiscovered(long,android.bluetooth.BluetoothGatt)", "android.bluetooth.BluetoothGattDescriptor.getCharacteristic()", "android.bluetooth.BluetoothGattDescriptor.getUuid()", "android.bluetooth.BluetoothGattDescriptor.setValue(long)", "android.bluetooth.BluetoothGattDescriptor.getValue()", "android.bluetooth.BluetoothGattDescriptor.getPermissions()", "android.bluetooth.BluetoothGattDescriptor.<init>(long,java.util.UUID)", "java.lang.ThreadGroup.uncaughtException(java.lang.Throwable,java.lang.Thread)", "android.telecom.TelecomManager.endCall()", "android.telecom.TelecomManager.acceptRingingCall()", "android.telecom.TelecomManager.silenceRinger()", "android.app.StatsManager.addConfig(long,long)", "android.app.StatsManager.getReports(long)", "android.app.StatsManager.getStatsMetadata()", "android.app.StatsManager.setFetchReportsOperation(long,android.app.PendingIntent)", "java.lang.ArithmeticException.<init>(java.lang.String)", "java.nio.ShortBuffer.remaining()", "java.nio.ShortBuffer.get(long)", "java.nio.ShortBuffer.position()", "java.nio.ShortBuffer.put(long)", "java.security.NoSuchProviderException.<init>()", "javax.crypto.KeyAgreement.getInstance(java.lang.String,java.lang.String)", "javax.crypto.KeyAgreement.init(java.security.Key)", "javax.crypto.KeyAgreement.doPhase(long,java.security.Key)", "javax.crypto.KeyAgreement.generateSecret()", "javax.crypto.KeyAgreement.getInstance(java.lang.String)", "javax.crypto.KeyAgreement.getInstance(java.security.Provider,java.lang.String)", "android.bluetooth.BluetoothProfile.getConnectionState(android.bluetooth.BluetoothDevice)", "java.util.concurrent.BlockingDeque.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.BlockingDeque.add(java.lang.Object)", "android.bluetooth.le.ScanResult.getDevice()", "android.bluetooth.le.ScanResult.getScanRecord()", "android.bluetooth.le.ScanResult.getRssi()", "android.bluetooth.le.ScanResult.getTimestampNanos()", "android.bluetooth.BluetoothGattServerCallback.<init>()", "android.bluetooth.le.ScanCallback.<init>()", "android.view.Choreographer.getInstance()", "android.view.Choreographer.postFrameCallback(android.view.Choreographer.FrameCallback)", "android.view.Choreographer.removeFrameCallback(android.view.Choreographer.FrameCallback)", "java.net.ConnectException.<init>(java.lang.String)", "android.os.health.SystemHealthManager.takeMyUidSnapshot()", "android.os.health.TimerStat.getCount()", "android.os.health.TimerStat.getTime()", "android.os.health.HealthStats.hasMeasurement(long)", "android.os.health.HealthStats.getMeasurement(long)", "android.os.health.HealthStats.hasStats(long)", "android.os.health.HealthStats.getStats(long)", "android.os.health.HealthStats.hasTimer(long)", "android.os.health.HealthStats.getTimer(long)", "android.os.health.HealthStats.hasTimers(long)", "android.os.health.HealthStats.getTimers(long)", "android.os.health.HealthStats.hasMeasurements(long)", "android.os.health.HealthStats.getMeasurements(long)", "java.lang.ref.PhantomReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "java.nio.file.Files.isSymbolicLink(java.nio.file.Path)", "android.os.Debug.MemoryInfo.getTotalPss()", "android.os.Debug.MemoryInfo.getTotalPrivateClean()", "android.os.Debug.MemoryInfo.getTotalSwappablePss()", "android.os.Debug.MemoryInfo.getTotalSharedDirty()", "android.os.Debug.MemoryInfo.getMemoryStats()", "android.os.Debug.MemoryInfo.<init>()", "android.content.pm.PackageStats.<init>(java.lang.String)", "android.content.pm.IPackageStatsObserver.Stub.<init>()", "android.os.storage.StorageManager.getStorageVolumes()", "android.app.usage.StorageStatsManager.queryStatsForPackage(android.os.UserHandle,java.lang.String,java.util.UUID)", "android.os.storage.StorageVolume.getState()", "android.os.storage.StorageVolume.getUuid()", "android.app.usage.StorageStats.getAppBytes()", "android.app.usage.StorageStats.getDataBytes()", "android.app.usage.StorageStats.getCacheBytes()", "java.io.ObjectInput.readUTF()", "java.io.ObjectInput.readInt()", "java.io.ObjectInput.readBoolean()", "java.io.ObjectOutput.writeUTF(java.lang.String)", "java.io.ObjectOutput.writeInt(long)", "java.io.ObjectOutput.writeBoolean(long)", "android.content.ActivityNotFoundException.<init>()", "android.provider.MediaStore.Video.Media.getContentUri(java.lang.String)", "java.security.DigestInputStream.<init>(java.security.MessageDigest,java.io.InputStream)", "java.security.DigestInputStream.read(long)", "java.security.DigestInputStream.close()", "java.security.DigestInputStream.getMessageDigest()", "java.security.DigestInputStream.read()", "java.security.DigestInputStream.read(long,long,long)", "java.nio.channels.ReadableByteChannel.close()", "java.nio.channels.ReadableByteChannel.isOpen()", "java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)", "android.os.strictmode.Violation.getStackTrace()", "java.util.concurrent.atomic.AtomicIntegerArray.get(long)", "java.util.concurrent.atomic.AtomicIntegerArray.set(long,long)", "java.nio.IntBuffer.put(long)", "java.nio.IntBuffer.position()", "java.nio.IntBuffer.get(long)", "java.nio.IntBuffer.put(long,long,long)", "java.nio.IntBuffer.remaining()", "java.nio.IntBuffer.get()", "java.nio.IntBuffer.put(long)", "java.nio.LongBuffer.put(long)", "java.nio.LongBuffer.position()", "java.nio.LongBuffer.get(long)", "android.telephony.SignalStrength.isGsm()", "android.telephony.SignalStrength.getGsmSignalStrength()", "android.telephony.SignalStrength.getCdmaDbm()", "android.telephony.NeighboringCellInfo.getLac()", "android.telephony.NeighboringCellInfo.getCid()", "android.telephony.NeighboringCellInfo.getPsc()", "android.telephony.NeighboringCellInfo.getRssi()", "android.telephony.NeighboringCellInfo.getNetworkType()", "android.location.GnssMeasurementsEvent.getClock()", "android.location.GnssMeasurementsEvent.getMeasurements()", "android.location.GnssClock.hasLeapSecond()", "android.location.GnssClock.getLeapSecond()", "android.location.GnssClock.getTimeNanos()", "android.location.GnssClock.hasTimeUncertaintyNanos()", "android.location.GnssClock.getTimeUncertaintyNanos()", "android.location.GnssClock.hasFullBiasNanos()", "android.location.GnssClock.getFullBiasNanos()", "android.location.GnssClock.hasBiasNanos()", "android.location.GnssClock.getBiasNanos()", "android.location.GnssClock.hasBiasUncertaintyNanos()", "android.location.GnssClock.getBiasUncertaintyNanos()", "android.location.GnssClock.hasDriftNanosPerSecond()", "android.location.GnssClock.getDriftNanosPerSecond()", "android.location.GnssClock.hasDriftUncertaintyNanosPerSecond()", "android.location.GnssClock.getDriftUncertaintyNanosPerSecond()", "android.location.GnssClock.getHardwareClockDiscontinuityCount()", "android.location.GnssMeasurement.getSvid()", "android.location.GnssMeasurement.getConstellationType()", "android.location.GnssMeasurement.getTimeOffsetNanos()", "android.location.GnssMeasurement.getState()", "android.location.GnssMeasurement.getReceivedSvTimeNanos()", "android.location.GnssMeasurement.getReceivedSvTimeUncertaintyNanos()", "android.location.GnssMeasurement.getCn0DbHz()", "android.location.GnssMeasurement.getPseudorangeRateMetersPerSecond()", "android.location.GnssMeasurement.getPseudorangeRateUncertaintyMetersPerSecond()", "android.location.GnssMeasurement.getAccumulatedDeltaRangeState()", "android.location.GnssMeasurement.getAccumulatedDeltaRangeMeters()", "android.location.GnssMeasurement.getAccumulatedDeltaRangeUncertaintyMeters()", "android.location.GnssMeasurement.hasCarrierFrequencyHz()", "android.location.GnssMeasurement.getCarrierFrequencyHz()", "android.location.GnssMeasurement.hasCarrierCycles()", "android.location.GnssMeasurement.getCarrierCycles()", "android.location.GnssMeasurement.hasCarrierPhase()", "android.location.GnssMeasurement.getCarrierPhase()", "android.location.GnssMeasurement.hasCarrierPhaseUncertainty()", "android.location.GnssMeasurement.getCarrierPhaseUncertainty()", "android.location.GnssMeasurement.getMultipathIndicator()", "android.location.GnssMeasurement.hasSnrInDb()", "android.location.GnssMeasurement.getSnrInDb()", "android.hardware.GeomagneticField.<init>(long,long,long,long)", "android.hardware.GeomagneticField.getX()", "android.hardware.GeomagneticField.getY()", "android.hardware.GeomagneticField.getZ()", "android.hardware.GeomagneticField.getDeclination()", "android.hardware.GeomagneticField.getFieldStrength()", "android.hardware.GeomagneticField.getInclination()", "android.location.GnssMeasurementsEvent.Callback.<init>()", "android.location.GnssNavigationMessage.Callback.<init>()", "java.util.concurrent.ThreadPoolExecutor.AbortPolicy.<init>()", "android.media.AudioFormat.Builder.<init>()", "android.media.AudioFormat.Builder.setChannelIndexMask(long)", "android.media.AudioFormat.Builder.setEncoding(long)", "android.media.AudioFormat.Builder.setSampleRate(long)", "android.media.AudioFormat.Builder.build()", "android.media.AudioFormat.Builder.setChannelMask(long)", "android.media.AudioRecord.Builder.<init>()", "android.media.AudioRecord.Builder.setAudioSource(long)", "android.media.AudioRecord.Builder.setAudioFormat(android.media.AudioFormat)", "android.media.AudioRecord.Builder.setBufferSizeInBytes(long)", "android.media.AudioRecord.Builder.build()", "android.media.AudioDeviceInfo.getProductName()", "android.media.AudioDeviceInfo.getType()", "android.net.wifi.RttManager.getRttCapabilities()", "android.net.wifi.RttManager.startRanging(android.net.wifi.RttManager.RttListener,[Landroid.net.wifi.RttManager.RttParams)", "android.net.wifi.ScanResult.is80211mcResponder()", "android.net.wifi.RttManager.RttParams.<init>()", "android.net.wifi.WifiScanner.ScanSettings.<init>()", "android.net.wifi.WifiScanner.startScan(android.os.WorkSource,android.net.wifi.WifiScanner.ScanListener,android.net.wifi.WifiScanner.ScanSettings)", "android.net.wifi.WifiScanner.startScan(android.net.wifi.WifiScanner.ScanListener,android.net.wifi.WifiScanner.ScanSettings)", "android.net.wifi.WifiScanner.stopBackgroundScan(android.net.wifi.WifiScanner.ScanListener)", "android.net.wifi.WifiScanner.startBackgroundScan(android.net.wifi.WifiScanner.ScanListener,android.net.wifi.WifiScanner.ScanSettings)", "android.net.wifi.WifiScanner.getScanResults()", "java.text.Format.format(java.lang.Object)", "android.util.Base64OutputStream.<init>(long,java.io.OutputStream)", "java.io.FilterWriter.<init>(java.io.Writer)", "java.text.FieldPosition.<init>(long)", "android.location.LocationListener.onLocationChanged(android.location.Location)", "android.location.GeocoderParams.getLocale()", "android.location.GeocoderParams.getClientPackage()", "android.location.Address.<init>(java.util.Locale)", "android.location.Address.setFeatureName(java.lang.String)", "android.location.Address.setThoroughfare(java.lang.String)", "android.location.Address.setAdminArea(java.lang.String)", "android.location.Address.setSubThoroughfare(java.lang.String)", "android.location.Address.setPostalCode(java.lang.String)", "android.location.Address.setPremises(java.lang.String)", "android.location.Address.setSubLocality(java.lang.String)", "android.location.Address.setLocality(java.lang.String)", "android.location.Address.getSubLocality()", "android.location.Address.getLocality()", "android.location.Address.setSubAdminArea(java.lang.String)", "android.location.Address.setCountryName(java.lang.String)", "android.location.Address.setCountryCode(java.lang.String)", "android.location.Address.setAddressLine(java.lang.String,long)", "android.location.Address.setLatitude(long)", "android.location.Address.setLongitude(long)", "android.hardware.location.GeofenceHardware.registerForMonitorStateChangeCallback(android.hardware.location.GeofenceHardwareMonitorCallback,long)", "android.hardware.location.GeofenceHardware.addGeofence(android.hardware.location.GeofenceHardwareCallback,android.hardware.location.GeofenceHardwareRequest,long,long)", "android.hardware.location.GeofenceHardware.getMonitoringTypes()", "android.hardware.location.GeofenceHardware.removeGeofence(long,long)", "android.hardware.location.GeofenceHardware.getStatusOfMonitoringType(long)", "android.hardware.location.GeofenceHardwareRequest.createCircularGeofence(long,long,long)", "android.hardware.location.GeofenceHardwareRequest.setLastTransition(long)", "android.hardware.location.GeofenceHardwareRequest.setMonitorTransitions(long)", "android.hardware.location.GeofenceHardwareRequest.setNotificationResponsiveness(long)", "android.hardware.location.GeofenceHardwareRequest.setUnknownTimer(long)", "android.hardware.location.GeofenceHardwareCallback.<init>()", "android.hardware.location.GeofenceHardwareCallback.onGeofenceAdd(long,long)", "android.hardware.location.GeofenceHardwareCallback.onGeofenceRemove(long,long)", "android.hardware.location.GeofenceHardwareCallback.onGeofenceTransition(long,long,android.location.Location,long,long)", "android.hardware.location.GeofenceHardwareMonitorCallback.<init>()", "android.hardware.location.GeofenceHardwareMonitorCallback.onMonitoringSystemChange(android.location.Location,long,long)", "android.hardware.location.NanoAppFilter.<init>(long,long,long,long)", "android.hardware.location.ContextHubManager.findNanoAppOnHub(android.hardware.location.NanoAppFilter,long)", "android.hardware.location.ContextHubManager.getContextHubHandles()", "android.hardware.location.ContextHubManager.getContextHubInfo(long)", "android.hardware.location.ContextHubManager.registerCallback(android.hardware.location.ContextHubManager.Callback)", "android.hardware.location.ContextHubManager.getNanoAppInstanceInfo(long)", "android.hardware.location.ContextHubManager.sendMessage(android.hardware.location.ContextHubMessage,long,long)", "android.hardware.location.ContextHubManager.loadNanoApp(android.hardware.location.NanoApp,long)", "android.hardware.location.ContextHubManager.unloadNanoApp(long)", "android.content.RestrictionsManager.getApplicationRestrictions()", "android.app.AutomaticZenRule.<init>(long,long,android.net.Uri,android.content.ComponentName,java.lang.String)", "android.app.AutomaticZenRule.getOwner()", "android.app.AutomaticZenRule.setConditionId(android.net.Uri)", "android.app.AutomaticZenRule.isEnabled()", "android.app.AutomaticZenRule.setEnabled(long)", "android.app.AutomaticZenRule.getConditionId()", "android.location.LocationRequest.createFromDeprecatedProvider(long,long,long,java.lang.String)", "android.location.LocationRequest.setHideFromAppOps(long)", "android.location.LocationRequest.setWorkSource(android.os.WorkSource)", "android.net.wifi.WifiScanner.ScanData.getResults()", "android.bluetooth.BluetoothClass.getDeviceClass()", "android.bluetooth.BluetoothClass.getMajorDeviceClass()", "android.bluetooth.le.ScanSettings.Builder.<init>()", "android.bluetooth.le.ScanSettings.Builder.setScanMode(long)", "android.bluetooth.le.ScanSettings.Builder.setReportDelay(long)", "android.bluetooth.le.ScanSettings.Builder.setScanResultType(long)", "android.bluetooth.le.ScanSettings.Builder.setNumOfMatches(long)", "android.bluetooth.le.ScanSettings.Builder.setCallbackType(long)", "android.bluetooth.le.ScanSettings.Builder.setMatchMode(long)", "android.bluetooth.le.ScanSettings.Builder.build()", "android.bluetooth.le.ScanFilter.Builder.<init>()", "android.bluetooth.le.ScanFilter.Builder.setDeviceName(java.lang.String)", "android.bluetooth.le.ScanFilter.Builder.setServiceData(long,long,android.os.ParcelUuid)", "android.bluetooth.le.ScanFilter.Builder.build()", "android.bluetooth.le.ScanFilter.Builder.setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)", "android.bluetooth.le.ScanFilter.Builder.setServiceUuid(android.os.ParcelUuid)", "android.bluetooth.le.ScanFilter.Builder.setServiceData(long,android.os.ParcelUuid)", "android.bluetooth.le.ScanFilter.Builder.setManufacturerData(long,long,long)", "android.bluetooth.le.ScanFilter.Builder.setManufacturerData(long,long)", "android.bluetooth.le.ScanFilter.Builder.setDeviceAddress(java.lang.String)", "android.bluetooth.le.ScanRecord.getBytes()", "java.util.logging.ErrorManager.<init>()", "java.util.logging.Handler.setFormatter(java.util.logging.Formatter)", "java.util.logging.Handler.setLevel(java.util.logging.Level)", "java.util.logging.Handler.setFilter(java.util.logging.Filter)", "java.util.logging.Handler.setErrorManager(java.util.logging.ErrorManager)", "java.util.logging.Handler.close()", "java.util.logging.Handler.flush()", "java.util.logging.Handler.publish(java.util.logging.LogRecord)", "android.service.notification.Condition.<init>(long,java.lang.String,android.net.Uri)", "android.widget.Adapter.getItem(long)", "android.widget.AdapterView.OnItemClickListener.onItemClick(long,long,android.view.View,android.widget.AdapterView)", "android.view.View.OnTouchListener.onTouch(android.view.MotionEvent,android.view.View)", "java.util.concurrent.atomic.AtomicReferenceArray.length()", "java.util.concurrent.atomic.AtomicReferenceArray.get(long)", "java.util.concurrent.atomic.AtomicReferenceArray.set(java.lang.Object,long)", "java.util.concurrent.atomic.AtomicReferenceArray.<init>(long)", "java.util.AbstractMap.SimpleImmutableEntry.<init>(java.lang.Object,java.lang.Object)", "java.security.PrivilegedActionException.getCause()", "java.lang.NoSuchFieldError.<init>(java.lang.String)", "java.util.AbstractSequentialList.<init>()", "java.util.Formattable.formatTo(long,long,long,java.util.Formatter)", "java.util.logging.Filter.isLoggable(java.util.logging.LogRecord)", "java.io.Reader.read(long)", "java.io.Reader.read(long,long,long)", "java.io.Reader.close()", "java.math.RoundingMode.ordinal()", "java.math.RoundingMode.values()", "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(java.lang.String,java.lang.Class,java.lang.Class)", "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.lazySet(java.lang.Object,java.lang.Object)", "java.util.concurrent.atomic.AtomicReferenceFieldUpdater.compareAndSet(java.lang.Object,java.lang.Object,java.lang.Object)", "java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)", "java.util.concurrent.locks.LockSupport.park(java.lang.Object)", "java.util.concurrent.locks.LockSupport.parkNanos(long,java.lang.Object)", "java.lang.reflect.UndeclaredThrowableException.getCause()", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.String,java.lang.Class)", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(java.lang.Object)", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet(long,java.lang.Object)", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(long,long,java.lang.Object)", "java.util.concurrent.atomic.AtomicIntegerFieldUpdater.set(long,java.lang.Object)", "java.lang.ExceptionInInitializerError.<init>(java.lang.Throwable)", "android.content.BroadcastReceiver.PendingResult.finish()", "java.lang.ArrayStoreException.<init>(java.lang.String)", "java.util.AbstractMap.SimpleEntry.<init>(java.lang.Object,java.lang.Object)", "java.util.zip.Adler32.<init>()", "java.util.zip.Adler32.update(long)", "java.util.zip.Adler32.update(long,long,long)", "java.util.zip.Adler32.getValue()", "android.hardware.location.ContextHubInfo.getMaxPacketLengthBytes()", "android.hardware.location.ContextHubInfo.getId()", "android.hardware.location.NanoAppInstanceInfo.getAppId()", "android.hardware.location.NanoAppInstanceInfo.getHandle()", "android.hardware.location.NanoAppInstanceInfo.getName()", "android.hardware.location.NanoAppInstanceInfo.getAppVersion()", "android.hardware.location.ContextHubManager.Callback.<init>()", "android.hardware.location.ContextHubMessage.<init>(long,long,long)", "android.hardware.location.ContextHubMessage.getMsgType()", "android.hardware.location.ContextHubMessage.getData()", "android.hardware.location.ContextHubMessage.getVersion()", "android.hardware.location.NanoApp.<init>(long,long)", "android.hardware.location.NanoApp.<init>(long,long)", "android.os.MessageQueue.addIdleHandler(android.os.MessageQueue.IdleHandler)", "java.io.SequenceInputStream.<init>(java.io.InputStream,java.io.InputStream)", "java.io.DataInput.readInt()", "javax.crypto.interfaces.DHPublicKey.getY()", "javax.crypto.spec.DHPublicKeySpec.<init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)", "java.net.Proxy.hashCode()", "java.net.Proxy.equals(java.lang.Object)", "java.net.Proxy.type()", "java.net.Proxy.address()", "java.net.MalformedURLException.<init>(java.lang.String)", "java.net.IDN.toASCII(java.lang.String)", "java.net.IDN.toASCII(long,java.lang.String)", "java.net.ProxySelector.getDefault()", "java.net.ProxySelector.select(java.net.URI)", "java.net.ProxySelector.connectFailed(java.io.IOException,java.net.SocketAddress,java.net.URI)", "java.net.CookieHandler.getDefault()", "java.net.CookieHandler.put(java.util.Map,java.net.URI)", "java.net.CookieHandler.get(java.util.Map,java.net.URI)", "javax.net.SocketFactory.getDefault()", "javax.net.SocketFactory.createSocket()", "java.net.URLStreamHandler.<init>()", "java.lang.reflect.Proxy.newProxyInstance(java.lang.reflect.InvocationHandler,[Ljava.lang.Class,java.lang.ClassLoader)", "java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)", "java.io.InterruptedIOException.<init>()", "java.io.InterruptedIOException.<init>(java.lang.String)", "java.io.InterruptedIOException.initCause(java.lang.Throwable)", "java.util.zip.Inflater.<init>()", "java.util.zip.Inflater.inflate(long,long,long)", "java.util.zip.Inflater.needsDictionary()", "java.util.zip.Inflater.getTotalIn()", "java.util.zip.Inflater.finished()", "java.util.zip.Inflater.getBytesWritten()", "java.util.zip.Inflater.needsInput()", "java.util.zip.Inflater.end()", "java.util.zip.Inflater.setInput(long,long,long)", "java.util.zip.Inflater.<init>(long)", "java.util.zip.Inflater.reset()", "java.util.zip.Inflater.getRemaining()", "java.util.zip.Deflater.<init>()", "java.util.zip.Deflater.setDictionary(long)", "java.util.zip.Deflater.deflate(long,long,long,long)", "java.util.zip.Deflater.needsInput()", "java.util.zip.Deflater.deflate(long,long,long)", "java.util.zip.Deflater.setInput(long,long,long)", "java.util.zip.Deflater.finish()", "java.util.zip.Deflater.end()", "java.net.Authenticator.requestPasswordAuthentication(java.net.Authenticator.RequestorType,java.net.URL,java.lang.String,java.lang.String,java.lang.String,long,java.net.InetAddress,java.lang.String)", "java.net.PasswordAuthentication.getUserName()", "java.net.PasswordAuthentication.getPassword()", "java.net.UnknownServiceException.<init>(java.lang.String)", "java.security.Principal.getName()", "java.net.HttpRetryException.<init>(long,java.lang.String)", "java.net.SocketPermission.<init>(java.lang.String,java.lang.String)", "java.util.ServiceConfigurationError.<init>(java.lang.Throwable,java.lang.String)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(java.lang.String,java.lang.Class)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndIncrement(java.lang.Object)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAdd(long,java.lang.Object)", "java.util.concurrent.ConcurrentSkipListMap.<init>()", "javax.naming.directory.InitialDirContext.<init>()", "javax.naming.directory.InitialDirContext.getAttributes([Ljava.lang.String,java.lang.String)", "javax.naming.directory.Attributes.getAll()", "javax.naming.NamingEnumeration.hasMore()", "javax.naming.NamingEnumeration.next()", "javax.naming.NamingEnumeration.close()", "javax.naming.directory.Attribute.getAll()", "java.util.zip.DataFormatException.getMessage()", "java.util.zip.DataFormatException.<init>(java.lang.String)", "java.net.SocketAddress.<init>()", "java.nio.channels.ClosedChannelException.<init>()", "java.nio.channels.WritableByteChannel.close()", "java.nio.channels.WritableByteChannel.write(java.nio.ByteBuffer)"]
}