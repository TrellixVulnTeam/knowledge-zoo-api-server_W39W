{
"name":"Falling Fred", 
"SHA256":"1e6b6a59af94376c96b8c583b75b0480dd9c9f5340c209e938ead1a3de9401d7", 
"versionCode":"4", 
"versionName":"1.0.3", 
"size":28560956, 
"minSDKVersion":"8", 
"certificate(fingerprint)":"AE:F5:DB:A2:B0:6C:7D:D4:B2:BD:69:28:44:EB:5B:53:9B:8A:4F:8C:FC:FB:D2:44:03:DF:AD:2C:29:78:9D:4A", 
"certificate(owner)":"Common Name: Juan Pablo Bettini, Organizational Unit: Founder, Organization: Dedalord, Locality: Ciudad Autonoma de Buenos Aires, State/Province: Buenos Aires, Country: AR", 
"permission":["android.permission.INTERNET", "android.permission.WAKE_LOCK", "android.permission.READ_PHONE_STATE", "com.android.vending.BILLING", "android.permission.ACCESS_NETWORK_STATE", "android.permission.GET_ACCOUNTS", "android.permission.WRITE_EXTERNAL_STORAGE"], 
"API":["java.lang.Object.<init>()", "java.lang.Object.getClass()", "java.lang.Object.toString()", "java.lang.Object.equals(java.lang.Object)", "java.lang.Object.hashCode()", "java.lang.Object.notifyAll()", "java.lang.Object.wait()", "java.lang.Object.clone()", "java.lang.Object.finalize()", "java.lang.Object.notify()", "android.os.Parcel.obtain()", "android.os.Parcel.writeInterfaceToken(java.lang.String)", "android.os.Parcel.writeInt(long)", "android.os.Parcel.readException()", "android.os.Parcel.readInt()", "android.os.Parcel.recycle()", "android.os.Parcel.writeString(java.lang.String)", "android.os.Parcel.enforceInterface(java.lang.String)", "android.os.Parcel.writeNoException()", "android.os.Bundle.writeToParcel(long,android.os.Parcel)", "android.os.Bundle.getBoolean(long,java.lang.String)", "android.os.Bundle.getInt(long,java.lang.String)", "android.os.Bundle.<init>()", "android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getLong(java.lang.String)", "android.os.Bundle.clone()", "android.os.Bundle.putLong(long,java.lang.String)", "android.os.Bundle.containsKey(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.keySet()", "android.os.Bundle.get(java.lang.String)", "android.os.Bundle.putByteArray(long,java.lang.String)", "android.os.Bundle.isEmpty()", "android.os.Bundle.getByteArray(java.lang.String)", "android.os.Bundle.putAll(android.os.Bundle)", "android.os.Bundle.putInt(long,java.lang.String)", "android.os.Bundle.putStringArray([Ljava.lang.String,java.lang.String)", "android.os.Bundle.getLong(long,java.lang.String)", "android.os.Bundle.getParcelable(java.lang.String)", "android.os.Bundle.getBoolean(java.lang.String)", "android.os.Bundle.putBoolean(long,java.lang.String)", "android.os.Bundle.putFloat(long,java.lang.String)", "android.os.Bundle.remove(java.lang.String)", "android.os.Bundle.<init>(android.os.Bundle)", "android.os.IBinder.transact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.IBinder.queryLocalInterface(java.lang.String)", "android.os.Parcelable.Creator.createFromParcel(android.os.Parcel)", "android.os.Binder.<init>()", "android.os.Binder.onTransact(long,android.os.Parcel,android.os.Parcel,long)", "android.content.SharedPreferences.edit()", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.getLong(long,java.lang.String)", "android.content.SharedPreferences.contains(java.lang.String)", "android.content.SharedPreferences.registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)", "android.content.SharedPreferences.unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)", "android.content.SharedPreferences.getInt(long,java.lang.String)", "android.content.SharedPreferences.getFloat(long,java.lang.String)", "android.content.SharedPreferences.getAll()", "android.content.SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.Editor.putLong(long,java.lang.String)", "android.content.SharedPreferences.Editor.commit()", "android.content.SharedPreferences.Editor.clear()", "android.content.SharedPreferences.Editor.remove(java.lang.String)", "android.content.SharedPreferences.Editor.putInt(long,java.lang.String)", "android.content.SharedPreferences.Editor.putFloat(long,java.lang.String)", "java.io.FileNotFoundException.getMessage()", "java.io.FileNotFoundException.<init>(java.lang.String)", "java.io.FileNotFoundException.toString()", "java.io.IOException.getMessage()", "java.io.IOException.printStackTrace()", "java.io.IOException.<init>(java.lang.String)", "java.io.IOException.<init>()", "java.io.IOException.initCause(java.lang.Throwable)", "java.io.IOException.toString()", "java.net.MalformedURLException.getMessage()", "java.net.MalformedURLException.toString()", "android.app.Activity.<init>()", "android.app.Activity.onConfigurationChanged(android.content.res.Configuration)", "android.app.Activity.onCreate(android.os.Bundle)", "android.app.Activity.onDestroy()", "android.app.Activity.onPause()", "android.app.Activity.onResume()", "android.app.Activity.onWindowFocusChanged(long)", "android.app.Activity.getPreferences(long)", "android.app.Activity.startActivity(android.content.Intent)", "android.app.Activity.getBaseContext()", "android.app.Activity.startActivityForResult(long,android.content.Intent)", "android.app.Activity.finish()", "android.app.Activity.getWindowManager()", "android.app.Activity.addContentView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.app.Activity.getCacheDir()", "android.app.Activity.runOnUiThread(java.lang.Runnable)", "android.app.Activity.bindService(long,android.content.ServiceConnection,android.content.Intent)", "android.app.Activity.getSharedPreferences(long,java.lang.String)", "android.app.Activity.unbindService(android.content.ServiceConnection)", "android.app.Activity.onKeyDown(android.view.KeyEvent,long)", "android.app.Activity.onSaveInstanceState(android.os.Bundle)", "android.app.Activity.getApplication()", "android.app.Activity.getIntent()", "android.app.Activity.getLocalClassName()", "android.app.Activity.isFinishing()", "android.app.Activity.getWindow()", "android.app.Activity.getRequestedOrientation()", "android.app.Activity.setRequestedOrientation(long)", "android.app.Activity.getPackageManager()", "android.app.Activity.getComponentName()", "android.view.Window.setFlags(long,long)", "android.view.Window.addContentView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.view.Window.getDecorView()", "android.view.Window.takeSurface(android.view.SurfaceHolder.Callback2)", "android.view.Window.setFormat(long)", "android.view.Window.setSoftInputMode(long)", "android.view.Window.setGravity(long)", "android.view.Window.requestFeature(long)", "android.view.Window.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.view.Window.clearFlags(long)", "android.view.View.requestFocus()", "android.view.View.getContext()", "android.view.View.getId()", "android.view.View.setId(long)", "android.view.View.setOnClickListener(android.view.View.OnClickListener)", "android.view.View.getParent()", "android.view.View.inflate(android.view.ViewGroup,long,android.content.Context)", "android.view.View.<init>(android.content.Context)", "android.view.View.setBackgroundResource(long)", "android.view.View.setVisibility(long)", "android.view.View.findViewById(long)", "android.view.View.isShown()", "android.view.View.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.view.View.getLayoutParams()", "android.view.View.onTouchEvent(android.view.MotionEvent)", "android.view.View.onKeyPreIme(android.view.KeyEvent,long)", "android.view.View.getWindowVisibleDisplayFrame(android.graphics.Rect)", "android.view.View.getWidth()", "android.view.View.getHeight()", "android.view.View.setSystemUiVisibility(long)", "android.view.View.getHandler()", "android.view.View.getSystemUiVisibility()", "android.view.View.setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)", "android.view.View.dispatchGenericMotionEvent(android.view.MotionEvent)", "android.view.View.dispatchTouchEvent(android.view.MotionEvent)", "android.view.View.dispatchTrackballEvent(android.view.MotionEvent)", "android.content.Intent.<init>()", "android.content.Intent.setClass(java.lang.Class,android.content.Context)", "android.content.Intent.setClassName(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.getExtras()", "android.content.Intent.getIntExtra(long,java.lang.String)", "android.content.Intent.<init>(android.net.Uri,java.lang.String)", "android.content.Intent.getAction()", "android.content.Intent.<init>(java.lang.String)", "android.content.Intent.setData(android.net.Uri)", "android.content.Intent.addCategory(java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.<init>(java.lang.Class,android.content.Context)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.getLongExtra(long,java.lang.String)", "android.content.Intent.getStringArrayExtra(java.lang.String)", "android.content.Intent.hasExtra(java.lang.String)", "android.content.Intent.putExtra(long,java.lang.String)", "android.content.Intent.setFlags(long)", "android.content.Intent.setDataAndType(java.lang.String,android.net.Uri)", "android.content.Intent.addFlags(long)", "android.content.Intent.putExtras(android.os.Bundle)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.isLoggable(long,java.lang.String)", "android.util.Log.e(java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.webkit.WebView.<init>(long,android.util.AttributeSet,android.content.Context)", "android.webkit.WebView.getSettings()", "android.webkit.WebView.setVisibility(long)", "android.webkit.WebView.setWebViewClient(android.webkit.WebViewClient)", "android.webkit.WebView.loadUrl(java.lang.String)", "android.webkit.WebView.requestFocus(long)", "android.webkit.WebView.<init>(android.content.Context)", "android.webkit.WebView.setVerticalScrollBarEnabled(long)", "android.webkit.WebView.setHorizontalScrollBarEnabled(long)", "android.webkit.WebView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.webkit.WebView.getUrl()", "android.webkit.WebView.setId(long)", "android.webkit.WebView.setScrollBarStyle(long)", "android.webkit.WebView.setBackgroundColor(long)", "android.webkit.WebView.addJavascriptInterface(java.lang.String,java.lang.Object)", "android.webkit.WebView.loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "android.webkit.WebView.loadData(java.lang.String,java.lang.String,java.lang.String)", "android.webkit.WebView.getContext()", "android.webkit.WebView.clearCache(long)", "android.webkit.WebView.destroyDrawingCache()", "android.webkit.WebView.destroy()", "android.webkit.WebView.canGoBack()", "android.webkit.WebView.goBack()", "android.webkit.WebSettings.setJavaScriptEnabled(long)", "android.webkit.WebSettings.setUseWideViewPort(long)", "android.webkit.WebSettings.setSavePassword(long)", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)", "android.os.AsyncTask.<init>()", "android.os.AsyncTask.onCancelled()", "android.os.AsyncTask.execute([Ljava.lang.Object)", "java.lang.Exception.printStackTrace()", "java.lang.Exception.getMessage()", "java.lang.Exception.<init>()", "java.lang.Exception.<init>(java.lang.String)", "java.lang.Exception.<init>(java.lang.Throwable,java.lang.String)", "java.lang.Exception.<init>(java.lang.Throwable)", "java.lang.Exception.getCause()", "java.lang.Exception.initCause(java.lang.Throwable)", "java.lang.Exception.getStackTrace()", "java.lang.Exception.toString()", "java.lang.Exception.getLocalizedMessage()", "android.app.ProgressDialog.dismiss()", "android.app.ProgressDialog.show(java.lang.CharSequence,java.lang.CharSequence,android.content.Context)", "android.app.ProgressDialog.show()", "android.app.ProgressDialog.<init>(android.content.Context)", "android.app.ProgressDialog.requestWindowFeature(long)", "android.app.ProgressDialog.setMessage(java.lang.CharSequence)", "android.app.ProgressDialog.cancel()", "android.app.ProgressDialog.show(long,java.lang.CharSequence,java.lang.CharSequence,android.content.Context)", "java.lang.String.indexOf(long,java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(long,long)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(long,long)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.contains(java.lang.CharSequence)", "java.lang.String.split(java.lang.String)", "java.lang.String.getBytes()", "java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)", "java.lang.String.hashCode()", "java.lang.String.trim()", "java.lang.String.substring(long)", "java.lang.String.<init>(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(long)", "java.lang.String.toUpperCase()", "java.lang.String.toCharArray()", "java.lang.String.<init>(long)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.charAt(long)", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.<init>(java.lang.String,long)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.intern()", "java.lang.String.<init>()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.getChars(long,long,long,long)", "java.lang.String.<init>(long,long,long)", "java.lang.String.matches(java.lang.String)", "java.lang.String.replace(long,long)", "java.lang.String.<init>(long)", "java.lang.String.valueOf(long)", "java.lang.String.lastIndexOf(long)", "java.lang.String.valueOf(java.lang.Object)", "java.lang.String.format([Ljava.lang.Object,java.lang.String)", "java.lang.String.valueOf(long)", "java.lang.String.split(long,java.lang.String)", "java.lang.String.<init>(long,long,long)", "java.lang.String.compareToIgnoreCase(java.lang.String)", "java.lang.String.valueOf(long)", "java.lang.String.valueOf(long)", "java.lang.String.valueOf(long)", "java.util.HashMap.<init>()", "java.util.HashMap.<init>(long)", "java.util.HashMap.get(java.lang.Object)", "java.util.HashMap.remove(java.lang.Object)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)", "java.util.HashMap.<init>(java.util.Map)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.Map.get(java.lang.Object)", "java.util.Map.remove(java.lang.Object)", "java.util.Map.isEmpty()", "java.util.Map.size()", "java.util.Map.entrySet()", "java.util.Map.clear()", "java.util.Map.values()", "java.util.Map.containsKey(java.lang.Object)", "java.util.Map.containsValue(java.lang.Object)", "java.util.Map.keySet()", "java.util.Map.putAll(java.util.Map)", "java.net.URLDecoder.decode(java.lang.String)", "java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.lang.Error.<init>(java.lang.Throwable)", "java.lang.Error.<init>(java.lang.String)", "java.lang.Error.<init>(java.lang.Throwable,java.lang.String)", "java.lang.Error.<init>()", "android.webkit.WebViewClient.<init>()", "android.webkit.WebViewClient.onPageFinished(java.lang.String,android.webkit.WebView)", "android.webkit.WebViewClient.onPageStarted(android.graphics.Bitmap,java.lang.String,android.webkit.WebView)", "android.webkit.WebViewClient.onReceivedError(java.lang.String,java.lang.String,long,android.webkit.WebView)", "java.lang.StringBuilder.<init>()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(java.lang.String)", "java.lang.StringBuilder.substring(long,long)", "java.lang.StringBuilder.<init>(long)", "java.lang.StringBuilder.append(java.lang.CharSequence)", "java.lang.StringBuilder.append(long,long,java.lang.CharSequence)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.setLength(long)", "java.lang.StringBuilder.append(long,long,long)", "java.lang.Thread.<init>()", "java.lang.Thread.getDefaultUncaughtExceptionHandler()", "java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)", "java.lang.Thread.sleep(long)", "java.lang.Thread.<init>(java.lang.String)", "java.lang.Thread.holdsLock(java.lang.Object)", "java.lang.Thread.currentThread()", "java.lang.Thread.interrupt()", "java.lang.Thread.<init>(java.lang.String,java.lang.Runnable)", "java.lang.Thread.start()", "java.lang.Thread.<init>(java.lang.Runnable)", "java.lang.Thread.setName(java.lang.String)", "java.lang.Thread.setDaemon(long)", "java.lang.Thread.setPriority(long)", "java.lang.Thread.setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)", "java.lang.Thread.join()", "java.lang.Thread.isAlive()", "java.lang.Thread.getContextClassLoader()", "java.lang.Throwable.<init>(java.lang.String)", "java.lang.Throwable.printStackTrace()", "java.lang.Throwable.getStackTrace()", "java.lang.Throwable.getMessage()", "java.lang.Throwable.getCause()", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.lang.Throwable.printStackTrace(java.io.PrintStream)", "java.lang.Throwable.toString()", "java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement)", "android.webkit.CookieSyncManager.getInstance()", "android.webkit.CookieSyncManager.sync()", "android.webkit.CookieSyncManager.createInstance(android.content.Context)", "android.os.Handler.<init>()", "android.os.Handler.<init>(android.os.Looper)", "android.os.Handler.post(java.lang.Runnable)", "android.os.Handler.removeCallbacks(java.lang.Runnable)", "android.os.Handler.postDelayed(long,java.lang.Runnable)", "android.os.Handler.handleMessage(android.os.Message)", "android.os.Message.getData()", "android.os.Message.obtain()", "android.os.Message.setData(android.os.Bundle)", "android.content.Context.unbindService(android.content.ServiceConnection)", "android.content.Context.getPackageManager()", "android.content.Context.checkCallingOrSelfPermission(java.lang.String)", "android.content.Context.bindService(long,android.content.ServiceConnection,android.content.Intent)", "android.content.Context.startActivity(android.content.Intent)", "android.content.Context.getResources()", "android.content.Context.getPackageName()", "android.content.Context.getApplicationContext()", "android.content.Context.getContentResolver()", "android.content.Context.getFileStreamPath(java.lang.String)", "android.content.Context.getSystemService(java.lang.String)", "android.content.Context.startService(android.content.Intent)", "android.content.Context.getSharedPreferences(long,java.lang.String)", "android.content.Context.getMainLooper()", "android.os.Messenger.<init>(android.os.Handler)", "android.os.Messenger.send(android.os.Message)", "android.os.Messenger.<init>(android.os.IBinder)", "java.lang.IllegalArgumentException.<init>(java.lang.String)", "java.lang.IllegalArgumentException.getMessage()", "java.lang.IllegalArgumentException.<init>(java.lang.Throwable)", "java.lang.IllegalArgumentException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.IllegalArgumentException.<init>()", "android.text.TextUtils.join([Ljava.lang.Object,java.lang.CharSequence)", "android.text.TextUtils.isEmpty(java.lang.CharSequence)", "android.content.pm.PackageManager.resolveActivity(long,android.content.Intent)", "android.content.pm.PackageManager.getPackageInfo(long,java.lang.String)", "android.content.pm.PackageManager.resolveService(long,android.content.Intent)", "android.content.pm.PackageManager.queryIntentActivities(long,android.content.Intent)", "android.content.pm.PackageManager.getInstalledApplications(long)", "android.content.pm.PackageManager.hasSystemFeature(java.lang.String)", "android.content.pm.PackageManager.getActivityInfo(long,android.content.ComponentName)", "android.content.pm.Signature.toCharsString()", "java.lang.System.currentTimeMillis()", "java.lang.System.getProperties()", "java.lang.System.nanoTime()", "java.lang.System.arraycopy(long,long,java.lang.Object,long,java.lang.Object)", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.identityHashCode(java.lang.Object)", "java.lang.System.loadLibrary(java.lang.String)", "java.lang.System.getProperty(java.lang.String,java.lang.String)", "java.lang.System.setProperty(java.lang.String,java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.valueOf(long)", "java.lang.Long.longValue()", "java.lang.Long.toString(long,long)", "java.lang.Long.toHexString(long)", "java.lang.Long.toString(long)", "java.lang.Long.valueOf(java.lang.String)", "java.lang.Long.<init>(long)", "java.lang.Long.rotateLeft(long,long)", "java.lang.Long.reverseBytes(long)", "java.lang.Long.numberOfTrailingZeros(long)", "java.lang.Long.numberOfLeadingZeros(long)", "java.lang.Long.parseLong(long,java.lang.String)", "java.lang.Long.<init>(java.lang.String)", "java.lang.Long.intValue()", "java.lang.RuntimeException.<init>(java.lang.String)", "java.lang.RuntimeException.<init>(java.lang.Throwable)", "java.lang.RuntimeException.<init>()", "java.lang.RuntimeException.<init>(java.lang.Throwable,java.lang.String)", "android.widget.FrameLayout.setBackgroundColor(long)", "android.widget.FrameLayout.addView(android.view.View)", "android.widget.FrameLayout.<init>(android.content.Context)", "android.widget.FrameLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.FrameLayout.removeView(android.view.View)", "android.widget.FrameLayout.onKeyDown(android.view.KeyEvent,long)", "android.widget.FrameLayout.onKeyUp(android.view.KeyEvent,long)", "android.widget.FrameLayout.onKeyPreIme(android.view.KeyEvent,long)", "android.widget.FrameLayout.getChildCount()", "android.widget.FrameLayout.addView(long,android.view.View)", "android.widget.FrameLayout.requestLayout()", "android.widget.FrameLayout.getContext()", "android.widget.FrameLayout.onTouchEvent(android.view.MotionEvent)", "android.widget.FrameLayout.updateViewLayout(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.ImageView.setVisibility(long)", "android.widget.ImageView.<init>(android.content.Context)", "android.widget.ImageView.setOnClickListener(android.view.View.OnClickListener)", "android.widget.ImageView.setImageDrawable(android.graphics.drawable.Drawable)", "android.widget.ImageView.getDrawable()", "android.widget.ImageView.setAdjustViewBounds(long)", "android.widget.ImageView.setMinimumWidth(long)", "android.widget.ImageView.setMinimumHeight(long)", "android.widget.ImageView.setMaxWidth(long)", "android.widget.ImageView.setMaxHeight(long)", "android.widget.ImageView.setId(long)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.widget.ImageView.setScaleType(android.widget.ImageView.ScaleType)", "android.widget.ImageView.getId()", "android.widget.ImageView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.net.Uri.parse(java.lang.String)", "android.net.Uri.decode(java.lang.String)", "android.net.Uri.encode(java.lang.String)", "android.net.Uri.isRelative()", "android.net.Uri.fromFile(java.io.File)", "android.widget.FrameLayout.LayoutParams.<init>(long,long)", "android.widget.FrameLayout.LayoutParams.<init>(long,long,long)", "android.app.Dialog.<init>(long,android.content.Context)", "android.app.Dialog.onCreate(android.os.Bundle)", "android.app.Dialog.show()", "android.app.Dialog.cancel()", "android.app.Dialog.<init>(android.content.Context)", "android.app.Dialog.dismiss()", "android.app.Dialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.Dialog.isShowing()", "android.content.res.Resources.getDrawable(long)", "android.content.res.Resources.getDisplayMetrics()", "android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)", "android.content.res.Resources.getColor(long)", "android.content.res.Resources.getConfiguration()", "android.content.res.Resources.getAssets()", "android.widget.LinearLayout.<init>(android.content.Context)", "android.widget.LinearLayout.setPadding(long,long,long,long)", "android.widget.LinearLayout.addView(android.view.View)", "android.widget.LinearLayout.findViewById(long)", "android.widget.LinearLayout.setId(long)", "android.widget.LinearLayout.setOnClickListener(android.view.View.OnClickListener)", "android.widget.LinearLayout.setBackgroundResource(long)", "android.widget.LinearLayout.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.LinearLayout.setVisibility(long)", "android.widget.LinearLayout.removeAllViews()", "android.widget.LinearLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.graphics.drawable.Drawable.getIntrinsicWidth()", "android.graphics.drawable.Drawable.createFromStream(java.lang.String,java.io.InputStream)", "android.view.ViewGroup.LayoutParams.<init>(long,long)", "android.webkit.CookieManager.getInstance()", "android.webkit.CookieManager.removeAllCookie()", "java.util.Set.iterator()", "java.util.Set.size()", "java.util.Set.contains(java.lang.Object)", "java.util.Set.isEmpty()", "java.util.Set.add(java.lang.Object)", "java.util.Set.remove(java.lang.Object)", "java.util.Set.retainAll(java.util.Collection)", "java.util.Set.containsAll(java.util.Collection)", "java.util.Set.addAll(java.util.Collection)", "java.util.Set.toArray([Ljava.lang.Object)", "java.util.Set.removeAll(java.util.Collection)", "java.util.Set.clear()", "java.util.Set.toArray()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "java.util.Iterator.remove()", "java.net.URLEncoder.encode(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URL.<init>(java.lang.String)", "java.net.URL.openConnection()", "java.net.URL.getQuery()", "java.net.URL.getRef()", "java.net.URL.toString()", "java.net.URL.<init>(java.lang.String,java.net.URL)", "java.net.URL.openStream()", "java.net.URL.getProtocol()", "java.net.URL.getHost()", "java.net.URL.getFile()", "java.net.URL.equals(java.lang.Object)", "java.net.URL.hashCode()", "java.net.URL.openConnection(java.net.Proxy)", "java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.propertyNames()", "java.util.Properties.<init>()", "java.util.Properties.clone()", "java.util.Properties.load(java.io.InputStream)", "java.util.Properties.keySet()", "java.util.Properties.setProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.setRequestMethod(java.lang.String)", "java.net.HttpURLConnection.setDoOutput(long)", "java.net.HttpURLConnection.setDoInput(long)", "java.net.HttpURLConnection.connect()", "java.net.HttpURLConnection.getOutputStream()", "java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.setUseCaches(long)", "java.net.HttpURLConnection.setInstanceFollowRedirects(long)", "java.net.HttpURLConnection.addRequestProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.setFixedLengthStreamingMode(long)", "java.net.HttpURLConnection.disconnect()", "java.net.HttpURLConnection.setChunkedStreamingMode(long)", "java.net.HttpURLConnection.setReadTimeout(long)", "java.net.HttpURLConnection.setConnectTimeout(long)", "java.net.HttpURLConnection.getResponseCode()", "java.net.HttpURLConnection.getResponseMessage()", "java.net.HttpURLConnection.getHeaderFields()", "java.net.HttpURLConnection.getContentEncoding()", "java.net.HttpURLConnection.getHeaderField(java.lang.String)", "java.net.HttpURLConnection.getHeaderField(long)", "java.io.BufferedOutputStream.<init>(java.io.OutputStream)", "java.io.OutputStream.write(long)", "java.io.OutputStream.flush()", "java.io.OutputStream.<init>()", "java.io.OutputStream.close()", "java.io.OutputStream.write(long)", "java.io.OutputStream.write(long,long,long)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.toString(long,long)", "java.lang.Integer.toString(long)", "java.lang.Integer.valueOf(long)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.intValue()", "java.lang.Integer.<init>(long)", "java.lang.Integer.longValue()", "java.lang.Integer.toHexString(long)", "java.lang.Integer.highestOneBit(long)", "java.lang.Integer.compareTo(java.lang.Integer)", "java.lang.Integer.bitCount(long)", "java.lang.Integer.numberOfTrailingZeros(long)", "java.lang.Integer.rotateLeft(long,long)", "java.lang.Integer.numberOfLeadingZeros(long)", "java.lang.Integer.parseInt(long,java.lang.String)", "java.lang.Integer.valueOf(long,java.lang.String)", "java.lang.Integer.byteValue()", "java.lang.Integer.decode(java.lang.String)", "java.io.BufferedReader.<init>(long,java.io.Reader)", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.<init>(java.io.Reader)", "java.io.BufferedReader.close()", "java.io.InputStreamReader.<init>(java.io.InputStream)", "java.io.InputStreamReader.<init>(java.nio.charset.Charset,java.io.InputStream)", "java.io.InputStreamReader.<init>(java.lang.String,java.io.InputStream)", "java.io.InputStreamReader.close()", "java.io.InputStream.close()", "java.io.InputStream.read(long)", "java.io.InputStream.skip(long)", "java.io.InputStream.read()", "java.io.InputStream.read(long,long,long)", "java.io.InputStream.mark(long)", "java.io.InputStream.markSupported()", "java.io.InputStream.reset()", "java.io.InputStream.available()", "java.io.InputStream.<init>()", "android.app.AlertDialog.Builder.<init>(android.content.Context)", "android.app.AlertDialog.Builder.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.Builder.create()", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setNegativeButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.AlertDialog.show()", "android.app.AlertDialog.setCancelable(long)", "java.io.DataInput.readLong()", "java.io.DataInput.readInt()", "java.io.DataInput.readUTF()", "java.io.DataInput.readFully(long)", "java.io.DataInput.readByte()", "java.io.DataInput.readUnsignedShort()", "java.io.DataInput.readBoolean()", "java.io.DataInput.readUnsignedByte()", "java.io.DataInput.readChar()", "java.io.DataInput.readDouble()", "java.io.DataInput.readFloat()", "java.io.DataInput.readFully(long,long,long)", "java.io.DataInput.readLine()", "java.io.DataInput.readShort()", "java.io.DataInput.skipBytes(long)", "java.util.ArrayList.<init>()", "java.util.ArrayList.<init>(java.util.Collection)", "java.util.ArrayList.add(java.lang.Object)", "java.util.ArrayList.<init>(long)", "java.util.ArrayList.size()", "java.util.ArrayList.get(long)", "java.util.ArrayList.remove(long)", "java.util.ArrayList.ensureCapacity(long)", "java.util.ArrayList.iterator()", "java.util.ArrayList.trimToSize()", "java.util.ArrayList.toArray()", "java.util.ArrayList.toArray([Ljava.lang.Object)", "java.util.ArrayList.remove(java.lang.Object)", "java.util.ArrayList.isEmpty()", "java.util.ArrayList.addAll(java.util.Collection)", "java.util.ArrayList.contains(java.lang.Object)", "java.util.ArrayList.clear()", "java.util.ArrayList.indexOf(java.lang.Object)", "java.util.ArrayList.set(java.lang.Object,long)", "java.util.List.add(java.lang.Object)", "java.util.List.size()", "java.util.List.remove(long)", "java.util.List.isEmpty()", "java.util.List.removeAll(java.util.Collection)", "java.util.List.add(java.lang.Object,long)", "java.util.List.get(long)", "java.util.List.iterator()", "java.util.List.subList(long,long)", "java.util.List.clear()", "java.util.List.addAll(java.util.Collection)", "java.util.List.set(java.lang.Object,long)", "java.util.List.listIterator()", "java.util.List.addAll(java.util.Collection,long)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.lastIndexOf(java.lang.Object)", "java.util.List.listIterator(long)", "java.util.List.toArray()", "java.util.List.toArray([Ljava.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.containsAll(java.util.Collection)", "java.util.List.remove(java.lang.Object)", "android.widget.RelativeLayout.<init>(android.content.Context)", "android.widget.RelativeLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.RelativeLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.RelativeLayout.removeAllViews()", "android.widget.RelativeLayout.setVisibility(long)", "android.widget.RelativeLayout.getParent()", "android.widget.RelativeLayout.addView(long,long,android.view.View)", "android.widget.RelativeLayout.addView(android.view.View)", "android.widget.RelativeLayout.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.RelativeLayout.setBackgroundColor(long)", "android.widget.RelativeLayout.LayoutParams.<init>(long,long)", "android.widget.RelativeLayout.LayoutParams.addRule(long,long)", "android.widget.RelativeLayout.LayoutParams.setMargins(long,long,long,long)", "android.widget.RelativeLayout.LayoutParams.addRule(long)", "java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Throwable,java.lang.Thread)", "java.util.WeakHashMap.<init>()", "android.os.HandlerThread.<init>(java.lang.String)", "android.os.HandlerThread.start()", "android.os.HandlerThread.getLooper()", "java.lang.Math.round(long)", "java.lang.Math.random()", "java.lang.Math.ceil(long)", "java.lang.Math.min(long,long)", "java.lang.Math.abs(long)", "java.lang.Math.max(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.log(long)", "java.lang.Math.exp(long)", "java.lang.Math.pow(long,long)", "java.lang.Math.sqrt(long)", "java.lang.Math.floor(long)", "java.lang.Math.rint(long)", "java.lang.Math.abs(long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.min(long,long)", "java.lang.Math.abs(long)", "java.lang.Math.toDegrees(long)", "java.lang.Math.round(long)", "java.security.KeyStore.getDefaultType()", "java.security.KeyStore.getInstance(java.lang.String)", "java.security.KeyStore.load(long,java.io.InputStream)", "java.security.KeyStore.getKey(long,java.lang.String)", "java.io.File.exists()", "java.io.File.getAbsolutePath()", "java.io.File.delete()", "java.io.File.getParentFile()", "java.io.File.mkdirs()", "java.io.File.length()", "java.io.File.createTempFile(java.lang.String,java.lang.String)", "java.io.File.deleteOnExit()", "java.io.File.equals(java.lang.Object)", "java.io.File.getCanonicalFile()", "java.io.File.isDirectory()", "java.io.File.<init>(java.lang.String)", "java.io.File.<init>(java.lang.String,java.io.File)", "java.io.File.mkdir()", "java.io.File.toString()", "java.io.File.renameTo(java.io.File)", "java.io.File.createNewFile()", "java.io.File.setLastModified(long)", "java.io.File.getPath()", "java.io.File.<init>(java.lang.String,java.lang.String)", "java.io.File.list()", "java.io.File.getName()", "java.io.File.listFiles()", "java.io.File.isFile()", "java.io.File.hashCode()", "java.io.FileInputStream.<init>(java.io.File)", "java.io.FileInputStream.<init>(java.lang.String)", "java.io.FileInputStream.skip(long)", "java.io.FileInputStream.read(long)", "java.io.FileInputStream.getFD()", "java.io.FileInputStream.close()", "java.io.DataInputStream.<init>(java.io.InputStream)", "java.io.DataInputStream.readUnsignedShort()", "java.io.DataInputStream.readInt()", "java.io.DataInputStream.skipBytes(long)", "java.io.DataInputStream.readByte()", "java.io.DataInputStream.readLong()", "java.io.DataInputStream.readShort()", "java.io.DataInputStream.readUTF()", "java.io.DataInputStream.readBoolean()", "java.io.DataInputStream.readFully(long)", "java.io.DataInputStream.close()", "java.lang.Double.doubleToLongBits(long)", "java.lang.Double.doubleValue()", "java.lang.Double.valueOf(long)", "java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.<init>(long)", "java.lang.Double.compare(long,long)", "java.lang.Double.doubleToRawLongBits(long)", "java.lang.Double.longBitsToDouble(long)", "java.lang.Double.hashCode()", "java.lang.Double.toString(long)", "java.lang.Double.isInfinite(long)", "java.lang.Double.isNaN(long)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.isInfinite()", "java.lang.Double.isNaN()", "android.os.SystemClock.elapsedRealtime()", "java.lang.Byte.valueOf(long)", "java.lang.Byte.byteValue()", "java.lang.Byte.valueOf(java.lang.String)", "java.lang.Byte.<init>(long)", "java.lang.Short.valueOf(long)", "java.lang.Short.shortValue()", "java.lang.Short.valueOf(java.lang.String)", "java.lang.Short.<init>(long)", "java.util.Collections.emptyMap()", "java.util.Collections.emptyList()", "java.util.Collections.shuffle(java.util.List)", "java.util.Collections.emptySet()", "java.util.Collections.unmodifiableCollection(java.util.Collection)", "java.util.Collections.singleton(java.lang.Object)", "java.util.Collections.unmodifiableList(java.util.List)", "java.util.Collections.unmodifiableMap(java.util.Map)", "java.util.Collections.unmodifiableSet(java.util.Set)", "java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)", "java.util.Collections.binarySearch(java.util.Comparator,java.lang.Object,java.util.List)", "java.util.Collections.sort(java.util.Comparator,java.util.List)", "java.util.Collections.addAll([Ljava.lang.Object,java.util.Collection)", "java.util.Collections.unmodifiableSortedMap(java.util.SortedMap)", "java.util.Collections.binarySearch(java.lang.Object,java.util.List)", "java.util.Collections.sort(java.util.List)", "android.provider.Settings.System.getString(java.lang.String,android.content.ContentResolver)", "android.provider.Settings.System.getInt(long,java.lang.String,android.content.ContentResolver)", "java.util.TimeZone.getDefault()", "java.util.TimeZone.getID()", "java.util.TimeZone.getTimeZone(java.lang.String)", "java.util.TimeZone.getOffset(long)", "java.util.Locale.getDefault()", "java.util.Locale.getLanguage()", "java.util.Locale.getCountry()", "java.io.ByteArrayOutputStream.<init>()", "java.io.ByteArrayOutputStream.toByteArray()", "java.io.ByteArrayOutputStream.toString(java.lang.String)", "java.io.ByteArrayOutputStream.write(long)", "java.io.ByteArrayOutputStream.write(long,long,long)", "java.io.ByteArrayOutputStream.<init>(long)", "java.io.DataOutputStream.<init>(java.io.OutputStream)", "java.io.DataOutputStream.writeShort(long)", "java.io.DataOutputStream.writeLong(long)", "java.io.DataOutputStream.writeByte(long)", "java.io.DataOutputStream.writeUTF(java.lang.String)", "java.io.DataOutputStream.write(long)", "java.io.DataOutputStream.close()", "java.io.DataOutputStream.writeInt(long)", "java.io.DataOutputStream.writeBoolean(long)", "java.io.DataOutputStream.writeDouble(long)", "java.io.DataOutputStream.writeFloat(long)", "java.io.DataOutputStream.size()", "java.io.DataOutputStream.flush()", "java.io.DataOutputStream.writeBytes(java.lang.String)", "java.io.DataOutputStream.write(long)", "java.io.FileOutputStream.<init>(java.io.File)", "java.io.FileOutputStream.write(long,long,long)", "java.io.FileOutputStream.flush()", "java.io.FileOutputStream.<init>(long,java.io.File)", "java.io.FileOutputStream.write(long)", "java.io.FileOutputStream.close()", "android.location.Criteria.<init>()", "android.location.LocationManager.getBestProvider(long,android.location.Criteria)", "android.location.LocationManager.requestLocationUpdates(android.os.Looper,android.location.LocationListener,long,long,java.lang.String)", "android.location.LocationManager.getLastKnownLocation(java.lang.String)", "android.location.LocationManager.removeUpdates(android.location.LocationListener)", "android.location.LocationManager.getProviders(long,android.location.Criteria)", "android.location.LocationManager.getProviders(long)", "android.location.LocationManager.getProvider(java.lang.String)", "android.os.Looper.getMainLooper()", "java.util.Map.Entry.getKey()", "java.util.Map.Entry.getValue()", "java.util.Map.Entry.setValue(java.lang.Object)", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "android.location.Location.getAccuracy()", "android.location.Location.getAltitude()", "android.location.Location.getTime()", "android.location.Location.getProvider()", "java.lang.NullPointerException.<init>(java.lang.String)", "java.lang.NullPointerException.<init>()", "java.lang.NullPointerException.getMessage()", "java.util.Date.<init>(long)", "java.util.Date.getYear()", "java.util.Date.<init>(long,long,long)", "java.util.Date.getTime()", "java.util.Date.equals(java.lang.Object)", "java.util.Date.hashCode()", "java.util.Date.compareTo(java.util.Date)", "java.util.Date.<init>()", "java.lang.StackTraceElement.getClassName()", "java.lang.StackTraceElement.getMethodName()", "java.lang.StackTraceElement.getLineNumber()", "java.lang.Class.toString()", "java.lang.Class.getName()", "java.lang.Class.isArray()", "java.lang.Class.isEnum()", "java.lang.Class.isAssignableFrom(java.lang.Class)", "java.lang.Class.isPrimitive()", "java.lang.Class.getModifiers()", "java.lang.Class.getDeclaredMethod([Ljava.lang.Class,java.lang.String)", "java.lang.Class.cast(java.lang.Object)", "java.lang.Class.getSuperclass()", "java.lang.Class.getDeclaredFields()", "java.lang.Class.getComponentType()", "java.lang.Class.getField(java.lang.String)", "java.lang.Class.getGenericSuperclass()", "java.lang.Class.isInterface()", "java.lang.Class.getGenericInterfaces()", "java.lang.Class.getEnclosingClass()", "java.lang.Class.getConstructor([Ljava.lang.Class)", "java.lang.Class.newInstance()", "java.lang.Class.getClassLoader()", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.getMethod([Ljava.lang.Class,java.lang.String)", "java.lang.Class.isInstance(java.lang.Object)", "java.lang.Class.getDeclaredField(java.lang.String)", "java.lang.Class.desiredAssertionStatus()", "java.lang.Class.getEnumConstants()", "java.lang.Class.getMethods()", "java.lang.Class.getInterfaces()", "java.lang.Class.getResource(java.lang.String)", "java.lang.Class.getSimpleName()", "java.lang.Class.getConstructors()", "java.lang.Class.asSubclass(java.lang.Class)", "java.lang.Class.getDeclaredMethods()", "java.lang.Class.getResourceAsStream(java.lang.String)", "java.lang.Class.getFields()", "java.lang.Class.getPackage()", "java.lang.Class.getDeclaredConstructor([Ljava.lang.Class)", "android.content.BroadcastReceiver.<init>()", "android.text.SpannedString.<init>(java.lang.CharSequence)", "android.text.Html.fromHtml(java.lang.String)", "android.widget.TextView.<init>(android.content.Context)", "android.widget.TextView.setTextColor(android.content.res.ColorStateList)", "android.widget.TextView.setId(long)", "android.widget.TextView.setText(java.lang.CharSequence)", "android.widget.TextView.setPadding(long,long,long,long)", "android.widget.TextView.setFocusable(long)", "android.widget.TextView.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)", "android.widget.TextView.setOnClickListener(android.view.View.OnClickListener)", "android.widget.TextView.setEnabled(long)", "android.widget.TextView.setTextSize(long,long)", "android.widget.TextView.setTextColor(long)", "android.widget.TextView.setTextSize(long)", "android.widget.TextView.setTypeface(android.graphics.Typeface)", "android.widget.TextView.getId()", "android.widget.TextView.getText()", "android.widget.TextView.setVisibility(long)", "android.widget.TextView.setSelected(long)", "android.widget.TextView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.TextView.setTypeface(long,android.graphics.Typeface)", "android.widget.TextView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.content.res.ColorStateList.valueOf(long)", "java.util.LinkedHashMap.size()", "java.util.LinkedHashMap.get(java.lang.Object)", "java.util.LinkedHashMap.put(java.lang.Object,java.lang.Object)", "java.util.LinkedHashMap.entrySet()", "java.util.LinkedHashMap.keySet()", "java.util.LinkedHashMap.<init>(long,long,long)", "java.util.LinkedHashMap.<init>()", "java.util.LinkedHashMap.<init>(long)", "java.util.LinkedHashMap.<init>(java.util.Map)", "java.lang.ref.WeakReference.get()", "java.lang.ref.WeakReference.<init>(java.lang.Object)", "java.lang.ref.WeakReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "javax.net.ssl.SSLContext.getInstance(java.lang.String)", "javax.net.ssl.SSLContext.init(java.security.SecureRandom,[Ljavax.net.ssl.TrustManager,[Ljavax.net.ssl.KeyManager)", "javax.net.ssl.SSLContext.getSocketFactory()", "javax.net.ssl.SSLSocketFactory.createSocket()", "javax.net.ssl.SSLSocketFactory.createSocket(long,long,java.lang.String,java.net.Socket)", "java.io.DataOutput.writeByte(long)", "java.io.DataOutput.writeUTF(java.lang.String)", "java.io.DataOutput.writeLong(long)", "java.io.DataOutput.writeShort(long)", "java.io.DataOutput.writeInt(long)", "java.io.DataOutput.writeBoolean(long)", "java.io.DataOutput.write(long)", "java.io.DataOutput.write(long)", "java.io.DataOutput.write(long,long,long)", "java.io.DataOutput.writeBytes(java.lang.String)", "java.io.DataOutput.writeChar(long)", "java.io.DataOutput.writeChars(java.lang.String)", "java.io.DataOutput.writeDouble(long)", "java.io.DataOutput.writeFloat(long)", "java.util.Arrays.asList([Ljava.lang.Object)", "java.util.Arrays.toString([Ljava.lang.Object)", "java.util.Arrays.sort(long)", "java.util.Arrays.binarySearch(long,long)", "java.util.Arrays.fill(long,long)", "java.util.Arrays.hashCode([Ljava.lang.Object)", "java.util.Arrays.fill(java.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.sort(java.util.Comparator,[Ljava.lang.Object)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.fill(long,long,long,long)", "java.util.Arrays.toString(long)", "java.util.Arrays.sort(long)", "java.util.Arrays.equals(long,long)", "java.util.Arrays.equals([Ljava.lang.Object,[Ljava.lang.Object)", "java.util.Arrays.hashCode(long)", "java.io.Closeable.close()", "android.graphics.BitmapFactory.decodeByteArray(long,long,long)", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "android.graphics.BitmapFactory.decodeFile(java.lang.String)", "android.widget.LinearLayout.LayoutParams.<init>(long,long)", "android.widget.LinearLayout.LayoutParams.setMargins(long,long,long,long)", "java.util.Random.<init>(long)", "java.util.Random.<init>()", "java.util.Random.nextInt()", "java.net.UnknownHostException.getMessage()", "java.net.UnknownHostException.<init>(java.lang.String)", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap.Config,long,long)", "android.graphics.Bitmap.extractAlpha(long,android.graphics.Paint)", "android.graphics.Bitmap.copy(long,android.graphics.Bitmap.Config)", "android.graphics.Bitmap.getNinePatchChunk()", "android.graphics.Bitmap.recycle()", "android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)", "android.graphics.Bitmap.createBitmap(long,android.graphics.Matrix,long,long,long,long,android.graphics.Bitmap)", "android.graphics.Canvas.<init>(android.graphics.Bitmap)", "android.graphics.Canvas.drawARGB(long,long,long,long)", "android.graphics.Canvas.drawRoundRect(android.graphics.Paint,long,long,android.graphics.RectF)", "android.graphics.Canvas.drawBitmap(android.graphics.Paint,android.graphics.Rect,android.graphics.Rect,android.graphics.Bitmap)", "android.graphics.Canvas.drawBitmap(android.graphics.Paint,long,long,android.graphics.Bitmap)", "android.graphics.Paint.<init>()", "android.graphics.Paint.setAntiAlias(long)", "android.graphics.Paint.setColor(long)", "android.graphics.Paint.setXfermode(android.graphics.Xfermode)", "android.graphics.Paint.setMaskFilter(android.graphics.MaskFilter)", "android.graphics.Rect.<init>(long,long,long,long)", "android.graphics.Rect.<init>()", "android.graphics.RectF.<init>(android.graphics.Rect)", "android.graphics.RectF.width()", "android.graphics.RectF.height()", "android.graphics.RectF.<init>(long,long,long,long)", "android.graphics.PorterDuffXfermode.<init>(android.graphics.PorterDuff.Mode)", "android.graphics.BlurMaskFilter.<init>(android.graphics.BlurMaskFilter.Blur,long)", "android.graphics.NinePatch.isNinePatchChunk(long)", "android.graphics.drawable.NinePatchDrawable.<init>(java.lang.String,android.graphics.Rect,long,android.graphics.Bitmap)", "android.graphics.Typeface.create(long,java.lang.String)", "android.graphics.drawable.BitmapDrawable.<init>(android.graphics.Bitmap)", "android.graphics.drawable.BitmapDrawable.getBitmap()", "java.util.Collection.iterator()", "java.util.Collection.add(java.lang.Object)", "java.util.Collection.size()", "java.util.Collection.toArray([Ljava.lang.Object)", "java.util.Collection.contains(java.lang.Object)", "java.util.Collection.addAll(java.util.Collection)", "java.util.Collection.clear()", "java.util.Collection.containsAll(java.util.Collection)", "java.util.Collection.isEmpty()", "java.util.Collection.remove(java.lang.Object)", "java.util.Collection.removeAll(java.util.Collection)", "java.util.Collection.retainAll(java.util.Collection)", "java.util.Collection.toArray()", "java.util.EnumSet.noneOf(java.lang.Class)", "java.util.EnumSet.contains(java.lang.Object)", "java.util.EnumSet.of(java.lang.Enum,java.lang.Enum,java.lang.Enum)", "java.util.EnumSet.of(java.lang.Enum)", "java.util.EnumSet.of(java.lang.Enum,java.lang.Enum)", "java.util.EnumSet.copyOf(java.util.Collection)", "java.util.EnumSet.clone()", "java.util.EnumSet.containsAll(java.util.Collection)", "java.util.EnumSet.equals(java.lang.Object)", "java.util.EnumSet.hashCode()", "java.util.EnumSet.isEmpty()", "java.util.EnumSet.iterator()", "java.util.EnumSet.size()", "java.util.EnumSet.toArray()", "java.util.EnumSet.toArray([Ljava.lang.Object)", "java.util.EnumSet.toString()", "java.util.EnumSet.complementOf(java.util.EnumSet)", "java.util.EnumSet.of([Ljava.lang.Enum,java.lang.Enum)", "java.util.EnumSet.copyOf(java.util.EnumSet)", "java.util.EnumSet.add(java.lang.Object)", "java.util.EnumSet.allOf(java.lang.Class)", "java.util.EnumSet.removeAll(java.util.Collection)", "java.util.AbstractMap.<init>()", "java.util.AbstractMap.clone()", "java.lang.IllegalStateException.<init>(java.lang.Throwable)", "java.lang.IllegalStateException.<init>(java.lang.String)", "java.lang.IllegalStateException.<init>()", "java.lang.IllegalStateException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.IllegalStateException.getMessage()", "java.lang.UnsupportedOperationException.<init>()", "java.lang.UnsupportedOperationException.<init>(java.lang.String)", "java.io.ByteArrayInputStream.<init>(long)", "java.io.ByteArrayInputStream.<init>(long,long,long)", "java.security.Signature.getInstance(java.lang.String)", "java.security.Signature.initSign(java.security.PrivateKey)", "java.security.Signature.update(long)", "java.security.Signature.sign()", "java.security.Signature.initVerify(java.security.PublicKey)", "java.security.Signature.verify(long)", "java.net.URI.<init>(java.lang.String)", "java.net.URI.getScheme()", "java.net.URI.getHost()", "java.net.URI.getPort()", "java.net.URI.getRawPath()", "java.net.URI.getFragment()", "java.net.URI.getRawQuery()", "java.net.URI.getRawFragment()", "java.net.URI.create(java.lang.String)", "javax.crypto.spec.SecretKeySpec.<init>(java.lang.String,long)", "javax.crypto.Mac.getInstance(java.lang.String)", "javax.crypto.Mac.init(java.security.Key)", "javax.crypto.Mac.doFinal(long)", "java.security.SecureRandom.<init>()", "java.security.SecureRandom.nextLong()", "java.security.SecureRandom.getInstance(java.lang.String)", "java.security.SecureRandom.setSeed(long)", "java.util.TreeMap.put(java.lang.Object,java.lang.Object)", "java.util.TreeMap.<init>()", "java.util.TreeMap.entrySet()", "java.util.TreeMap.<init>(java.util.Comparator)", "java.util.TreeMap.<init>(java.util.SortedMap)", "java.util.logging.Logger.getLogger(java.lang.String)", "java.util.logging.Logger.log(java.lang.Throwable,java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.severe(java.lang.String)", "java.util.logging.Logger.isLoggable(java.util.logging.Level)", "java.util.logging.Logger.config(java.lang.String)", "java.util.logging.Logger.warning(java.lang.String)", "java.util.logging.Logger.log(java.lang.String,java.util.logging.Level)", "java.util.logging.Logger.info(java.lang.String)", "java.util.concurrent.locks.ReentrantLock.<init>()", "java.util.concurrent.locks.ReentrantLock.lock()", "java.util.concurrent.locks.ReentrantLock.unlock()", "java.util.concurrent.locks.ReentrantLock.newCondition()", "java.util.concurrent.locks.ReentrantLock.<init>(long)", "java.util.concurrent.locks.ReentrantLock.tryLock()", "java.util.concurrent.locks.ReentrantLock.tryLock(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.locks.ReentrantLock.lockInterruptibly()", "java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()", "java.util.concurrent.locks.ReentrantLock.getHoldCount()", "java.util.concurrent.locks.ReentrantLock.getQueueLength()", "java.util.concurrent.locks.ReentrantLock.hasQueuedThread(java.lang.Thread)", "java.util.concurrent.locks.ReentrantLock.hasQueuedThreads()", "java.util.concurrent.locks.ReentrantLock.isFair()", "java.util.concurrent.locks.ReentrantLock.isLocked()", "java.util.concurrent.locks.Lock.lock()", "java.util.concurrent.locks.Lock.unlock()", "java.util.concurrent.locks.Lock.newCondition()", "java.lang.Enum.<init>(long,java.lang.String)", "java.lang.Enum.valueOf(java.lang.String,java.lang.Class)", "java.lang.Enum.name()", "java.lang.Enum.getDeclaringClass()", "java.security.KeyFactory.getInstance(java.lang.String)", "java.security.KeyFactory.generatePrivate(java.security.spec.KeySpec)", "java.security.KeyFactory.generatePublic(java.security.spec.KeySpec)", "java.security.spec.PKCS8EncodedKeySpec.<init>(long)", "java.util.zip.GZIPOutputStream.<init>(java.io.OutputStream)", "java.util.zip.GZIPOutputStream.close()", "java.io.Writer.write(java.lang.String)", "java.io.Writer.flush()", "java.io.Writer.<init>()", "java.io.Writer.write(long)", "java.util.HashSet.<init>()", "java.util.HashSet.add(java.lang.Object)", "java.util.HashSet.<init>(java.util.Collection)", "java.util.HashSet.<init>(long)", "java.util.HashSet.contains(java.lang.Object)", "java.util.HashSet.remove(java.lang.Object)", "java.lang.Iterable.iterator()", "java.util.regex.Pattern.compile(java.lang.String)", "java.util.regex.Pattern.compile(long,java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.CharSequence)", "java.util.regex.Pattern.pattern()", "java.util.regex.Pattern.flags()", "java.util.regex.Matcher.matches()", "java.util.regex.Matcher.group(long)", "java.util.regex.Matcher.find()", "java.util.regex.Matcher.end()", "java.util.regex.Matcher.find(long)", "java.util.regex.Matcher.start()", "java.nio.charset.Charset.forName(java.lang.String)", "java.nio.charset.Charset.name()", "java.util.zip.GZIPInputStream.<init>(java.io.InputStream)", "java.lang.Character.valueOf(long)", "java.lang.Character.<init>(long)", "java.lang.Character.toUpperCase(long)", "java.lang.Character.isLowSurrogate(long)", "java.lang.Character.toCodePoint(long,long)", "java.lang.Character.isSupplementaryCodePoint(long)", "java.lang.Character.charValue()", "java.lang.Character.isDigit(long)", "java.lang.Character.isLetter(long)", "java.lang.Character.isLetterOrDigit(long)", "java.lang.Character.isUpperCase(long)", "java.lang.Character.isLowerCase(long)", "java.lang.Character.isHighSurrogate(long)", "java.lang.Character.digit(long,long)", "java.lang.Character.forDigit(long,long)", "java.lang.Character.isWhitespace(long)", "java.lang.Character.toLowerCase(long)", "java.io.BufferedWriter.<init>(java.io.Writer)", "java.io.OutputStreamWriter.<init>(java.nio.charset.Charset,java.io.OutputStream)", "java.lang.Float.floatValue()", "java.lang.Float.valueOf(long)", "java.lang.Float.valueOf(java.lang.String)", "java.lang.Float.<init>(long)", "java.lang.Float.compare(long,long)", "java.lang.Float.floatToRawIntBits(long)", "java.lang.Float.intBitsToFloat(long)", "java.lang.Float.floatToIntBits(long)", "java.lang.Float.hashCode()", "java.lang.Float.toString(long)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.isInfinite()", "java.lang.Float.isNaN()", "java.lang.Number.intValue()", "java.lang.Number.<init>()", "java.lang.Number.doubleValue()", "java.lang.Number.longValue()", "java.lang.Boolean.booleanValue()", "java.lang.Boolean.<init>(long)", "java.lang.Boolean.valueOf(java.lang.String)", "java.lang.Boolean.valueOf(long)", "java.lang.Boolean.toString(long)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)", "java.lang.reflect.Field.getGenericType()", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.isEnumConstant()", "java.lang.reflect.Field.getModifiers()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.setAccessible(long)", "java.lang.reflect.Field.set(java.lang.Object,java.lang.Object)", "java.lang.reflect.Field.getDeclaringClass()", "java.lang.reflect.Field.getType()", "java.math.BigDecimal.<init>(java.lang.String)", "java.math.BigDecimal.<init>(java.math.BigInteger)", "java.math.BigDecimal.divide(java.math.RoundingMode,long,java.math.BigDecimal)", "java.math.BigDecimal.toBigIntegerExact()", "java.math.BigInteger.<init>(java.lang.String)", "java.math.BigInteger.<init>(long,long)", "java.math.BigInteger.bitLength()", "java.math.BigInteger.toByteArray()", "java.math.BigInteger.valueOf(long)", "java.math.BigInteger.subtract(java.math.BigInteger)", "java.math.BigInteger.max(java.math.BigInteger)", "java.math.BigInteger.min(java.math.BigInteger)", "java.math.BigInteger.longValue()", "java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.<init>(long,java.lang.String)", "java.math.BigInteger.multiply(java.math.BigInteger)", "java.math.BigInteger.divide(java.math.BigInteger)", "java.math.BigInteger.shiftLeft(long)", "java.math.BigInteger.signum()", "java.math.BigInteger.getLowestSetBit()", "java.math.BigInteger.compareTo(java.math.BigInteger)", "java.math.BigInteger.pow(long)", "java.math.BigInteger.equals(java.lang.Object)", "java.math.BigInteger.shiftRight(long)", "java.math.BigInteger.negate()", "java.math.BigInteger.abs()", "java.math.BigInteger.intValue()", "java.math.BigInteger.setBit(long)", "java.math.BigInteger.toString(long)", "java.io.StringReader.<init>(java.lang.String)", "java.lang.reflect.Method.invoke([Ljava.lang.Object,java.lang.Object)", "java.lang.reflect.Method.getAnnotation(java.lang.Class)", "java.lang.reflect.Method.getParameterTypes()", "java.lang.reflect.Method.setAccessible(long)", "java.lang.reflect.Method.equals(java.lang.Object)", "java.lang.reflect.Method.hashCode()", "java.lang.reflect.Method.getExceptionTypes()", "java.lang.reflect.Method.getModifiers()", "java.lang.reflect.Method.getName()", "java.lang.reflect.Method.getReturnType()", "java.util.concurrent.atomic.AtomicLong.<init>(long)", "java.util.concurrent.atomic.AtomicLong.get()", "java.util.concurrent.atomic.AtomicLong.set(long)", "java.util.concurrent.atomic.AtomicLong.<init>()", "java.util.concurrent.atomic.AtomicLong.addAndGet(long)", "java.util.concurrent.atomic.AtomicLong.incrementAndGet()", "java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long)", "java.util.concurrent.atomic.AtomicLong.getAndIncrement()", "java.util.NoSuchElementException.<init>()", "java.util.NoSuchElementException.<init>(java.lang.String)", "java.util.AbstractSet.<init>()", "java.util.AbstractSet.removeAll(java.util.Collection)", "java.util.AbstractSet.retainAll(java.util.Collection)", "java.util.AbstractSet.equals(java.lang.Object)", "java.lang.IndexOutOfBoundsException.<init>()", "java.lang.IndexOutOfBoundsException.<init>(java.lang.String)", "java.util.IdentityHashMap.<init>()", "java.util.IdentityHashMap.putAll(java.util.Map)", "java.util.IdentityHashMap.get(java.lang.Object)", "java.util.IdentityHashMap.put(java.lang.Object,java.lang.Object)", "java.util.TreeSet.<init>(java.util.Comparator)", "java.util.TreeSet.addAll(java.util.Collection)", "java.util.TreeSet.add(java.lang.Object)", "java.util.TreeSet.isEmpty()", "java.util.TreeSet.<init>()", "java.util.TreeSet.<init>(java.util.Collection)", "java.util.TreeSet.iterator()", "java.util.concurrent.ConcurrentHashMap.<init>()", "java.util.concurrent.ConcurrentHashMap.put(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.<init>(long,long,long)", "java.util.concurrent.ConcurrentHashMap.putIfAbsent(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.clear()", "java.util.concurrent.ConcurrentHashMap.containsKey(java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.isEmpty()", "java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentHashMap.keySet()", "java.util.concurrent.ConcurrentHashMap.size()", "java.util.concurrent.ConcurrentHashMap.values()", "java.util.concurrent.ConcurrentHashMap.toString()", "java.lang.reflect.Array.getLength(java.lang.Object)", "java.lang.reflect.Array.newInstance(long,java.lang.Class)", "java.lang.reflect.Array.set(java.lang.Object,long,java.lang.Object)", "java.lang.reflect.Array.newInstance(long,java.lang.Class)", "java.lang.reflect.Array.get(long,java.lang.Object)", "java.lang.reflect.ParameterizedType.getRawType()", "java.lang.reflect.ParameterizedType.getActualTypeArguments()", "java.lang.reflect.TypeVariable.getBounds()", "java.lang.reflect.TypeVariable.getGenericDeclaration()", "java.util.GregorianCalendar.<init>(java.util.TimeZone)", "java.util.Calendar.set(long,long,long)", "java.util.Calendar.getTimeInMillis()", "java.util.Calendar.set(long,long,long,long,long,long)", "java.util.Calendar.set(long,long)", "java.util.Calendar.setTimeInMillis(long)", "java.util.Calendar.get(long)", "java.util.Calendar.isSet(long)", "java.lang.NumberFormatException.<init>(java.lang.String)", "java.lang.NumberFormatException.<init>()", "java.lang.reflect.Modifier.isStatic(long)", "java.lang.reflect.Modifier.isFinal(long)", "java.lang.reflect.Modifier.isInterface(long)", "java.lang.reflect.Modifier.isPublic(long)", "java.lang.reflect.Modifier.isAbstract(long)", "java.text.NumberFormat.getInstance()", "java.text.NumberFormat.format(long)", "java.io.FilterInputStream.<init>(java.io.InputStream)", "java.io.FilterInputStream.close()", "java.io.FilterInputStream.read()", "java.io.FilterInputStream.read(long,long,long)", "java.io.FilterOutputStream.<init>(java.io.OutputStream)", "java.io.FilterOutputStream.close()", "java.lang.reflect.GenericArrayType.getGenericComponentType()", "java.lang.reflect.WildcardType.getLowerBounds()", "java.lang.reflect.WildcardType.getUpperBounds()", "java.lang.reflect.GenericDeclaration.getTypeParameters()", "java.lang.CharSequence.charAt(long)", "java.lang.CharSequence.length()", "java.lang.CharSequence.subSequence(long,long)", "java.lang.ThreadLocal.<init>()", "java.lang.ThreadLocal.get()", "java.lang.ThreadLocal.set(java.lang.Object)", "java.util.SortedSet.add(java.lang.Object)", "java.util.SortedSet.iterator()", "java.util.SortedSet.comparator()", "java.util.SortedSet.first()", "java.util.SortedSet.headSet(java.lang.Object)", "java.util.SortedSet.last()", "java.util.SortedSet.subSet(java.lang.Object,java.lang.Object)", "java.util.SortedSet.tailSet(java.lang.Object)", "java.util.SortedSet.addAll(java.util.Collection)", "java.io.StringWriter.<init>()", "java.io.StringWriter.toString()", "java.io.Reader.close()", "java.io.Reader.skip(long)", "java.io.Reader.read()", "java.io.Reader.read(long,long,long)", "java.io.Reader.<init>()", "java.io.Reader.ready()", "java.io.Reader.markSupported()", "java.io.Reader.mark(long)", "java.io.Reader.reset()", "java.lang.ref.PhantomReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "java.lang.ClassLoader.getResource(java.lang.String)", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.ClassLoader.getSystemClassLoader()", "java.net.URLClassLoader.<init>([Ljava.net.URL)", "java.lang.AssertionError.<init>(java.lang.Object)", "java.lang.AssertionError.<init>()", "java.lang.ref.ReferenceQueue.<init>()", "java.lang.ref.ReferenceQueue.poll()", "java.lang.ref.ReferenceQueue.remove()", "java.lang.ref.Reference.clear()", "java.lang.ref.SoftReference.<init>(java.lang.ref.ReferenceQueue,java.lang.Object)", "java.lang.Appendable.append(java.lang.CharSequence)", "java.lang.Appendable.append(long)", "java.lang.Appendable.append(long,long,java.lang.CharSequence)", "java.util.AbstractList.<init>()", "java.util.AbstractList.equals(java.lang.Object)", "java.util.concurrent.TimeUnit.values()", "java.util.concurrent.TimeUnit.ordinal()", "java.util.concurrent.TimeUnit.convert(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.TimeUnit.toNanos(long)", "java.util.concurrent.TimeUnit.timedJoin(long,java.lang.Thread)", "java.util.concurrent.TimeUnit.sleep(long)", "java.lang.ArrayIndexOutOfBoundsException.<init>(java.lang.String)", "java.io.PrintWriter.<init>(java.io.Writer)", "java.util.concurrent.ExecutionException.getCause()", "java.util.concurrent.ExecutionException.<init>(java.lang.Throwable)", "java.util.AbstractQueue.<init>()", "java.util.concurrent.atomic.AtomicReferenceArray.length()", "java.util.concurrent.atomic.AtomicReferenceArray.get(long)", "java.util.concurrent.atomic.AtomicReferenceArray.set(java.lang.Object,long)", "java.util.concurrent.atomic.AtomicReferenceArray.<init>(long)", "java.util.concurrent.atomic.AtomicReferenceArray.<init>([Ljava.lang.Object)", "java.io.ObjectInputStream.defaultReadObject()", "java.io.ObjectInputStream.readObject()", "java.io.ObjectInputStream.readInt()", "java.io.ObjectInputStream.readDouble()", "java.util.concurrent.Callable.call()", "java.util.concurrent.atomic.AtomicInteger.<init>()", "java.util.concurrent.atomic.AtomicInteger.set(long)", "java.util.concurrent.atomic.AtomicInteger.incrementAndGet()", "java.util.concurrent.atomic.AtomicInteger.get()", "java.util.concurrent.atomic.AtomicInteger.<init>(long)", "java.util.concurrent.atomic.AtomicInteger.compareAndSet(long,long)", "java.util.concurrent.atomic.AtomicInteger.getAndIncrement()", "java.util.concurrent.atomic.AtomicInteger.decrementAndGet()", "java.util.concurrent.ConcurrentLinkedQueue.<init>()", "java.util.concurrent.ConcurrentLinkedQueue.<init>(java.util.Collection)", "java.util.concurrent.ConcurrentLinkedQueue.poll()", "java.util.concurrent.ConcurrentLinkedQueue.offer(java.lang.Object)", "java.util.Queue.clear()", "java.util.Queue.poll()", "java.util.Queue.contains(java.lang.Object)", "java.util.Queue.add(java.lang.Object)", "java.util.Queue.offer(java.lang.Object)", "java.util.Queue.peek()", "java.util.Queue.iterator()", "java.util.Queue.remove(java.lang.Object)", "java.util.Queue.remove()", "java.util.Queue.isEmpty()", "java.util.Queue.element()", "java.util.AbstractCollection.<init>()", "java.util.AbstractCollection.remove(java.lang.Object)", "java.util.AbstractCollection.removeAll(java.util.Collection)", "java.util.AbstractCollection.retainAll(java.util.Collection)", "java.util.concurrent.Executor.execute(java.lang.Runnable)", "java.io.ObjectOutputStream.defaultWriteObject()", "java.io.ObjectOutputStream.writeObject(java.lang.Object)", "java.io.ObjectOutputStream.writeInt(long)", "java.io.ObjectOutputStream.writeDouble(long)", "java.util.ConcurrentModificationException.<init>()", "java.io.InvalidObjectException.<init>(java.lang.String)", "java.io.InvalidObjectException.initCause(java.lang.Throwable)", "java.util.SortedMap.comparator()", "java.util.SortedMap.firstKey()", "java.util.SortedMap.headMap(java.lang.Object)", "java.util.SortedMap.lastKey()", "java.util.SortedMap.subMap(java.lang.Object,java.lang.Object)", "java.util.SortedMap.tailMap(java.lang.Object)", "java.util.SortedMap.entrySet()", "java.util.SortedMap.putAll(java.util.Map)", "java.util.SortedMap.remove(java.lang.Object)", "java.util.SortedMap.put(java.lang.Object,java.lang.Object)", "java.util.SortedMap.isEmpty()", "java.util.ListIterator.add(java.lang.Object)", "java.util.ListIterator.hasPrevious()", "java.util.ListIterator.nextIndex()", "java.util.ListIterator.previous()", "java.util.ListIterator.previousIndex()", "java.util.ListIterator.set(java.lang.Object)", "java.util.ListIterator.hasNext()", "java.util.ListIterator.next()", "java.util.ListIterator.remove()", "java.util.Comparator.compare(java.lang.Object,java.lang.Object)", "java.lang.Comparable.compareTo(java.lang.Object)", "java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.remove(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.replace(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.put(java.lang.Object,java.lang.Object)", "java.util.concurrent.ConcurrentMap.size()", "java.util.concurrent.ConcurrentMap.entrySet()", "java.util.concurrent.ConcurrentMap.isEmpty()", "java.util.concurrent.ConcurrentMap.get(java.lang.Object)", "java.util.concurrent.ConcurrentMap.clear()", "java.util.concurrent.ConcurrentMap.keySet()", "java.util.concurrent.ConcurrentMap.values()", "java.util.EnumMap.<init>(java.lang.Class)", "java.util.EnumMap.<init>(java.util.Map)", "java.util.Enumeration.hasMoreElements()", "java.util.Enumeration.nextElement()", "java.util.PriorityQueue.<init>(java.util.Comparator,long)", "java.util.PriorityQueue.<init>()", "java.util.PriorityQueue.<init>(java.util.Collection)", "java.util.LinkedHashSet.<init>(long)", "java.util.LinkedHashSet.<init>()", "java.util.LinkedHashSet.<init>(java.util.Collection)", "java.util.LinkedHashSet.add(java.lang.Object)", "java.util.AbstractSequentialList.<init>()", "java.util.LinkedList.<init>()", "java.util.LinkedList.add(java.lang.Object)", "java.util.LinkedList.peek()", "java.util.LinkedList.remove()", "java.util.concurrent.CancellationException.<init>()", "java.util.concurrent.CancellationException.<init>(java.lang.String)", "java.lang.ClassCastException.<init>(java.lang.String)", "java.util.concurrent.BlockingQueue.drainTo(long,java.util.Collection)", "java.util.concurrent.BlockingQueue.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.BlockingQueue.drainTo(java.util.Collection)", "java.util.concurrent.BlockingQueue.offer(java.util.concurrent.TimeUnit,long,java.lang.Object)", "java.util.concurrent.BlockingQueue.put(java.lang.Object)", "java.util.concurrent.BlockingQueue.remainingCapacity()", "java.util.concurrent.BlockingQueue.take()", "java.util.concurrent.ArrayBlockingQueue.<init>(long)", "java.util.concurrent.LinkedBlockingQueue.<init>()", "java.util.concurrent.LinkedBlockingQueue.<init>(long)", "java.util.concurrent.LinkedBlockingQueue.<init>(java.util.Collection)", "java.util.concurrent.PriorityBlockingQueue.<init>()", "java.util.concurrent.PriorityBlockingQueue.<init>(java.util.Collection)", "java.util.concurrent.SynchronousQueue.<init>()", "java.util.concurrent.CopyOnWriteArraySet.<init>()", "java.lang.reflect.InvocationTargetException.getCause()", "java.lang.reflect.InvocationTargetException.getMessage()", "java.nio.ByteBuffer.allocate(long)", "java.nio.ByteBuffer.order(java.nio.ByteOrder)", "java.nio.ByteBuffer.flip()", "java.nio.ByteBuffer.remaining()", "java.nio.ByteBuffer.compact()", "java.nio.ByteBuffer.put(java.nio.ByteBuffer)", "java.nio.ByteBuffer.position()", "java.nio.ByteBuffer.get()", "java.nio.ByteBuffer.put(long)", "java.nio.ByteBuffer.limit()", "java.nio.ByteBuffer.position(long)", "java.nio.ByteBuffer.limit(long)", "java.nio.ByteBuffer.putLong(long)", "java.nio.ByteBuffer.wrap(long,long,long)", "java.nio.ByteBuffer.putChar(long)", "java.nio.ByteBuffer.putInt(long)", "java.nio.ByteBuffer.putShort(long)", "java.nio.ByteBuffer.wrap(long)", "java.nio.ByteBuffer.getLong()", "java.nio.ByteBuffer.put(long)", "java.nio.ByteBuffer.array()", "java.nio.ByteBuffer.clear()", "java.nio.ByteBuffer.putDouble(long)", "java.nio.ByteBuffer.putFloat(long)", "java.nio.ByteBuffer.get(long)", "java.nio.ByteBuffer.getInt()", "java.nio.ByteBuffer.hasRemaining()", "java.nio.ByteBuffer.allocateDirect(long)", "java.nio.ByteBuffer.capacity()", "java.nio.ByteBuffer.get(long,long,long)", "java.security.MessageDigest.isEqual(long,long)", "java.security.MessageDigest.digest()", "java.security.MessageDigest.update(long)", "java.security.MessageDigest.update(long)", "java.security.MessageDigest.update(long,long,long)", "java.security.MessageDigest.getDigestLength()", "java.security.MessageDigest.getInstance(java.lang.String)", "java.io.Flushable.flush()", "java.util.zip.Checksum.getValue()", "java.util.zip.Checksum.reset()", "java.util.zip.Checksum.update(long,long,long)", "java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer)", "java.nio.channels.WritableByteChannel.write(java.nio.ByteBuffer)", "java.io.EOFException.<init>()", "java.nio.CharBuffer.allocate(long)", "java.nio.CharBuffer.flip()", "java.nio.CharBuffer.wrap(long)", "java.nio.CharBuffer.clear()", "java.lang.Readable.read(java.nio.CharBuffer)", "java.io.RandomAccessFile.<init>(java.lang.String,java.io.File)", "java.io.RandomAccessFile.getChannel()", "java.nio.channels.FileChannel.map(long,long,java.nio.channels.FileChannel.MapMode)", "java.math.RoundingMode.values()", "java.math.RoundingMode.ordinal()", "java.lang.ArithmeticException.<init>(java.lang.String)", "java.lang.StrictMath.pow(long,long)", "java.text.ParseException.<init>(long,java.lang.String)", "java.text.ParseException.initCause(java.lang.Throwable)", "java.net.Inet4Address.getAddress()", "java.net.Inet4Address.hashCode()", "java.net.InetAddress.getByAddress(long)", "java.net.InetAddress.getAddress()", "java.net.InetAddress.getHostAddress()", "java.net.Inet6Address.getAddress()", "java.net.Inet6Address.isIPv4CompatibleAddress()", "java.nio.ByteOrder.nativeOrder()", "java.security.AccessController.doPrivileged(java.security.PrivilegedAction)", "java.util.concurrent.Future.cancel(long)", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.Future.isCancelled()", "java.util.concurrent.Future.isDone()", "java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>()", "java.util.concurrent.TimeoutException.<init>(java.lang.String)", "java.util.concurrent.TimeoutException.<init>()", "java.util.concurrent.ExecutorCompletionService.<init>(java.util.concurrent.Executor)", "java.util.concurrent.ExecutorCompletionService.submit(java.util.concurrent.Callable)", "java.util.concurrent.ExecutorCompletionService.poll()", "java.util.concurrent.ExecutorCompletionService.poll(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.ExecutorCompletionService.take()", "java.util.concurrent.ScheduledExecutorService.execute(java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.TimeUnit,long,java.util.concurrent.Callable)", "java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.util.concurrent.TimeUnit,long,long,java.lang.Runnable)", "java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.TimeUnit,long,java.lang.Runnable)", "java.lang.Runnable.run()", "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()", "java.util.concurrent.Executors.newCachedThreadPool(java.util.concurrent.ThreadFactory)", "java.util.concurrent.Executors.unconfigurableExecutorService(java.util.concurrent.ExecutorService)", "java.util.concurrent.Executors.unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)", "java.util.concurrent.Executors.newCachedThreadPool()", "java.util.concurrent.Executors.defaultThreadFactory()", "java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(java.lang.String,java.lang.Class)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(long,long,java.lang.Object)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndSet(long,java.lang.Object)", "java.util.concurrent.atomic.AtomicLongFieldUpdater.weakCompareAndSet(long,long,java.lang.Object)", "java.util.concurrent.atomic.AtomicLongArray.<init>(long)", "java.util.concurrent.atomic.AtomicLongArray.<init>(long)", "java.util.concurrent.atomic.AtomicLongArray.get(long)", "java.util.concurrent.atomic.AtomicLongArray.compareAndSet(long,long,long)", "java.util.concurrent.atomic.AtomicLongArray.getAndSet(long,long)", "java.util.concurrent.atomic.AtomicLongArray.length()", "java.util.concurrent.atomic.AtomicLongArray.set(long,long)", "java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet(long,long,long)", "java.util.concurrent.atomic.AtomicReference.<init>()", "java.util.concurrent.atomic.AtomicReference.<init>(java.lang.Object)", "java.util.concurrent.ExecutorService.awaitTermination(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.ExecutorService.execute(java.lang.Runnable)", "java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)", "java.util.concurrent.ExecutorService.invokeAll(java.util.concurrent.TimeUnit,long,java.util.Collection)", "java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)", "java.util.concurrent.ExecutorService.invokeAny(java.util.concurrent.TimeUnit,long,java.util.Collection)", "java.util.concurrent.ExecutorService.isShutdown()", "java.util.concurrent.ExecutorService.isTerminated()", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.ExecutorService.submit(java.lang.Runnable)", "java.util.concurrent.ExecutorService.submit(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)", "java.lang.reflect.Constructor.getParameterTypes()", "java.lang.reflect.Constructor.newInstance([Ljava.lang.Object)", "java.lang.reflect.Constructor.setAccessible(long)", "java.util.concurrent.CountDownLatch.<init>(long)", "java.util.concurrent.CountDownLatch.await()", "java.util.concurrent.CountDownLatch.await(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.CountDownLatch.countDown()", "java.lang.reflect.UndeclaredThrowableException.getCause()", "java.util.concurrent.atomic.AtomicBoolean.<init>(long)", "java.util.concurrent.atomic.AtomicBoolean.compareAndSet(long,long)", "java.util.concurrent.atomic.AtomicBoolean.set(long)", "java.util.concurrent.atomic.AtomicBoolean.getAndSet(long)", "java.util.concurrent.FutureTask.<init>(java.lang.Object,java.lang.Runnable)", "java.util.concurrent.FutureTask.<init>(java.util.concurrent.Callable)", "java.util.concurrent.locks.Condition.signal()", "java.util.concurrent.locks.Condition.signalAll()", "java.util.concurrent.locks.Condition.await()", "java.util.concurrent.locks.Condition.awaitNanos(long)", "java.util.concurrent.locks.Condition.awaitUninterruptibly()", "java.lang.IllegalMonitorStateException.<init>()", "java.util.concurrent.RejectedExecutionException.<init>(java.lang.String)", "java.lang.Runtime.getRuntime()", "java.lang.Runtime.addShutdownHook(java.lang.Thread)", "java.lang.Runtime.exit(long)", "java.util.concurrent.ThreadPoolExecutor.getThreadFactory()", "java.util.concurrent.ThreadPoolExecutor.setThreadFactory(java.util.concurrent.ThreadFactory)", "java.util.concurrent.ScheduledThreadPoolExecutor.getThreadFactory()", "java.util.concurrent.ScheduledThreadPoolExecutor.setThreadFactory(java.util.concurrent.ThreadFactory)", "java.lang.InterruptedException.printStackTrace()", "java.lang.reflect.Proxy.newProxyInstance(java.lang.reflect.InvocationHandler,[Ljava.lang.Class,java.lang.ClassLoader)", "java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)", "android.view.WindowManager.getDefaultDisplay()", "android.view.Display.getWidth()", "android.view.Display.getHeight()", "android.view.Display.getMetrics(android.util.DisplayMetrics)", "android.view.Display.getOrientation()", "android.util.DisplayMetrics.<init>()", "android.app.PendingIntent.getIntentSender()", "android.app.PendingIntent.send(android.content.Intent,long,android.content.Context)", "java.lang.ClassNotFoundException.getMessage()", "java.lang.ClassNotFoundException.printStackTrace()", "java.lang.NoSuchFieldException.getMessage()", "java.lang.IllegalAccessException.getMessage()", "android.app.Service.<init>()", "android.app.Service.onDestroy()", "java.security.spec.X509EncodedKeySpec.<init>(long)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.<init>(long)", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.<init>()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.<init>(java.lang.String)", "java.lang.StringBuffer.append(java.lang.Object)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.substring(long,long)", "java.lang.StringBuffer.replace(java.lang.String,long,long)", "java.lang.StringBuffer.indexOf(long,java.lang.String)", "java.lang.StringBuffer.charAt(long)", "java.lang.StringBuffer.setLength(long)", "javax.crypto.Cipher.getInstance(java.lang.String)", "javax.crypto.Cipher.init(java.security.Key,long)", "javax.crypto.Cipher.doFinal(long)", "javax.crypto.Cipher.init(java.security.spec.AlgorithmParameterSpec,java.security.Key,long)", "javax.crypto.KeyGenerator.getInstance(java.lang.String)", "javax.crypto.KeyGenerator.init(java.security.SecureRandom,long)", "javax.crypto.KeyGenerator.generateKey()", "javax.crypto.SecretKey.getEncoded()", "javax.crypto.SecretKeyFactory.getInstance(java.lang.String)", "javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)", "javax.crypto.spec.PBEKeySpec.<init>(long)", "javax.crypto.spec.PBEParameterSpec.<init>(long,long)", "android.provider.Settings.Secure.getString(java.lang.String,android.content.ContentResolver)", "android.widget.Button.setOnClickListener(android.view.View.OnClickListener)", "android.widget.Button.setVisibility(long)", "android.widget.Button.setEnabled(long)", "android.widget.Button.setText(java.lang.CharSequence)", "android.widget.Button.<init>(android.content.Context)", "android.widget.Button.setTextColor(long)", "android.widget.Button.setPadding(long,long,long,long)", "android.widget.Button.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.Button.setShadowLayer(long,long,long,long)", "android.widget.Button.setTag(java.lang.Object)", "android.widget.Button.getBackground()", "android.widget.Button.setText(long)", "android.widget.Button.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.Button.setId(long)", "java.util.UUID.randomUUID()", "java.util.UUID.toString()", "android.content.DialogInterface.dismiss()", "android.content.DialogInterface.cancel()", "android.widget.ProgressBar.setVisibility(long)", "android.widget.ProgressBar.bringToFront()", "android.widget.ProgressBar.<init>(long,android.util.AttributeSet,android.content.Context)", "android.widget.ProgressBar.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ProgressBar.setProgress(long)", "android.widget.ProgressBar.setIndeterminate(long)", "java.util.Hashtable.<init>()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "java.util.Hashtable.get(java.lang.Object)", "java.util.Hashtable.remove(java.lang.Object)", "java.util.Hashtable.containsKey(java.lang.Object)", "java.util.Hashtable.keys()", "java.util.Hashtable.clear()", "java.util.Hashtable.size()", "java.util.Hashtable.entrySet()", "java.util.Hashtable.keySet()", "android.view.ViewParent.getParent()", "android.database.sqlite.SQLiteDatabase.rawQuery([Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.isFirst()", "android.database.Cursor.getString(long)", "android.database.Cursor.moveToNext()", "android.database.Cursor.deactivate()", "android.database.Cursor.close()", "android.database.Cursor.getInt(long)", "android.os.Environment.getExternalStorageDirectory()", "android.os.Environment.getDataDirectory()", "android.os.Environment.getExternalStorageState()", "java.net.URLConnection.setConnectTimeout(long)", "java.net.URLConnection.setReadTimeout(long)", "java.net.URLConnection.connect()", "java.net.URLConnection.getInputStream()", "java.net.URLConnection.getContentLength()", "java.net.URLConnection.addRequestProperty(java.lang.String,java.lang.String)", "java.net.URLConnection.setDoOutput(long)", "java.net.URLConnection.getOutputStream()", "java.net.URLConnection.getHeaderFields()", "java.net.URLConnection.getContentType()", "java.io.BufferedInputStream.<init>(java.io.InputStream)", "java.io.BufferedInputStream.read(long)", "java.io.BufferedInputStream.close()", "java.io.BufferedInputStream.read()", "java.net.SocketTimeoutException.toString()", "android.widget.TableLayout.getChildAt(long)", "android.widget.TableLayout.removeAllViews()", "android.widget.TableLayout.findViewWithTag(java.lang.Object)", "android.widget.TableLayout.removeView(android.view.View)", "android.widget.TableLayout.addView(android.view.View)", "android.widget.TableLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.graphics.Color.argb(long,long,long,long)", "android.graphics.drawable.GradientDrawable.<init>(long,android.graphics.drawable.GradientDrawable.Orientation)", "android.graphics.drawable.GradientDrawable.setCornerRadii(long)", "android.graphics.drawable.GradientDrawable.setStroke(long,long)", "android.graphics.drawable.GradientDrawable.setGradientRadius(long)", "android.graphics.drawable.StateListDrawable.<init>()", "android.graphics.drawable.StateListDrawable.addState(android.graphics.drawable.Drawable,long)", "android.widget.ScrollView.setBackgroundDrawable(android.graphics.drawable.Drawable)", "android.widget.ScrollView.setFillViewport(long)", "android.widget.ScrollView.setScrollContainer(long)", "android.widget.TabHost.setup()", "android.widget.TabHost.newTabSpec(java.lang.String)", "android.widget.TabHost.addTab(android.widget.TabHost.TabSpec)", "android.widget.TabHost.setCurrentTab(long)", "android.widget.TabHost.setVisibility(long)", "android.widget.TabHost.TabSpec.setContent(long)", "android.widget.TabHost.TabSpec.setIndicator(android.view.View)", "android.os.StatFs.<init>(java.lang.String)", "android.os.StatFs.getAvailableBlocks()", "android.os.StatFs.getBlockSize()", "android.database.sqlite.SQLiteOpenHelper.<init>(long,android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,android.content.Context)", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.isDirectory()", "java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)", "java.util.zip.ZipFile.<init>(java.io.File)", "java.util.zip.ZipFile.entries()", "java.util.zip.ZipFile.close()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)", "android.database.SQLException.toString()", "java.util.TimerTask.<init>()", "android.net.ConnectivityManager.getActiveNetworkInfo()", "android.net.NetworkInfo.getType()", "android.net.NetworkInfo.isConnected()", "java.util.Vector.<init>()", "java.util.Vector.add(java.lang.Object)", "java.util.Vector.contains(java.lang.Object)", "java.util.Vector.remove(java.lang.Object)", "java.util.Vector.size()", "java.util.Vector.elementAt(long)", "java.util.Vector.removeElementAt(long)", "java.util.Vector.addElement(java.lang.Object)", "java.util.Vector.toArray([Ljava.lang.Object)", "android.telephony.TelephonyManager.getDeviceId()", "android.telephony.TelephonyManager.getNetworkOperatorName()", "android.telephony.TelephonyManager.getNetworkCountryIso()", "android.telephony.TelephonyManager.getNetworkOperator()", "java.util.Timer.<init>()", "java.util.Timer.schedule(long,long,java.util.TimerTask)", "java.util.Timer.cancel()", "java.util.Timer.schedule(long,java.util.TimerTask)", "android.widget.VideoView.seekTo(long)", "android.widget.VideoView.start()", "android.widget.VideoView.getCurrentPosition()", "android.widget.VideoView.getDuration()", "android.widget.VideoView.<init>(android.content.Context)", "android.widget.VideoView.setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)", "android.widget.VideoView.setOnErrorListener(android.media.MediaPlayer.OnErrorListener)", "android.widget.VideoView.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)", "android.widget.VideoView.setVideoURI(android.net.Uri)", "android.widget.VideoView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.VideoView.setVideoPath(java.lang.String)", "android.widget.VideoView.requestFocus()", "android.widget.VideoView.pause()", "android.widget.VideoView.isPlaying()", "android.widget.VideoView.stopPlayback()", "android.accounts.AccountManager.get(android.content.Context)", "android.accounts.AccountManager.getAccountsByType(java.lang.String)", "android.content.ContextWrapper.getSystemService(java.lang.String)", "android.content.ContextWrapper.getPackageName()", "android.content.ContextWrapper.getSharedPreferences(long,java.lang.String)", "android.content.ContextWrapper.getPackageCodePath()", "android.content.ContextWrapper.checkCallingOrSelfPermission(java.lang.String)", "android.content.ContextWrapper.getAssets()", "android.content.ContextWrapper.registerReceiver(android.content.IntentFilter,android.content.BroadcastReceiver)", "android.content.ContextWrapper.getApplicationInfo()", "android.content.ContextWrapper.getPackageManager()", "android.content.ContextWrapper.getCacheDir()", "android.content.ContextWrapper.getContentResolver()", "android.content.ContextWrapper.getFilesDir()", "android.content.ContextWrapper.startActivity(android.content.Intent)", "android.content.ContextWrapper.unregisterReceiver(android.content.BroadcastReceiver)", "android.view.inputmethod.InputMethodManager.toggleSoftInput(long,long)", "android.view.inputmethod.InputMethodManager.showSoftInput(long,android.view.View)", "android.opengl.GLSurfaceView.<init>(android.content.Context)", "android.opengl.GLSurfaceView.onDetachedFromWindow()", "android.opengl.GLSurfaceView.setPreserveEGLContextOnPause(long)", "javax.microedition.khronos.egl.EGL10.eglGetError()", "javax.microedition.khronos.egl.EGL10.eglGetConfigAttrib(long,long,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglGetDisplay(java.lang.Object)", "javax.microedition.khronos.egl.EGL10.eglInitialize(long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglChooseConfig(long,long,[Ljavax.microedition.khronos.egl.EGLConfig,long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreateContext(long,javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroyContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay)", "android.view.SurfaceHolder.setFormat(long)", "android.view.SurfaceHolder.setSizeFromLayout()", "android.view.SurfaceHolder.setFixedSize(long,long)", "android.view.SurfaceHolder.getSurfaceFrame()", "android.view.SurfaceHolder.setType(long)", "android.view.SurfaceHolder.addCallback(android.view.SurfaceHolder.Callback)", "java.util.concurrent.Semaphore.release()", "java.util.concurrent.Semaphore.release(long)", "java.util.concurrent.Semaphore.<init>(long)", "java.util.concurrent.Semaphore.tryAcquire(java.util.concurrent.TimeUnit,long)", "java.util.concurrent.Semaphore.drainPermits()", "android.view.SurfaceView.getHolder()", "android.view.SurfaceView.invalidate()", "android.view.SurfaceView.getWidth()", "android.view.SurfaceView.getHeight()", "android.view.SurfaceView.<init>(android.content.Context)", "android.view.SurfaceView.setVisibility(long)", "android.content.res.AssetManager.open(java.lang.String)", "android.content.res.AssetManager.openFd(java.lang.String)", "android.os.PowerManager.newWakeLock(java.lang.String,long)", "android.os.PowerManager.WakeLock.isHeld()", "android.os.PowerManager.WakeLock.acquire()", "android.os.PowerManager.WakeLock.release()", "android.view.KeyEvent.getAction()", "android.view.KeyEvent.getMetaState()", "android.view.KeyEvent.getUnicodeChar(long)", "android.view.KeyEvent.getScanCode()", "android.view.KeyEvent.getDeviceId()", "android.view.KeyEvent.isSystem()", "android.view.MotionEvent.getPointerCount()", "android.view.MotionEvent.getAction()", "android.view.MotionEvent.getX(long)", "android.view.MotionEvent.getY(long)", "android.view.MotionEvent.getPointerId(long)", "android.view.MotionEvent.getHistorySize()", "android.view.MotionEvent.getHistoricalX(long,long)", "android.view.MotionEvent.getHistoricalY(long,long)", "android.view.MotionEvent.getHistoricalEventTime(long)", "android.view.MotionEvent.getEventTime()", "android.view.MotionEvent.getSource()", "android.view.MotionEvent.getAxisValue(long,long)", "android.view.MotionEvent.getDeviceId()", "android.view.MotionEvent.getButtonState()", "android.view.MotionEvent.obtain(long,long,long,long,long,long,long,[Landroid.view.MotionEvent.PointerCoords,long,long,long,long,long)", "android.view.MotionEvent.addBatch(long,[Landroid.view.MotionEvent.PointerCoords,long)", "android.hardware.SensorManager.getDefaultSensor(long)", "android.hardware.SensorManager.registerListener(long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)", "android.hardware.SensorManager.getRotationMatrix(long,long,long,long)", "android.hardware.SensorManager.getOrientation(long,long)", "android.content.IntentFilter.<init>(java.lang.String)", "android.os.Process.myPid()", "android.os.Process.killProcess(long)", "android.webkit.MimeTypeMap.getSingleton()", "android.webkit.MimeTypeMap.getFileExtensionFromUrl(java.lang.String)", "android.webkit.MimeTypeMap.getMimeTypeFromExtension(java.lang.String)", "android.os.Vibrator.cancel()", "android.os.Vibrator.vibrate(long)", "android.os.Vibrator.hasVibrator()", "android.app.NativeActivity.<init>()", "android.app.NativeActivity.onConfigurationChanged(android.content.res.Configuration)", "android.app.NativeActivity.onCreate(android.os.Bundle)", "android.app.NativeActivity.onDestroy()", "android.app.NativeActivity.onPause()", "android.app.NativeActivity.onResume()", "android.app.NativeActivity.onWindowFocusChanged(long)", "android.app.NativeActivity.getWindow()", "android.app.NativeActivity.runOnUiThread(java.lang.Runnable)", "android.hardware.Camera.setPreviewDisplay(android.view.SurfaceHolder)", "android.hardware.Camera.startPreview()", "android.hardware.Camera.stopPreview()", "android.hardware.Camera.getParameters()", "android.hardware.Camera.setParameters(android.hardware.Camera.Parameters)", "android.hardware.Camera.open()", "android.hardware.Camera.release()", "android.hardware.Camera.setPreviewCallback(android.hardware.Camera.PreviewCallback)", "android.hardware.Camera.setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)", "android.hardware.Camera.addCallbackBuffer(long)", "android.hardware.Camera.getNumberOfCameras()", "android.hardware.Camera.getCameraInfo(android.hardware.Camera.CameraInfo,long)", "android.hardware.Camera.open(long)", "android.hardware.Camera.Parameters.setPreviewSize(long,long)", "android.hardware.Camera.Parameters.setPreviewFormat(long)", "android.hardware.Camera.Parameters.getSupportedPreviewSizes()", "android.hardware.Camera.Parameters.getSupportedPreviewFrameRates()", "android.hardware.Camera.Parameters.setPreviewFrameRate(long)", "android.hardware.Camera.Parameters.getSupportedColorEffects()", "android.hardware.Camera.Parameters.setColorEffect(java.lang.String)", "android.hardware.Camera.Parameters.getSupportedPreviewFpsRange()", "android.hardware.Camera.Parameters.setPreviewFpsRange(long,long)", "android.hardware.Camera.Parameters.getSupportedFocusModes()", "android.hardware.Camera.Parameters.setFocusMode(java.lang.String)", "java.io.FileReader.<init>(java.lang.String)", "java.io.LineNumberReader.<init>(long,java.io.Reader)", "java.io.LineNumberReader.readLine()", "android.graphics.ImageFormat.getBitsPerPixel(long)", "android.hardware.Camera.CameraInfo.<init>()", "android.view.InputDevice.getDevice(long)", "android.view.InputDevice.getMotionRanges()", "android.view.InputDevice.getName()", "android.view.InputDevice.getDeviceIds()", "android.view.InputDevice.getSources()", "android.view.InputDevice.getMotionRange(long)", "android.view.InputDevice.MotionRange.getSource()", "android.view.InputDevice.MotionRange.getAxis()", "android.view.InputDevice.MotionRange.getRange()", "android.view.MotionEvent.PointerCoords.<init>()", "android.opengl.GLES10.glReadPixels(java.nio.Buffer,long,long,long,long,long,long)", "android.graphics.Matrix.<init>()", "android.graphics.Matrix.preScale(long,long)", "android.location.LocationProvider.getAccuracy()", "android.hardware.Sensor.getType()", "android.hardware.GeomagneticField.<init>(long,long,long,long)", "android.hardware.GeomagneticField.getDeclination()", "android.widget.EditText.<init>(android.content.Context)", "android.widget.EditText.onKeyPreIme(android.view.KeyEvent,long)", "android.widget.EditText.onWindowFocusChanged(long)", "android.widget.EditText.setOnFocusChangeListener(android.view.View.OnFocusChangeListener)", "android.widget.EditText.getText()", "android.widget.EditText.setImeOptions(long)", "android.widget.EditText.setText(java.lang.CharSequence)", "android.widget.EditText.setHint(java.lang.CharSequence)", "android.widget.EditText.setInputType(long)", "android.widget.EditText.addTextChangedListener(android.text.TextWatcher)", "android.widget.EditText.getInputType()", "android.widget.EditText.setKeyListener(android.text.method.KeyListener)", "android.widget.EditText.setRawInputType(long)", "android.widget.EditText.setClickable(long)", "android.widget.EditText.selectAll()", "android.widget.EditText.setSelection(long)", "android.widget.EditText.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.EditText.setId(long)", "android.widget.EditText.setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)", "android.graphics.drawable.ColorDrawable.<init>(long)", "android.text.method.TextKeyListener.getInstance()", "javax.microedition.khronos.egl.EGLContext.getEGL()", "android.media.MediaPlayer.<init>()", "android.media.MediaPlayer.setDataSource(android.net.Uri,android.content.Context)", "android.media.MediaPlayer.setDisplay(android.view.SurfaceHolder)", "android.media.MediaPlayer.setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)", "android.media.MediaPlayer.setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)", "android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)", "android.media.MediaPlayer.setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)", "android.media.MediaPlayer.setAudioStreamType(long)", "android.media.MediaPlayer.prepare()", "android.media.MediaPlayer.setDataSource(long,long,java.io.FileDescriptor)", "android.media.MediaPlayer.setDataSource(java.io.FileDescriptor)", "android.media.MediaPlayer.release()", "android.media.MediaPlayer.getCurrentPosition()", "android.media.MediaPlayer.getDuration()", "android.media.MediaPlayer.isPlaying()", "android.media.MediaPlayer.pause()", "android.media.MediaPlayer.seekTo(long)", "android.media.MediaPlayer.start()", "android.widget.MediaController.<init>(android.content.Context)", "android.widget.MediaController.setMediaPlayer(android.widget.MediaController.MediaPlayerControl)", "android.widget.MediaController.setAnchorView(android.view.View)", "android.widget.MediaController.setEnabled(long)", "android.widget.MediaController.show()", "android.widget.MediaController.onKeyDown(android.view.KeyEvent,long)", "android.widget.MediaController.onTouchEvent(android.view.MotionEvent)", "android.content.res.AssetFileDescriptor.getFileDescriptor()", "android.content.res.AssetFileDescriptor.getStartOffset()", "android.content.res.AssetFileDescriptor.getLength()", "android.content.res.AssetFileDescriptor.close()", "android.media.AudioTrack.getState()", "android.media.AudioTrack.stop()", "android.media.AudioTrack.release()", "android.media.AudioTrack.getMinBufferSize(long,long,long)", "android.media.AudioTrack.<init>(long,long,long,long,long,long)", "android.media.AudioTrack.play()", "android.media.AudioTrack.write(long,long,long)", "android.media.AudioRecord.getMinBufferSize(long,long,long)", "android.media.AudioRecord.getState()", "android.media.AudioRecord.stop()", "android.media.AudioRecord.release()", "android.media.AudioRecord.<init>(long,long,long,long,long)", "android.media.AudioRecord.startRecording()", "android.media.AudioRecord.getRecordingState()", "android.media.AudioRecord.read(long,java.nio.ByteBuffer)", "java.lang.NoClassDefFoundError.<init>()", "java.lang.NoClassDefFoundError.initCause(java.lang.Throwable)", "java.util.EventObject.<init>(java.lang.Object)", "java.text.SimpleDateFormat.<init>(java.lang.String)", "java.text.SimpleDateFormat.format(java.util.Date)", "java.text.SimpleDateFormat.<init>(java.util.Locale,java.lang.String)", "java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.security.InvalidKeyException.printStackTrace()", "java.net.Authenticator.<init>()", "java.net.Authenticator.setDefault(java.net.Authenticator)", "java.net.Authenticator.RequestorType.equals(java.lang.Object)", "java.net.PasswordAuthentication.<init>(long,java.lang.String)", "java.net.Proxy.<init>(java.net.SocketAddress,java.net.Proxy.Type)", "java.net.InetSocketAddress.createUnresolved(long,java.lang.String)", "java.util.ResourceBundle.getBundle(java.lang.ClassLoader,java.util.Locale,java.lang.String)", "java.util.ResourceBundle.getKeys()", "java.util.ResourceBundle.getString(java.lang.String)", "java.lang.Package.getName()", "java.lang.ExceptionInInitializerError.<init>(java.lang.Throwable)", "java.text.MessageFormat.<init>(java.lang.String)", "java.text.MessageFormat.format(java.lang.Object)"]
}