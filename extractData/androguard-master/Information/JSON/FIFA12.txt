{
"name":"FIFA12", 
"SHA256":"ebae175e20632f6e404e6f6c42560af38ce1ab17b1958c2493f59ffe0f147d0f", 
"versionCode":"38", 
"versionName":"1.3.86", 
"size":14108163, 
"minSDKVersion":"7", 
"certificate(fingerprint)":"5B:FF:7D:61:4E:1B:A1:1A:56:6A:BB:58:9C:86:3B:01:3F:79:AA:74:7B:D2:14:67:33:36:6C:56:25:A5:F0:D2", 
"certificate(owner)":"Common Name: EAM, Organizational Unit: EAM, Organization: EAM, Locality: LA, State/Province: CA, Country: US", 
"permission":["android.permission.ACCESS_WIFI_STATE", "android.permission.INTERNET", "android.permission.CHANGE_NETWORK_STATE", "android.permission.MODIFY_AUDIO_SETTINGS", "android.permission.WAKE_LOCK", "com.android.vending.CHECK_LICENSE", "android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.ACCESS_NETWORK_STATE", "android.permission.CHANGE_WIFI_STATE", "android.permission.READ_PHONE_STATE"], 
"API":["java.lang.Object.<init>()", "java.lang.Object.getClass()", "java.lang.Object.toString()", "java.lang.Object.notifyAll()", "java.lang.Object.equals(java.lang.Object)", "java.lang.Object.finalize()", "java.lang.Object.wait(long)", "android.widget.LinearLayout.<init>(android.content.Context)", "android.widget.LinearLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.LinearLayout.setOrientation(long)", "android.widget.LinearLayout.setGravity(long)", "android.widget.LinearLayout.setPadding(long,long,long,long)", "android.widget.LinearLayout.addView(android.view.View)", "android.widget.LinearLayout.removeView(android.view.View)", "android.widget.LinearLayout.setId(long)", "android.widget.LinearLayout.LayoutParams.<init>(long,long,long)", "android.widget.LinearLayout.LayoutParams.<init>(long,long)", "android.widget.ScrollView.<init>(android.content.Context)", "android.widget.ScrollView.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.ScrollView.setForegroundGravity(long)", "android.widget.ScrollView.addView(android.view.View)", "android.widget.TextView.<init>(android.content.Context)", "android.widget.TextView.setClickable(long)", "android.widget.TextView.setCursorVisible(long)", "android.widget.TextView.setPadding(long,long,long,long)", "android.widget.TextView.setTextSize(long)", "android.widget.TextView.setText(java.lang.CharSequence)", "android.widget.TextView.setSingleLine(long)", "android.widget.TextView.setTextColor(long)", "android.widget.TextView.setId(long)", "android.widget.Button.<init>(android.content.Context)", "android.widget.Button.setLayoutParams(android.view.ViewGroup.LayoutParams)", "android.widget.Button.setPadding(long,long,long,long)", "android.widget.Button.setTextSize(long)", "android.widget.Button.setText(java.lang.CharSequence)", "android.widget.Button.setOnClickListener(android.view.View.OnClickListener)", "android.widget.Button.setTag(java.lang.Object)", "android.content.DialogInterface.OnClickListener.onClick(long,android.content.DialogInterface)", "android.content.DialogInterface.OnCancelListener.onCancel(android.content.DialogInterface)", "android.content.DialogInterface.OnDismissListener.onDismiss(android.content.DialogInterface)", "android.app.Dialog.<init>(android.content.Context)", "android.app.Dialog.show()", "android.app.Dialog.dismiss()", "android.app.Dialog.setOwnerActivity(android.app.Activity)", "android.app.Dialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "android.app.Dialog.findViewById(long)", "android.app.Dialog.setCancelable(long)", "android.app.Dialog.setCanceledOnTouchOutside(long)", "android.app.Dialog.requestWindowFeature(long)", "android.app.Dialog.setContentView(android.view.View)", "android.app.Dialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.Dialog.hide()", "android.app.ProgressDialog.<init>(android.content.Context)", "android.app.ProgressDialog.show(long,java.lang.CharSequence,java.lang.CharSequence,android.content.Context)", "android.app.ProgressDialog.dismiss()", "android.app.ProgressDialog.setCancelable(long)", "android.app.ProgressDialog.setCanceledOnTouchOutside(long)", "android.app.ProgressDialog.setMessage(java.lang.CharSequence)", "android.app.ProgressDialog.setProgressStyle(long)", "android.app.ProgressDialog.setProgress(long)", "android.app.ProgressDialog.show()", "android.app.ProgressDialog.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "android.app.ProgressDialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.ProgressDialog.setMax(long)", "android.app.ProgressDialog.setTitle(java.lang.CharSequence)", "android.app.ProgressDialog.setIndeterminate(long)", "android.app.ProgressDialog.cancel()", "java.lang.Class.desiredAssertionStatus()", "java.lang.Class.getName()", "java.lang.Class.getPackage()", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.getMethod([Ljava.lang.Class,java.lang.String)", "java.lang.String.<init>(long,long,long)", "java.lang.String.getBytes()", "java.lang.String.toCharArray()", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.<init>(java.lang.String,long)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(long,long)", "java.lang.String.valueOf(long)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.format([Ljava.lang.Object,java.lang.String)", "java.lang.String.<init>(long)", "java.lang.String.matches(java.lang.String)", "java.lang.String.substring(long)", "java.lang.String.indexOf(long)", "java.lang.String.charAt(long)", "java.lang.String.trim()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.contains(java.lang.CharSequence)", "java.lang.String.split(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.toString()", "java.lang.String.valueOf(java.lang.Object)", "java.lang.String.hashCode()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(long,java.lang.String)", "java.lang.StringBuilder.<init>()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.append(long)", "java.lang.StringBuilder.<init>(java.lang.String)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.insert(long,long)", "java.lang.System.arraycopy(long,long,java.lang.Object,long,java.lang.Object)", "java.lang.System.currentTimeMillis()", "java.lang.System.exit(long)", "java.lang.System.loadLibrary(java.lang.String)", "java.lang.System.getProperty(java.lang.String)", "java.lang.AssertionError.<init>()", "java.lang.AssertionError.<init>(java.lang.Object)", "java.lang.Exception.<init>()", "java.lang.Exception.<init>(java.lang.String)", "java.lang.Exception.printStackTrace()", "java.lang.Exception.toString()", "java.lang.Exception.printStackTrace(java.io.PrintWriter)", "javax.crypto.SecretKeyFactory.getInstance(java.lang.String)", "javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)", "javax.crypto.spec.PBEKeySpec.<init>(long,long,long,long)", "javax.crypto.spec.SecretKeySpec.<init>(java.lang.String,long)", "javax.crypto.SecretKey.getEncoded()", "javax.crypto.Cipher.getInstance(java.lang.String)", "javax.crypto.Cipher.init(java.security.spec.AlgorithmParameterSpec,java.security.Key,long)", "javax.crypto.Cipher.doFinal(long)", "javax.crypto.spec.IvParameterSpec.<init>(long)", "java.lang.RuntimeException.<init>(java.lang.Throwable,java.lang.String)", "java.lang.RuntimeException.<init>(java.lang.Throwable)", "javax.crypto.IllegalBlockSizeException.getMessage()", "javax.crypto.BadPaddingException.getMessage()", "java.security.SecureRandom.<init>()", "java.security.SecureRandom.nextInt()", "java.util.HashSet.<init>()", "java.util.LinkedList.<init>()", "java.util.LinkedList.size()", "java.util.LinkedList.get(long)", "java.util.LinkedList.poll()", "android.content.Context.getPackageName()", "android.content.Context.getPackageManager()", "android.content.Context.unbindService(android.content.ServiceConnection)", "android.content.Context.bindService(long,android.content.ServiceConnection,android.content.Intent)", "android.content.Context.getSharedPreferences(long,java.lang.String)", "android.content.Context.getSystemService(java.lang.String)", "android.content.Context.getContentResolver()", "android.content.Context.getResources()", "android.content.Context.getAssets()", "android.content.Context.getFilesDir()", "android.content.Context.getApplicationContext()", "android.content.Context.getMainLooper()", "android.content.Context.startService(android.content.Intent)", "android.os.HandlerThread.<init>(java.lang.String)", "android.os.HandlerThread.start()", "android.os.HandlerThread.getLooper()", "android.os.Handler.<init>(android.os.Looper)", "android.os.Handler.getLooper()", "android.os.Handler.postDelayed(long,java.lang.Runnable)", "android.os.Handler.removeCallbacks(java.lang.Runnable)", "android.os.Handler.post(java.lang.Runnable)", "android.os.Handler.<init>()", "android.os.Handler.sendEmptyMessage(long)", "android.os.Handler.obtainMessage()", "android.os.Handler.sendMessage(android.os.Message)", "android.content.pm.PackageManager.getPackageInfo(long,java.lang.String)", "android.content.pm.PackageManager.getApplicationInfo(long,java.lang.String)", "android.content.pm.PackageManager.hasSystemFeature(java.lang.String)", "java.security.KeyFactory.getInstance(java.lang.String)", "java.security.KeyFactory.generatePublic(java.security.spec.KeySpec)", "java.security.spec.X509EncodedKeySpec.<init>(long)", "java.lang.IllegalArgumentException.<init>(java.lang.Throwable)", "java.lang.IllegalArgumentException.<init>(java.lang.String)", "java.util.Set.remove(java.lang.Object)", "java.util.Set.isEmpty()", "java.util.Set.add(java.lang.Object)", "java.util.Set.contains(java.lang.Object)", "java.util.Queue.poll()", "java.util.Queue.offer(java.lang.Object)", "android.os.Looper.quit()", "android.content.Intent.<init>(java.lang.String)", "android.content.Intent.getIntExtra(long,java.lang.String)", "android.content.Intent.getAction()", "android.content.Intent.<init>(android.net.Uri,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.<init>()", "android.content.Intent.setClassName(java.lang.String,java.lang.String)", "android.os.Binder.<init>()", "android.os.Binder.onTransact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.IBinder.queryLocalInterface(java.lang.String)", "android.os.IBinder.transact(long,android.os.Parcel,android.os.Parcel,long)", "android.os.Parcel.writeString(java.lang.String)", "android.os.Parcel.enforceInterface(java.lang.String)", "android.os.Parcel.readInt()", "android.os.Parcel.readString()", "android.os.Parcel.obtain()", "android.os.Parcel.writeInterfaceToken(java.lang.String)", "android.os.Parcel.writeInt(long)", "android.os.Parcel.recycle()", "android.os.Parcel.readLong()", "android.os.Parcel.readStrongBinder()", "android.os.Parcel.writeLong(long)", "android.os.Parcel.writeStrongBinder(android.os.IBinder)", "android.os.Parcel.readException()", "android.os.Parcel.createByteArray()", "android.os.Parcel.writeNoException()", "android.os.Parcel.writeByteArray(long)", "java.lang.Enum.<init>(long,java.lang.String)", "java.lang.Enum.valueOf(java.lang.String,java.lang.Class)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.valueOf(long)", "java.lang.Long.toString(long)", "java.lang.Long.longValue()", "java.util.HashMap.<init>()", "java.util.HashMap.get(java.lang.Object)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)", "java.net.URI.<init>(java.lang.String)", "java.util.List.iterator()", "java.util.List.contains(java.lang.Object)", "java.util.List.add(java.lang.Object)", "java.util.List.size()", "java.util.List.toArray([Ljava.lang.Object)", "java.util.Iterator.hasNext()", "java.util.Iterator.next()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.Map.get(java.lang.Object)", "java.util.Map.clear()", "java.util.Map.values()", "android.content.SharedPreferences.Editor.commit()", "android.content.SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.Editor.putInt(long,java.lang.String)", "android.content.SharedPreferences.edit()", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.getInt(long,java.lang.String)", "android.text.TextUtils.SimpleStringSplitter.<init>(long)", "android.text.TextUtils.StringSplitter.setString(java.lang.String)", "android.text.TextUtils.StringSplitter.iterator()", "java.util.regex.Pattern.quote(java.lang.String)", "java.util.regex.Pattern.compile(long,java.lang.String)", "java.util.regex.Pattern.split(java.lang.CharSequence)", "android.text.TextUtils.split(java.lang.String,java.lang.String)", "android.text.TextUtils.join([Ljava.lang.Object,java.lang.CharSequence)", "android.text.TextUtils.isEmpty(java.lang.CharSequence)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.valueOf(long)", "java.lang.Integer.intValue()", "java.lang.Integer.toString(long)", "java.lang.Integer.<init>(long)", "java.lang.Integer.toString()", "java.lang.Integer.toHexString(long)", "java.lang.Integer.toString(long,long)", "java.util.ArrayList.<init>()", "java.util.ArrayList.add(java.lang.Object)", "java.util.ArrayList.get(long)", "java.util.ArrayList.size()", "java.security.Signature.getInstance(java.lang.String)", "java.security.Signature.initVerify(java.security.PublicKey)", "java.security.Signature.update(long)", "java.security.Signature.verify(long)", "android.media.AudioTrack.flush()", "android.media.AudioTrack.release()", "android.media.AudioTrack.getNativeOutputSampleRate(long)", "android.media.AudioTrack.getMinBufferSize(long,long,long)", "android.media.AudioTrack.<init>(long,long,long,long,long,long)", "android.app.Activity.getFilesDir()", "android.app.Activity.getAssets()", "android.app.Activity.runOnUiThread(java.lang.Runnable)", "android.app.Activity.<init>()", "android.app.Activity.onConfigurationChanged(android.content.res.Configuration)", "android.app.Activity.onCreate(android.os.Bundle)", "android.app.Activity.onDestroy()", "android.app.Activity.onKeyDown(android.view.KeyEvent,long)", "android.app.Activity.onKeyUp(android.view.KeyEvent,long)", "android.app.Activity.onPause()", "android.app.Activity.onResume()", "android.app.Activity.onStop()", "android.app.Activity.onWindowFocusChanged(long)", "android.app.Activity.finish()", "android.app.Activity.openFileInput(java.lang.String)", "android.app.Activity.openFileOutput(long,java.lang.String)", "android.app.Activity.getPackageName()", "android.app.Activity.sendBroadcast(android.content.Intent)", "android.app.Activity.registerReceiver(android.content.IntentFilter,android.content.BroadcastReceiver)", "android.app.Activity.unregisterReceiver(android.content.BroadcastReceiver)", "android.app.Activity.getSystemService(java.lang.String)", "android.app.Activity.setContentView(android.view.View)", "android.app.Activity.getSharedPreferences(long,java.lang.String)", "android.app.Activity.getPackageManager()", "android.app.Activity.getString(long)", "android.app.Activity.getApplicationContext()", "android.app.Activity.getWindowManager()", "android.app.Activity.getRequestedOrientation()", "android.app.Activity.getContentResolver()", "android.app.Activity.startActivity(android.content.Intent)", "android.os.Environment.getExternalStorageDirectory()", "android.os.Environment.getExternalStorageState()", "android.os.Environment.getDataDirectory()", "java.io.File.getAbsolutePath()", "java.io.File.<init>(java.lang.String)", "java.io.File.exists()", "java.io.File.delete()", "java.io.File.mkdir()", "java.io.File.isDirectory()", "java.io.File.list()", "java.io.File.<init>(java.lang.String,java.io.File)", "java.io.File.mkdirs()", "java.io.File.length()", "java.io.File.getPath()", "java.io.File.createNewFile()", "java.io.File.getParent()", "java.io.File.toString()", "java.lang.Package.getName()", "android.view.MotionEvent.getAction()", "android.view.MotionEvent.getSource()", "android.view.MotionEvent.getPointerId(long)", "android.view.MotionEvent.getX(long)", "android.view.MotionEvent.getY(long)", "android.view.MotionEvent.getPointerCount()", "android.view.View.hasFocus()", "android.view.View.requestFocus()", "android.view.View.getWindowToken()", "android.view.View.getRootView()", "android.view.View.getParent()", "android.view.View.<init>(android.content.Context)", "android.view.View.onMeasure(long,long)", "android.view.View.getTag()", "android.widget.RelativeLayout.<init>(android.content.Context)", "android.widget.RelativeLayout.addView(android.view.ViewGroup.LayoutParams,android.view.View)", "android.widget.RelativeLayout.removeView(android.view.View)", "android.widget.RelativeLayout.setGravity(long)", "android.webkit.WebView.<init>(android.content.Context)", "android.webkit.WebView.setWebViewClient(android.webkit.WebViewClient)", "android.webkit.WebView.requestFocus(long)", "android.webkit.WebView.setOnTouchListener(android.view.View.OnTouchListener)", "android.webkit.WebView.setVerticalScrollBarEnabled(long)", "android.webkit.WebView.setHorizontalScrollBarEnabled(long)", "android.webkit.WebView.loadUrl(java.lang.String)", "android.webkit.WebView.stopLoading()", "android.widget.RelativeLayout.LayoutParams.<init>(long,long)", "android.view.ViewGroup.addView(android.view.View)", "android.view.ViewGroup.removeView(android.view.View)", "android.webkit.WebViewClient.<init>()", "android.util.Log.e(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.String,java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.util.Log.w(java.lang.Throwable,java.lang.String,java.lang.String)", "android.util.Log.e(java.lang.Throwable,java.lang.String,java.lang.String)", "android.hardware.SensorManager.getDefaultSensor(long)", "android.hardware.SensorManager.registerListener(long,android.hardware.Sensor,android.hardware.SensorEventListener)", "android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)", "javax.microedition.khronos.egl.EGL10.eglGetConfigAttrib(long,long,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglChooseConfig(long,long,[Ljavax.microedition.khronos.egl.EGLConfig,long,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglCreateContext(long,javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLDisplay)", "javax.microedition.khronos.egl.EGL10.eglDestroyContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay)", "android.opengl.GLSurfaceView.<init>(android.content.Context)", "android.opengl.GLSurfaceView.setRenderer(android.opengl.GLSurfaceView.Renderer)", "android.opengl.GLSurfaceView.onPause()", "android.opengl.GLSurfaceView.onResume()", "android.view.SurfaceHolder.setFormat(long)", "android.content.BroadcastReceiver.<init>()", "android.content.IntentFilter.<init>(java.lang.String)", "android.content.IntentFilter.addDataScheme(java.lang.String)", "android.content.IntentFilter.addDataAuthority(java.lang.String,java.lang.String)", "android.content.IntentFilter.addAction(java.lang.String)", "android.view.OrientationEventListener.<init>(android.content.Context)", "android.view.WindowManager.getDefaultDisplay()", "android.util.DisplayMetrics.<init>()", "android.util.DisplayMetrics.toString()", "android.view.Display.getMetrics(android.util.DisplayMetrics)", "android.view.Display.getOrientation()", "android.view.Display.getWidth()", "android.view.Display.getHeight()", "java.lang.Math.min(long,long)", "java.lang.Math.max(long,long)", "java.lang.Math.floor(long)", "java.lang.Math.round(long)", "java.lang.Math.abs(long)", "java.lang.Math.random()", "android.view.KeyEvent.getFlags()", "android.view.KeyEvent.getRepeatCount()", "android.view.KeyEvent.isAltPressed()", "android.view.KeyEvent.getUnicodeChar()", "android.location.LocationManager.removeUpdates(android.location.LocationListener)", "android.location.LocationManager.requestLocationUpdates(android.location.LocationListener,long,long,java.lang.String)", "android.location.LocationManager.getBestProvider(long,android.location.Criteria)", "android.location.LocationManager.getLastKnownLocation(java.lang.String)", "android.location.Criteria.<init>()", "android.location.Criteria.setAltitudeRequired(long)", "android.location.Criteria.setBearingRequired(long)", "android.location.Criteria.setCostAllowed(long)", "android.location.Criteria.setAccuracy(long)", "android.location.Criteria.setHorizontalAccuracy(long)", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "android.location.Location.getAccuracy()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(long,android.os.IBinder)", "android.view.inputmethod.InputMethodManager.showSoftInput(long,android.view.View)", "android.view.Window.setSoftInputMode(long)", "android.view.Window.setFlags(long,long)", "android.view.Window.getDecorView()", "android.content.pm.PackageManager.NameNotFoundException.printStackTrace()", "android.os.Process.myPid()", "android.os.Process.killProcess(long)", "android.widget.FrameLayout.<init>(android.content.Context)", "android.widget.FrameLayout.addView(android.view.View)", "android.widget.FrameLayout.removeAllViews()", "android.widget.FrameLayout.getParent()", "android.app.AlertDialog.Builder.<init>(android.content.Context)", "android.app.AlertDialog.Builder.setCancelable(long)", "android.app.AlertDialog.Builder.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.Builder.setPositiveButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setNeutralButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.setNegativeButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.app.AlertDialog.Builder.create()", "android.app.AlertDialog.Builder.setOnKeyListener(android.content.DialogInterface.OnKeyListener)", "java.lang.Thread.currentThread()", "java.lang.Thread.toString()", "java.lang.Thread.sleep(long)", "java.lang.Thread.<init>()", "java.lang.Thread.<init>(java.lang.Runnable)", "java.lang.Thread.start()", "android.content.DialogInterface.dismiss()", "android.content.res.Resources.getConfiguration()", "android.content.res.Resources.getDisplayMetrics()", "android.os.PowerManager.newWakeLock(java.lang.String,long)", "android.os.PowerManager.WakeLock.acquire()", "android.os.PowerManager.WakeLock.isHeld()", "android.os.PowerManager.WakeLock.release()", "android.telephony.TelephonyManager.getDeviceId()", "android.telephony.TelephonyManager.getLine1Number()", "android.telephony.TelephonyManager.getNetworkOperatorName()", "android.telephony.TelephonyManager.getPhoneType()", "java.io.BufferedInputStream.<init>(java.io.InputStream)", "java.io.FileInputStream.<init>(java.lang.String)", "java.io.FileInputStream.read()", "java.io.FileInputStream.close()", "java.io.FileInputStream.<init>(java.io.File)", "java.io.InputStream.read(long)", "java.io.InputStream.close()", "java.util.Locale.getDefault()", "java.util.Locale.getLanguage()", "java.util.Locale.toString()", "java.util.Locale.getCountry()", "android.view.InputDevice.getDeviceIds()", "android.view.InputDevice.getDevice(long)", "android.view.InputDevice.getSources()", "java.lang.reflect.Method.invoke([Ljava.lang.Object,java.lang.Object)", "java.lang.Boolean.booleanValue()", "java.lang.Boolean.valueOf(long)", "java.lang.Boolean.parseBoolean(java.lang.String)", "android.net.Uri.parse(java.lang.String)", "android.net.Uri.getQueryParameter(java.lang.String)", "android.os.Vibrator.cancel()", "android.os.Vibrator.vibrate(long)", "android.widget.EditText.<init>(android.content.Context)", "android.widget.EditText.onKeyDown(android.view.KeyEvent,long)", "android.widget.EditText.onKeyPreIme(android.view.KeyEvent,long)", "android.widget.EditText.onKeyUp(android.view.KeyEvent,long)", "android.widget.EditText.onTextChanged(long,long,long,java.lang.CharSequence)", "java.lang.CharSequence.length()", "java.lang.CharSequence.charAt(long)", "java.lang.StringBuffer.<init>(java.lang.String)", "java.lang.StringBuffer.append(long)", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.indexOf(java.lang.String)", "java.lang.StringBuffer.substring(long,long)", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.<init>()", "java.lang.StringBuffer.append(java.lang.String)", "java.io.FileOutputStream.write(long)", "java.io.FileOutputStream.close()", "java.io.FileOutputStream.<init>(long,java.lang.String)", "java.io.FileOutputStream.<init>(java.lang.String)", "java.io.FileOutputStream.<init>(java.io.File)", "android.app.AlertDialog.dismiss()", "android.app.AlertDialog.show()", "android.app.AlertDialog.setMessage(java.lang.CharSequence)", "android.app.AlertDialog.setCancelable(long)", "android.app.AlertDialog.setCanceledOnTouchOutside(long)", "android.app.AlertDialog.setButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence,long)", "android.app.AlertDialog.isShowing()", "android.app.AlertDialog.setTitle(java.lang.CharSequence)", "android.app.AlertDialog.setOnCancelListener(android.content.DialogInterface.OnCancelListener)", "android.app.AlertDialog.setButton(android.content.DialogInterface.OnClickListener,java.lang.CharSequence)", "android.net.wifi.WifiManager.isWifiEnabled()", "android.net.wifi.WifiManager.getConnectionInfo()", "android.net.wifi.WifiManager.setWifiEnabled(long)", "android.net.wifi.WifiManager.createWifiLock(java.lang.String,long)", "android.net.wifi.WifiManager.calculateSignalLevel(long,long)", "android.net.wifi.WifiInfo.getSupplicantState()", "android.net.wifi.WifiInfo.getSSID()", "android.net.wifi.WifiInfo.getRssi()", "android.provider.Settings.Secure.getString(java.lang.String,android.content.ContentResolver)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.print(java.lang.Object)", "java.util.Properties.<init>()", "java.util.Properties.load(java.io.InputStream)", "java.util.Properties.getProperty(java.lang.String)", "android.content.res.AssetManager.open(java.lang.String)", "java.io.OutputStream.flush()", "java.io.OutputStream.close()", "java.io.OutputStream.write(long)", "java.io.OutputStream.write(long,long,long)", "java.io.IOException.printStackTrace()", "java.lang.Throwable.printStackTrace()", "android.net.ConnectivityManager.startUsingNetworkFeature(java.lang.String,long)", "android.net.ConnectivityManager.requestRouteToHost(long,long)", "android.net.ConnectivityManager.setNetworkPreference(long)", "android.net.ConnectivityManager.getActiveNetworkInfo()", "java.net.URL.<init>(java.lang.String)", "java.net.URL.toString()", "java.net.URL.openConnection()", "java.net.URL.openStream()", "java.net.HttpURLConnection.connect()", "java.net.HttpURLConnection.getResponseCode()", "java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.net.HttpURLConnection.getContentLength()", "java.io.BufferedReader.<init>(java.io.Reader)", "java.io.BufferedReader.readLine()", "java.io.BufferedReader.<init>(long,java.io.Reader)", "java.io.BufferedReader.close()", "java.io.InputStreamReader.<init>(java.io.InputStream)", "java.net.InetAddress.getByName(java.lang.String)", "java.net.InetAddress.getAddress()", "android.provider.Settings.System.getInt(java.lang.String,android.content.ContentResolver)", "java.io.FileReader.<init>(java.io.File)", "java.io.DataInputStream.close()", "java.io.DataInputStream.<init>(java.io.InputStream)", "java.io.DataInputStream.readUnsignedShort()", "java.io.DataInputStream.skipBytes(long)", "java.util.Hashtable.<init>()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "java.util.Hashtable.keys()", "java.util.Hashtable.get(java.lang.Object)", "java.util.Hashtable.containsKey(java.lang.Object)", "java.util.Hashtable.remove(java.lang.Object)", "java.util.Hashtable.isEmpty()", "java.util.Enumeration.hasMoreElements()", "java.util.Enumeration.nextElement()", "java.io.FileWriter.<init>(long,java.lang.String)", "java.io.FileWriter.close()", "java.io.BufferedWriter.<init>(long,java.io.Writer)", "java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.close()", "java.util.zip.CheckedInputStream.<init>(java.util.zip.Checksum,java.io.InputStream)", "java.util.zip.CheckedInputStream.read(long)", "java.util.zip.CheckedInputStream.getChecksum()", "java.util.zip.CRC32.<init>()", "java.util.zip.Checksum.getValue()", "android.graphics.Paint.<init>()", "android.graphics.Paint.setColor(long)", "android.graphics.Paint.setStrokeWidth(long)", "android.graphics.Paint.setAntiAlias(long)", "android.graphics.Paint.setStyle(android.graphics.Paint.Style)", "android.graphics.Paint.setARGB(long,long,long,long)", "android.graphics.RectF.<init>(long,long,long,long)", "android.graphics.Canvas.drawRect(android.graphics.Paint,android.graphics.RectF)", "android.graphics.Canvas.getWidth()", "android.graphics.Canvas.getHeight()", "android.graphics.Canvas.drawBitmap(android.graphics.Paint,long,long,android.graphics.Bitmap)", "android.view.View.MeasureSpec.getSize(long)", "android.graphics.BitmapFactory.Options.<init>()", "android.graphics.BitmapFactory.decodeStream(android.graphics.BitmapFactory.Options,android.graphics.Rect,java.io.InputStream)", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap)", "android.graphics.Bitmap.recycle()", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.widget.ImageView.<init>(android.content.Context)", "android.widget.ImageView.setId(long)", "android.widget.ImageView.setPadding(long,long,long,long)", "android.widget.ImageView.setClickable(long)", "java.lang.Float.valueOf(long)", "java.lang.Float.isNaN(long)", "java.lang.Float.isInfinite(long)", "android.graphics.drawable.Drawable.<init>()", "java.util.EnumSet.of(java.lang.Enum)", "java.util.EnumSet.add(java.lang.Object)", "java.util.Arrays.asList([Ljava.lang.Object)", "java.net.MalformedURLException.printStackTrace()", "java.io.RandomAccessFile.<init>(java.lang.String,java.io.File)", "java.io.RandomAccessFile.seek(long)", "java.io.RandomAccessFile.close()", "java.io.RandomAccessFile.write(long,long,long)", "java.io.RandomAccessFile.getFilePointer()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "javax.microedition.khronos.opengles.GL10.glGetString(long)", "javax.microedition.khronos.opengles.GL11.glGetString(long)", "android.net.NetworkInfo.isConnected()", "android.net.NetworkInfo.getType()", "android.net.NetworkInfo.isAvailable()", "android.os.SystemClock.uptimeMillis()", "java.util.Timer.<init>()", "java.util.Timer.schedule(long,long,java.util.TimerTask)", "java.util.Timer.cancel()", "java.util.TimerTask.<init>()", "java.io.DataInput.readUnsignedShort()", "java.io.DataInput.readUnsignedByte()", "java.util.Vector.<init>()", "java.util.Vector.addElement(java.lang.Object)", "java.util.Vector.elementAt(long)", "android.net.wifi.WifiManager.WifiLock.isHeld()", "android.net.wifi.WifiManager.WifiLock.acquire()", "android.net.wifi.WifiManager.WifiLock.release()", "java.io.StringWriter.<init>()", "java.io.StringWriter.toString()", "java.io.PrintWriter.<init>(java.io.Writer)", "android.os.StatFs.<init>(java.lang.String)", "android.os.StatFs.getBlockSize()", "android.os.StatFs.getAvailableBlocks()", "android.os.StatFs.getBlockCount()", "android.os.CountDownTimer.<init>(long,long)", "android.os.CountDownTimer.start()", "java.util.zip.ZipInputStream.<init>(java.io.InputStream)", "java.util.zip.ZipInputStream.getNextEntry()", "java.util.zip.ZipEntry.getSize()", "java.util.zip.ZipEntry.isDirectory()", "java.util.zip.ZipEntry.getName()", "java.util.zip.ZipEntry.getCompressedSize()", "java.security.MessageDigest.getInstance(java.lang.String)", "java.security.MessageDigest.digest(long)", "java.math.BigInteger.<init>(long,long)", "java.math.BigInteger.toString(long)", "java.lang.IllegalStateException.<init>(java.lang.String)", "java.lang.NullPointerException.<init>(java.lang.String)", "java.util.Collection.iterator()", "java.lang.Double.toString(long)", "java.util.Collections.addAll([Ljava.lang.Object,java.util.Collection)", "android.database.sqlite.SQLiteOpenHelper.<init>(long,android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,android.content.Context)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.beginTransaction()", "android.database.sqlite.SQLiteDatabase.insert(android.content.ContentValues,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()", "android.database.sqlite.SQLiteDatabase.inTransaction()", "android.database.sqlite.SQLiteDatabase.endTransaction()", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.isReadOnly()", "android.database.sqlite.SQLiteDatabase.delete([Ljava.lang.String,java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.rawQuery([Ljava.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.update([Ljava.lang.String,java.lang.String,android.content.ContentValues,java.lang.String)", "android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)", "android.database.sqlite.SQLiteDatabase.close()", "android.database.Cursor.getColumnNames()", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(long)", "android.database.Cursor.getLong(long)", "android.database.Cursor.close()", "android.database.Cursor.getInt(long)", "android.database.Cursor.moveToNext()", "android.database.Cursor.getDouble(long)", "android.database.Cursor.getCount()", "android.database.Cursor.isClosed()", "android.content.ContentValues.<init>()", "android.content.ContentValues.put(java.lang.String,java.lang.String)", "android.content.ContentValues.put(java.lang.Long,java.lang.String)", "android.content.ContentValues.put(java.lang.Integer,java.lang.String)", "android.database.sqlite.SQLiteException.toString()", "java.lang.NumberFormatException.toString()", "java.lang.NumberFormatException.<init>(java.lang.String)", "android.database.sqlite.SQLiteStatement.bindString(java.lang.String,long)", "android.database.sqlite.SQLiteStatement.executeInsert()", "java.util.TimeZone.getTimeZone(java.lang.String)", "java.util.Calendar.getInstance(java.util.TimeZone)", "java.util.Calendar.set(long,long)", "java.util.Calendar.getTime()", "java.util.Date.getTime()", "java.lang.ArithmeticException.<init>(java.lang.String)", "java.util.Random.nextInt()", "java.util.Random.<init>()", "java.lang.Character.digit(long,long)", "java.util.Stack.<init>()", "java.util.Stack.empty()", "java.util.Stack.pop()", "java.util.Stack.push(java.lang.Object)"]
}